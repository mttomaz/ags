#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gLi-ags.js"

cat <<EOF | base64 --decode > $file
// ../../../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib2 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Astal from "gi://Astal?version=4.0";

// ../../../../../../usr/share/ags/js/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris: Mpris2, Player }) => {
  patch(Mpris2.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification: Notification2 }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification2.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../../../usr/share/ags/js/lib/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject2 from "gi://GObject";

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject from "gi://GObject";
import Gio from "gi://Gio";
import GLib from "gi://GLib";

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject2.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject3.Object, _b = GObject3.signals, _a = GObject3.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject3.TYPE_OBJECT, GObject3.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const currentScope = getScope();
  const fragment = new Fragment();
  let scope;
  function callback(v) {
    for (const child of fragment.children) {
      fragment.removeChild(child);
      if (typeof cleanup === "function") {
        cleanup(child);
      } else if (cleanup !== null) {
        env.defaultCleanup(child);
      }
      if (scope) scope.dispose();
    }
    scope = new Scope(currentScope);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    scope.dispose();
    dispose();
  });
  return fragment;
}

// ../../../../../../usr/share/ags/js/lib/_app.ts
import IO from "gi://AstalIO";
import GObject4 from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject4.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler: requestHandler2, css, hold, main, client, icons, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler2;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons) app.add_icons(icons);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk.init();
GLib2.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw2 }) => Adw2.init()).catch(() => void 0);
var app_default = mkApp(Astal.Application);

// ../../../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal2 from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// windows/bar/Bar.tsx
import Gtk5 from "gi://Gtk?version=4.0";
import AstalBattery from "gi://AstalBattery";
import AstalBluetooth from "gi://AstalBluetooth";
import AstalHyprland from "gi://AstalHyprland";
import AstalMpris from "gi://AstalMpris";
import AstalNetwork from "gi://AstalNetwork";
import AstalTray from "gi://AstalTray";

// common/vars.ts
import GLib3 from "gi://GLib";

// ../../../../../../usr/share/ags/js/lib/process.ts
import AstalIO from "gi://AstalIO";
var Process = AstalIO.Process;
function exec(cmd) {
  return Array.isArray(cmd) ? AstalIO.Process.execv(cmd) : AstalIO.Process.exec(cmd);
}
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// common/vars.ts
import Mpris from "gi://AstalMpris";

// ../../../../../../usr/share/ags/js/lib/time.ts
import AstalIO2 from "gi://AstalIO";
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// common/vars.ts
var [showBar, setShowBar] = createState(true);
var [showLeftSidebar, setShowLeftSidebar] = createState(false);
var [showRightSidebar, setShowRightSidebar] = createState(false);
var [showCrosshair, setShowCrosshair] = createState(false);
var [showLauncher, setShowLauncher] = createState(false);
var [doNotDisturb, setDoNotDisturb] = createState(false);
var [nightLightEnabled, setNightLightEnabled] = createState(false);
var [notificationsLength, setNotificationsLength] = createState(0);
var [sidebarPanel, setSidebarPanel] = createState("main");
var spotifyPlayer = Mpris.Player.new("spotify");
execAsync("pgrep -x hyprsunset").then(() => setNightLightEnabled(true)).catch(() => setNightLightEnabled(false));
var currentTime = createPoll("", 1e3, () => GLib3.DateTime.new_now_local().format("%H:%M"));
var currentDay = createPoll("", 1e3, () => GLib3.DateTime.new_now_local().format("^%A, %d de ^%B"));
var uptime = createPoll("", 5 * 60 * 1e3, async () => {
  const output = await execAsync("uptime -p");
  return output.replace(/ minutes| minute/, "m").replace(/ hours| hour/, "h").replace(/ days| day/, "d").replace(/ weeks| week/, "w");
});
var memoryUsage = createPoll("", 5 * 1e3, async () => {
  const output = await execAsync(["sh", "-c", `free --mega | awk 'NR==2{print $3 " MB"}'`]);
  return output;
});

// ../../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal3 from "gi://Astal?version=4.0";

// ../../../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject5 from "gi://GObject";
var dummyBuilder = new Gtk3.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
    return parent.remove_controller(child);
  }
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject5.Object)) {
      child = Gtk3.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk3.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal3.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal3.Window
});

// windows/bar/Bar.tsx
function TrayModule() {
  const tray = AstalTray.get_default();
  const items = createBinding(tray, "items");
  const init = (btn, item) => {
    btn.menuModel = item.menuModel;
    btn.insert_action_group("dbusmenu", item.actionGroup);
    item.connect("notify::action-group", () => {
      btn.insert_action_group("dbusmenu", item.actionGroup);
    });
  };
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(For, { each: items, children: (item) => /* @__PURE__ */ jsx("menubutton", { $: (self) => init(self, item), children: /* @__PURE__ */ jsx("image", { gicon: createBinding(item, "gicon") }) }) }) });
}
function NetworkModule() {
  const network = AstalNetwork.get_default();
  const wifi = createBinding(network, "wifi");
  const wired = createBinding(network, "wired");
  return /* @__PURE__ */ jsxs("box", { children: [
    /* @__PURE__ */ jsx("box", { visible: wifi(Boolean), children: /* @__PURE__ */ jsx(With, { value: wifi, children: (wifi2) => wifi2 && /* @__PURE__ */ jsx("image", { iconName: createBinding(wifi2, "iconName") }) }) }),
    /* @__PURE__ */ jsx("box", { visible: wired(Boolean), children: /* @__PURE__ */ jsx(With, { value: wired, children: (wired2) => wired2 && /* @__PURE__ */ jsx("image", { iconName: createBinding(wired2, "iconName") }) }) })
  ] });
}
function BluetoothModule() {
  const bluetooth = AstalBluetooth.get_default();
  return /* @__PURE__ */ jsx(
    "revealer",
    {
      transitionType: Gtk5.RevealerTransitionType.SLIDE_LEFT,
      revealChild: createBinding(bluetooth, "is_connected"),
      children: /* @__PURE__ */ jsx("label", { class: "Bluetooth", label: "\u{F00B1}" })
    }
  );
}
function BatteryModule() {
  const bat = AstalBattery.get_default();
  return /* @__PURE__ */ jsxs(
    "box",
    {
      class: "Battery",
      visible: createBinding(bat, "isPresent"),
      children: [
        /* @__PURE__ */ jsx("label", { label: createBinding(bat, "percentage").as((p) => `${Math.floor(p * 100)}%`) }),
        /* @__PURE__ */ jsx("image", { iconName: createBinding(bat, "batteryIconName") })
      ]
    }
  );
}
function getTitle(player) {
  return player.artist ? `${player.artist}: ${player.title}` : player.album ? `${player.album}: ${player.title}` : `${player.title}`;
}
function MediaModule() {
  const mpris = AstalMpris.get_default();
  return /* @__PURE__ */ jsx(With, { value: createBinding(mpris, "players"), children: (ps) => ps[0] ? /* @__PURE__ */ jsx(
    "button",
    {
      class: "Media",
      onClicked: () => ps[0].play_pause(),
      children: /* @__PURE__ */ jsx(
        "label",
        {
          class: createBinding(ps[0], "playbackStatus").as((s) => s > 0 ? "paused" : "playing"),
          maxWidthChars: 80,
          label: createBinding(ps[0], "metadata").as(() => getTitle(ps[0]))
        }
      )
    }
  ) : /* @__PURE__ */ jsx("box", {}) });
}
function Workspaces() {
  const hypr = AstalHyprland.get_default();
  const workspaces = createBinding(hypr, "workspaces");
  const sorted = (arr) => {
    return arr.filter((ws) => !(ws.id >= -99 && ws.id <= -2)).sort((a, b) => a.id - b.id);
  };
  return /* @__PURE__ */ jsx("box", { class: "Workspaces", children: /* @__PURE__ */ jsx(For, { each: workspaces(sorted), children: (ws) => /* @__PURE__ */ jsx(
    "button",
    {
      class: createBinding(hypr, "focusedWorkspace").as((fw) => ws === fw ? "focused" : ""),
      onClicked: () => ws.focus(),
      children: ws.id
    }
  ) }) });
}
function NotificationBell() {
  return /* @__PURE__ */ jsx(
    "revealer",
    {
      transitionType: Gtk5.RevealerTransitionType.SLIDE_LEFT,
      revealChild: notificationsLength.as((l) => l > 1),
      children: /* @__PURE__ */ jsx("label", { class: "NotificationBell", label: "\u{F116B}" })
    }
  );
}
function Memory() {
  return /* @__PURE__ */ jsx(With, { value: memoryUsage, children: (memoryUsage2) => /* @__PURE__ */ jsx(
    "label",
    {
      class: "Memory",
      label: memoryUsage2
    }
  ) });
}
function Time2() {
  return /* @__PURE__ */ jsx(With, { value: currentTime, children: (time2) => /* @__PURE__ */ jsx("label", { label: time2 }) });
}
function Bar(monitor, visible) {
  const { TOP, LEFT, RIGHT } = Astal2.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      class: "Bar",
      namespace: "bar",
      gdkmonitor: monitor,
      exclusivity: Astal2.Exclusivity.EXCLUSIVE,
      application: app_default,
      visible,
      layer: Astal2.Layer.TOP,
      anchor: TOP | LEFT | RIGHT,
      children: /* @__PURE__ */ jsxs("centerbox", { children: [
        /* @__PURE__ */ jsxs(
          "box",
          {
            hexpand: true,
            $type: "start",
            halign: Gtk5.Align.START,
            css: "margin-left: 4px",
            children: [
              /* @__PURE__ */ jsx(
                "button",
                {
                  class: "TimeAndWeather",
                  onClicked: () => setShowLeftSidebar(!showLeftSidebar.get()),
                  children: /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(Time2, {}) })
                }
              ),
              /* @__PURE__ */ jsx(Workspaces, {})
            ]
          }
        ),
        /* @__PURE__ */ jsx(
          "box",
          {
            hexpand: true,
            halign: Gtk5.Align.CENTER,
            $type: "center",
            children: /* @__PURE__ */ jsx(MediaModule, {})
          }
        ),
        /* @__PURE__ */ jsxs(
          "box",
          {
            hexpand: true,
            $type: "end",
            halign: Gtk5.Align.END,
            css: "margin-right: 4px",
            children: [
              /* @__PURE__ */ jsx(TrayModule, {}),
              /* @__PURE__ */ jsx(
                "button",
                {
                  class: "TimeAndWeather",
                  onClicked: () => setShowRightSidebar(!showRightSidebar.get()),
                  children: /* @__PURE__ */ jsxs("box", { children: [
                    /* @__PURE__ */ jsx(BatteryModule, {}),
                    /* @__PURE__ */ jsx(NetworkModule, {}),
                    /* @__PURE__ */ jsx(BluetoothModule, {}),
                    /* @__PURE__ */ jsx(NotificationBell, {}),
                    /* @__PURE__ */ jsx(Memory, {})
                  ] })
                }
              )
            ]
          }
        )
      ] })
    }
  );
}

// requestHandler.ts
function requestHandler(request, res) {
  const args = request.split(":");
  switch (args[0]) {
    case "bar":
      switch (args[1]) {
        case "toggle":
          return res(setShowBar(!showBar.get()));
        default:
          return res("Unknown command for bar.");
      }
    case "crosshair":
      switch (args[1]) {
        case "toggle":
          return res(setShowCrosshair(!showCrosshair.get()));
        default:
          return res("Unknown command for crosshair.");
      }
    default:
      return res("Unknown request.");
  }
}

// ../../../../../../usr/share/ags/js/lib/file.ts
import Astal4 from "gi://AstalIO";
function monitorFile(path, callback) {
  return Astal4.monitor_file(path, (file, event) => {
    callback(file, event);
  });
}

// common/cssHotReload.ts
var TMP = "/tmp";
function compileScss() {
  try {
    exec(`sass ${"/home/broa/Documents/dev/ts/ags"}/style.scss ${TMP}/style.css`);
    app_default.apply_css("/tmp/style.css");
    return `${TMP}/style.scss`;
  } catch (err) {
    printerr("Error compiling scss files.", err);
    return "";
  }
}
(function() {
  const scssFiles = exec(`find -L ${"/home/broa/Documents/dev/ts/ags"} -iname '*.scss'`).split("\n");
  compileScss();
  scssFiles.forEach(
    (file) => monitorFile(file, compileScss)
  );
})();

// windows/notification_popups/NotificationPopups.tsx
import AstalNotifd2 from "gi://AstalNotifd";

// widgets/Notification/Notification.tsx
import Gtk6 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";
import Adw from "gi://Adw";
import GLib4 from "gi://GLib";
import AstalNotifd from "gi://AstalNotifd";
import Pango from "gi://Pango";
function isIcon(icon) {
  const iconTheme = Gtk6.IconTheme.get_for_display(Gdk2.Display.get_default());
  return icon && iconTheme.has_icon(icon);
}
function fileExists(path) {
  return GLib4.file_test(path, GLib4.FileTest.EXISTS);
}
function time(time2, format = "%H:%M") {
  return GLib4.DateTime.new_from_unix_local(time2).format(format);
}
function urgency(n) {
  const { LOW, NORMAL, CRITICAL } = AstalNotifd.Urgency;
  switch (n.urgency) {
    case LOW:
      return "low";
    case CRITICAL:
      return "critical";
    case NORMAL:
    default:
      return "normal";
  }
}
function Notification({ notification: n }) {
  return /* @__PURE__ */ jsx(Adw.Clamp, { maximumSize: 400, children: /* @__PURE__ */ jsxs(
    "box",
    {
      widthRequest: 400,
      class: `Notification ${urgency(n)}`,
      orientation: Gtk6.Orientation.VERTICAL,
      children: [
        /* @__PURE__ */ jsxs("box", { class: "header", children: [
          (n.appIcon || isIcon(n.desktopEntry)) && /* @__PURE__ */ jsx(
            "image",
            {
              class: "app-icon",
              visible: Boolean(n.appIcon || n.desktopEntry),
              iconName: n.appIcon || n.desktopEntry
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "app-name",
              halign: Gtk6.Align.START,
              ellipsize: Pango.EllipsizeMode.END,
              label: n.appName || "Unknown"
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "time",
              hexpand: true,
              halign: Gtk6.Align.END,
              label: time(n.time)
            }
          ),
          /* @__PURE__ */ jsx("button", { onClicked: () => n.dismiss(), children: /* @__PURE__ */ jsx("image", { iconName: "window-close-symbolic" }) })
        ] }),
        /* @__PURE__ */ jsx(Gtk6.Separator, { visible: true }),
        /* @__PURE__ */ jsxs("box", { class: "content", children: [
          n.image && fileExists(n.image) && /* @__PURE__ */ jsx("image", { valign: Gtk6.Align.START, class: "image", file: n.image }),
          n.image && isIcon(n.image) && /* @__PURE__ */ jsx("box", { valign: Gtk6.Align.START, class: "icon-image", children: /* @__PURE__ */ jsx(
            "image",
            {
              iconName: n.image,
              halign: Gtk6.Align.CENTER,
              valign: Gtk6.Align.CENTER
            }
          ) }),
          /* @__PURE__ */ jsxs("box", { orientation: Gtk6.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx(
              "label",
              {
                class: "summary",
                halign: Gtk6.Align.START,
                xalign: 0,
                label: n.summary,
                ellipsize: Pango.EllipsizeMode.END
              }
            ),
            n.body && /* @__PURE__ */ jsx(
              "label",
              {
                class: "body",
                wrap: true,
                useMarkup: true,
                halign: Gtk6.Align.START,
                xalign: 0,
                justify: Gtk6.Justification.FILL,
                label: n.body
              }
            )
          ] })
        ] }),
        n.actions.length > 0 && /* @__PURE__ */ jsx("box", { class: "actions", children: n.actions.map(({ label, id }) => /* @__PURE__ */ jsx("button", { hexpand: true, onClicked: () => n.invoke(id), children: /* @__PURE__ */ jsx("label", { label, halign: Gtk6.Align.CENTER, hexpand: true }) })) })
      ]
    }
  ) });
}

// windows/notification_popups/NotificationPopups.tsx
function NotificationPopups(monitor) {
  const notifd = AstalNotifd2.get_default();
  const [notifications, setNotifications] = createState(
    new Array()
  );
  const notifiedHandler = notifd.connect("notified", (_, id, replaced) => {
    const notification = notifd.get_notification(id);
    if (replaced && notifications.get().some((n) => n.id === id)) {
      setNotifications((ns) => ns.map((n) => n.id === id ? notification : n));
    } else {
      setNotifications((ns) => [notification, ...ns]);
    }
  });
  const resolvedHandler = notifd.connect("resolved", (_, id) => {
    setNotifications((ns) => ns.filter((n) => n.id !== id));
  });
  onCleanup(() => {
    notifd.disconnect(notifiedHandler);
    notifd.disconnect(resolvedHandler);
  });
  return /* @__PURE__ */ jsx(
    "window",
    {
      $: (self) => onCleanup(() => self.destroy()),
      class: "NotificationPopups",
      gdkmonitor: monitor,
      application: app_default,
      visible: notifications((ns) => {
        setNotificationsLength(ns.length);
        return ns.length > 0;
      }),
      anchor: Astal2.WindowAnchor.TOP | Astal2.WindowAnchor.RIGHT,
      children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsx(For, { each: notifications, children: (notification) => /* @__PURE__ */ jsx(Notification, { notification }) }) })
    }
  );
}

// windows/crosshair/Crosshair.tsx
function Crosshair(monitor, visible) {
  return /* @__PURE__ */ jsx(
    "window",
    {
      class: "Crosshair",
      namespace: "crosshair",
      gdkmonitor: monitor,
      visible,
      layer: Astal2.Layer.OVERLAY,
      application: app_default,
      exclusivity: Astal2.Exclusivity.IGNORE,
      keymode: Astal2.Keymode.NONE,
      canFocus: false,
      children: /* @__PURE__ */ jsx(
        "box",
        {
          class: "Dot"
        }
      )
    }
  );
}

// app.ts
function getTargetMonitor(monitors) {
  const notebookModel = "0x9051";
  const pcModel = "24G2W1G4";
  const notebookMonitor = monitors.find((m) => m.model === notebookModel);
  const pcMonitor = monitors.find((m) => m.model === pcModel);
  return notebookMonitor || pcMonitor || monitors[0];
}
app_default.start({
  css: compileScss(),
  instanceName: "agsv3",
  requestHandler,
  main() {
    const targetMonitor = getTargetMonitor(app_default.get_monitors());
    Bar(targetMonitor, showBar);
    NotificationPopups(targetMonitor);
    Crosshair(targetMonitor, showCrosshair);
    print(`
Astal Windows applied on monitor: ${targetMonitor.model}`);
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9qc3gudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvdXRpbC50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3Njb3BlLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2dub21lL3NpZ25hbFRyYWNrZXIudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9Gb3IudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9XaXRoLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvaW5kZXgudHMiLCAid2luZG93cy9iYXIvQmFyLnRzeCIsICJjb21tb24vdmFycy50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9wcm9jZXNzLnRzIiwgIi4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3RpbWUudHMiLCAiLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ3RrNC9qc3gtcnVudGltZS50cyIsICJyZXF1ZXN0SGFuZGxlci50cyIsICIuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9maWxlLnRzIiwgImNvbW1vbi9jc3NIb3RSZWxvYWQudHMiLCAid2luZG93cy9ub3RpZmljYXRpb25fcG9wdXBzL05vdGlmaWNhdGlvblBvcHVwcy50c3giLCAid2lkZ2V0cy9Ob3RpZmljYXRpb24vTm90aWZpY2F0aW9uLnRzeCIsICJ3aW5kb3dzL2Nyb3NzaGFpci9Dcm9zc2hhaXIudHN4IiwgImFwcC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgbWtBcHAgfSBmcm9tIFwiLi4vX2FwcC5qc1wiXG5cbkd0ay5pbml0KClcblxuLy8gc3RvcCB0aGlzIGZyb20gbGVha2luZyBpbnRvIHN1YnByb2Nlc3Nlc1xuLy8gYW5kIGdpbyBsYXVuY2ggaW52b2NhdGlvbnNcbkdMaWIudW5zZXRlbnYoXCJMRF9QUkVMT0FEXCIpXG5cbi8vIHVzZXJzIG1pZ2h0IHdhbnQgdG8gdXNlIEFkd2FpdGEgaW4gd2hpY2ggY2FzZSBpdCBoYXMgdG8gYmUgaW5pdGlhbGl6ZWRcbi8vIGl0IG1pZ2h0IGJlIGNvbW1vbiBwaXRmYWxsIHRvIGZvcmdldCBpdCBiZWNhdXNlIGBBcHBgIGlzIG5vdCBgQWR3LkFwcGxpY2F0aW9uYFxuYXdhaXQgaW1wb3J0KFwiZ2k6Ly9BZHc/dmVyc2lvbj0xXCIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMClcblxuZXhwb3J0IGRlZmF1bHQgbWtBcHAoQXN0YWwuQXBwbGljYXRpb24pXG4iLCAiLyoqXG4gKiBXb3JrYXJvdW5kIGZvciBcIkNhbid0IGNvbnZlcnQgbm9uLW51bGwgcG9pbnRlciB0byBKUyB2YWx1ZSBcIlxuICovXG5cbmV4cG9ydCB7fVxuXG5mdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDFfJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5hc3luYyBmdW5jdGlvbiBzdXBwcmVzczxUPihtb2Q6IFByb21pc2U8eyBkZWZhdWx0OiBUIH0+LCBwYXRjaDogKG06IFQpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gbW9kLnRoZW4oKG0pID0+IHBhdGNoKG0uZGVmYXVsdCkpLmNhdGNoKCgpID0+IHZvaWQgMClcbn1cblxuZnVuY3Rpb24gcGF0Y2g8UCBleHRlbmRzIG9iamVjdD4ocHJvdG86IFAsIHByb3A6IEV4dHJhY3Q8a2V5b2YgUCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90bywgcHJvcCwge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1tgZ2V0XyR7c25ha2VpZnkocHJvcCl9YF0oKVxuICAgICAgICB9LFxuICAgIH0pXG59XG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxBcHBzXCIpLCAoeyBBcHBzLCBBcHBsaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goQXBwcy5wcm90b3R5cGUsIFwibGlzdFwiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJrZXl3b3Jkc1wiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJjYXRlZ29yaWVzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmF0dGVyeVwiKSwgKHsgVVBvd2VyIH0pID0+IHtcbiAgICBwYXRjaChVUG93ZXIucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCbHVldG9vdGhcIiksICh7IEFkYXB0ZXIsIEJsdWV0b290aCwgRGV2aWNlIH0pID0+IHtcbiAgICBwYXRjaChBZGFwdGVyLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiYWRhcHRlcnNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChEZXZpY2UucHJvdG90eXBlLCBcInV1aWRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsSHlwcmxhbmRcIiksICh7IEh5cHJsYW5kLCBNb25pdG9yLCBXb3Jrc3BhY2UgfSkgPT4ge1xuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJiaW5kc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJtb25pdG9yc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJ3b3Jrc3BhY2VzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImNsaWVudHNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVNb2Rlc1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZV9tb2Rlc1wiKVxuICAgIHBhdGNoKFdvcmtzcGFjZS5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE1wcmlzXCIpLCAoeyBNcHJpcywgUGxheWVyIH0pID0+IHtcbiAgICBwYXRjaChNcHJpcy5wcm90b3R5cGUsIFwicGxheWVyc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX3VyaV9zY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRVcmlTY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfbWltZV90eXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkTWltZVR5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJjb21tZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIiksICh7IFdpZmkgfSkgPT4ge1xuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc19wb2ludHNcIilcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NQb2ludHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOb3RpZmRcIiksICh7IE5vdGlmZCwgTm90aWZpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChOb3RpZmQucHJvdG90eXBlLCBcIm5vdGlmaWNhdGlvbnNcIilcbiAgICBwYXRjaChOb3RpZmljYXRpb24ucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxQb3dlclByb2ZpbGVzXCIpLCAoeyBQb3dlclByb2ZpbGVzIH0pID0+IHtcbiAgICBwYXRjaChQb3dlclByb2ZpbGVzLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsV3BcIiksICh7IFdwLCBBdWRpbywgVmlkZW8gfSkgPT4ge1xuICAgIHBhdGNoKFdwLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcIm1pY3JvcGhvbmVzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInNwZWFrZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic2lua3NcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic291cmNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsVHJheVwiKSwgKHsgVHJheSB9KSA9PiB7XG4gICAgcGF0Y2goVHJheS5wcm90b3R5cGUsIFwiaXRlbXNcIilcbn0pXG4iLCAiaW1wb3J0IFwiLi9vdmVycmlkZXMuanNcIlxuaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gXCJjb25zb2xlXCJcbmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSBcInN5c3RlbVwiXG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSBcImduaW1cIlxuaW1wb3J0IElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgdHlwZSBBc3RhbDMgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj0zLjBcIlxuaW1wb3J0IHR5cGUgQXN0YWw0IGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcblxudHlwZSBDb25maWcgPSBQYXJ0aWFsPHtcbiAgICBpbnN0YW5jZU5hbWU6IHN0cmluZ1xuICAgIGNzczogc3RyaW5nXG4gICAgaWNvbnM6IHN0cmluZ1xuICAgIGd0a1RoZW1lOiBzdHJpbmdcbiAgICBpY29uVGhlbWU6IHN0cmluZ1xuICAgIGN1cnNvclRoZW1lOiBzdHJpbmdcbiAgICBob2xkOiBib29sZWFuXG4gICAgcmVxdWVzdEhhbmRsZXIocmVxdWVzdDogc3RyaW5nLCByZXM6IChyZXNwb25zZTogYW55KSA9PiB2b2lkKTogdm9pZFxuICAgIG1haW4oLi4uYXJnczogc3RyaW5nW10pOiB2b2lkXG4gICAgY2xpZW50KG1lc3NhZ2U6IChtc2c6IHN0cmluZykgPT4gc3RyaW5nLCAuLi5hcmdzOiBzdHJpbmdbXSk6IHZvaWRcbn0+XG5cbmludGVyZmFjZSBBc3RhbDNKUyBleHRlbmRzIEFzdGFsMy5BcHBsaWNhdGlvbiB7XG4gICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT5cbiAgICByZXF1ZXN0SGFuZGxlcjogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cbiAgICBhcHBseV9jc3Moc3R5bGU6IHN0cmluZywgcmVzZXQ/OiBib29sZWFuKTogdm9pZFxuICAgIHF1aXQoY29kZT86IG51bWJlcik6IHZvaWRcbiAgICBzdGFydChjb25maWc/OiBDb25maWcpOiB2b2lkXG59XG5cbmludGVyZmFjZSBBc3RhbDRKUyBleHRlbmRzIEFzdGFsNC5BcHBsaWNhdGlvbiB7XG4gICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT5cbiAgICByZXF1ZXN0SGFuZGxlcj86IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0PzogYm9vbGVhbik6IHZvaWRcbiAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkXG4gICAgc3RhcnQoY29uZmlnPzogQ29uZmlnKTogdm9pZFxufVxuXG50eXBlIEFwcDMgPSB0eXBlb2YgQXN0YWwzLkFwcGxpY2F0aW9uXG50eXBlIEFwcDQgPSB0eXBlb2YgQXN0YWw0LkFwcGxpY2F0aW9uXG5cbmV4cG9ydCBmdW5jdGlvbiBta0FwcDxBcHAgZXh0ZW5kcyBBcHAzPihBcHA6IEFwcCk6IEFzdGFsM0pTXG5leHBvcnQgZnVuY3Rpb24gbWtBcHA8QXBwIGV4dGVuZHMgQXBwND4oQXBwOiBBcHApOiBBc3RhbDRKU1xuXG5leHBvcnQgZnVuY3Rpb24gbWtBcHAoQXBwOiBBcHAzIHwgQXBwNCkge1xuICAgIHJldHVybiBuZXcgKGNsYXNzIEFzdGFsSlMgZXh0ZW5kcyBBcHAge1xuICAgICAgICBwcml2YXRlIGRpc3Bvc2VSb290PzogKCkgPT4gdm9pZFxuXG4gICAgICAgIHN0YXRpYyB7XG4gICAgICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3MoeyBHVHlwZU5hbWU6IFwiQXN0YWxKU1wiIH0sIHRoaXMgYXMgYW55KVxuICAgICAgICB9XG5cbiAgICAgICAgZXZhbChib2R5OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZuID0gRnVuY3Rpb24oYHJldHVybiAoYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAke2JvZHkuaW5jbHVkZXMoXCI7XCIpID8gYm9keSA6IGByZXR1cm4gJHtib2R5fTtgfVxuICAgICAgICAgICAgICAgICAgICB9KWApXG4gICAgICAgICAgICAgICAgICAgIGZuKCkoKS50aGVuKHJlcykuY2F0Y2gocmVqKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlaihlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdEhhbmRsZXI/OiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuXG4gICAgICAgIHZmdW5jX3NodXRkb3duKCk6IHZvaWQge1xuICAgICAgICAgICAgc3VwZXIudmZ1bmNfc2h1dGRvd24oKVxuICAgICAgICAgICAgdGhpcy5kaXNwb3NlUm9vdD8uKClcbiAgICAgICAgfVxuXG4gICAgICAgIHZmdW5jX3JlcXVlc3QobXNnOiBzdHJpbmcsIGNvbm46IEdpby5Tb2NrZXRDb25uZWN0aW9uKTogdm9pZCB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucmVxdWVzdEhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIobXNnLCAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgSU8ud3JpdGVfc29jayhjb25uLCBTdHJpbmcocmVzcG9uc2UpLCAoXywgcmVzKSA9PiBJTy53cml0ZV9zb2NrX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN1cGVyLnZmdW5jX3JlcXVlc3QobXNnLCBjb25uKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0ID0gZmFsc2UpIHtcbiAgICAgICAgICAgIHN1cGVyLmFwcGx5X2NzcyhzdHlsZSwgcmVzZXQpXG4gICAgICAgIH1cblxuICAgICAgICBxdWl0KGNvZGU/OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgICAgIHN1cGVyLnF1aXQoKVxuICAgICAgICAgICAgZXhpdChjb2RlID8/IDApXG4gICAgICAgIH1cblxuICAgICAgICBzdGFydCh7IHJlcXVlc3RIYW5kbGVyLCBjc3MsIGhvbGQsIG1haW4sIGNsaWVudCwgaWNvbnMsIC4uLmNmZyB9OiBDb25maWcgPSB7fSkge1xuICAgICAgICAgICAgY29uc3QgYXBwID0gdGhpcyBhcyB1bmtub3duIGFzIEluc3RhbmNlVHlwZTxBcHAzIHwgQXBwND5cblxuICAgICAgICAgICAgY2xpZW50ID8/PSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJpbnQoYEFzdGFsIGluc3RhbmNlIFwiJHthcHAuaW5zdGFuY2VOYW1lfVwiIGFscmVhZHkgcnVubmluZ2ApXG4gICAgICAgICAgICAgICAgZXhpdCgxKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNmZylcbiAgICAgICAgICAgIHNldENvbnNvbGVMb2dEb21haW4oYXBwLmluc3RhbmNlTmFtZSlcblxuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0SGFuZGxlciA9IHJlcXVlc3RIYW5kbGVyXG4gICAgICAgICAgICBhcHAuY29ubmVjdChcImFjdGl2YXRlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzcG9zZVJvb3QgPSBkaXNwb3NlXG4gICAgICAgICAgICAgICAgICAgIG1haW4/LiguLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhcHAuYWNxdWlyZV9zb2NrZXQoKVxuICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsaWVudCgobXNnKSA9PiBJTy5zZW5kX3JlcXVlc3QoYXBwLmluc3RhbmNlTmFtZSwgbXNnKSEsIC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY3NzKSB0aGlzLmFwcGx5X2Nzcyhjc3MsIGZhbHNlKVxuXG4gICAgICAgICAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpXG5cbiAgICAgICAgICAgIGhvbGQgPz89IHRydWVcbiAgICAgICAgICAgIGlmIChob2xkKSBhcHAuaG9sZCgpXG5cbiAgICAgICAgICAgIGFwcC5ydW5Bc3luYyhbXSlcbiAgICAgICAgfVxuICAgIH0pKClcbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyB0eXBlIENDLCB0eXBlIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIHR5cGUgUGFzY2FsaWZ5LCBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbGwgb2YgdGhlIHRoaW5ncyB0aGF0IGNhbiBiZSBwYXNzZWQgYXMgYSBjaGlsZCB0byBjbGFzcyBjb21wb25lbnRzLlxuICovXG5leHBvcnQgdHlwZSBOb2RlID1cbiAgICB8IEFycmF5PEdPYmplY3QuT2JqZWN0PlxuICAgIHwgR09iamVjdC5PYmplY3RcbiAgICB8IG51bWJlclxuICAgIHwgc3RyaW5nXG4gICAgfCBib29sZWFuXG4gICAgfCBudWxsXG4gICAgfCB1bmRlZmluZWRcblxuZXhwb3J0IGNvbnN0IGd0a1R5cGUgPSBTeW1ib2woXCJndGsgYnVpbGRlciB0eXBlXCIpXG5cbi8qKlxuICogR2V0IHRoZSB0eXBlIG9mIHRoZSBvYmplY3Qgc3BlY2lmaWVkIHRocm91Z2ggdGhlIGAkdHlwZWAgcHJvcGVydHlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFR5cGUob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIHJldHVybiBndGtUeXBlIGluIG9iamVjdCA/IChvYmplY3RbZ3RrVHlwZV0gYXMgc3RyaW5nKSA6IG51bGxcbn1cblxuLyoqXG4gKiBGdW5jdGlvbiBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBGQ1Byb3BzPFNlbGYsIFByb3BzPiA9IFByb3BzICYge1xuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbn1cblxuLyoqXG4gKiBDbGFzcyBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBDQ1Byb3BzPFNlbGYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUHJvcHM+ID0ge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbCBjaGlsZHJlbiBlbGVtZW50c1xuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICBjaGlsZHJlbj86IEFycmF5PE5vZGU+IHwgTm9kZVxuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBmdW5jdGlvbiB0byB1c2UgYXMgYSBjb25zdHJ1Y3RvcixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJGNvbnN0cnVjdG9yPyhwcm9wczogUGFydGlhbDxQcm9wcz4pOiBTZWxmXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb24sXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG4gICAgLyoqXG4gICAgICogQ1NTIGNsYXNzIG5hbWVzXG4gICAgICovXG4gICAgY2xhc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG4gICAgLyoqXG4gICAgICogaW5saW5lIENTU1xuICAgICAqL1xuICAgIGNzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgUHJvcHNdOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxQcm9wc1tLXT4+IHwgUHJvcHNbS11cbn0gJiB7XG4gICAgW1MgaW4ga2V5b2YgU2VsZltcIiRzaWduYWxzXCJdIGFzIFMgZXh0ZW5kcyBgbm90aWZ5Ojoke2luZmVyIFB9YFxuICAgICAgICA/IGBvbk5vdGlmeSR7UGFzY2FsaWZ5PFA+fWBcbiAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxTPn1gXG4gICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gcHJldHRpZXItaWdub3JlXG50eXBlIEpzeFByb3BzPEMsIFByb3BzPiA9XG4gICAgQyBleHRlbmRzIHR5cGVvZiBGcmFnbWVudCA/IChQcm9wcyAmIHt9KVxuICAgIC8vIGludHJpbnNpY0VsZW1lbnRzIGFsd2F5cyByZXNvbHZlIGFzIEZDXG4gICAgLy8gc28gd2UgY2FuJ3QgbmFycm93IGl0IGRvd24sIGFuZCBpbiBzb21lIGNhc2VzXG4gICAgLy8gdGhlIHNldHVwIGZ1bmN0aW9uIGlzIHR5cGVkIGFzIGEgdW5pb24gb2YgT2JqZWN0IGFuZCBhY3R1YWwgdHlwZVxuICAgIC8vIGFzIGEgZml4IHVzZXJzIGNhbiBhbmQgc2hvdWxkIHVzZSBGQ1Byb3BzXG4gICAgOiBDIGV4dGVuZHMgRkMgPyBQcm9wcyAmIE9taXQ8RkNQcm9wczxSZXR1cm5UeXBlPEM+LCBQcm9wcz4sIFwiJFwiPlxuICAgIDogQyBleHRlbmRzIENDID8gQ0NQcm9wczxJbnN0YW5jZVR5cGU8Qz4sIFByb3BzPlxuICAgIDogbmV2ZXJcblxuZnVuY3Rpb24gaXNHT2JqZWN0Q3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIENDIHtcbiAgICByZXR1cm4gY3Rvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdFxufVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uQ3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIEZDIHtcbiAgICByZXR1cm4gdHlwZW9mIGN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiAhaXNHT2JqZWN0Q3RvcihjdG9yKVxufVxuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gc2V0VHlwZShvYmplY3Q6IG9iamVjdCwgdHlwZTogc3RyaW5nKSB7XG4gICAgaWYgKGd0a1R5cGUgaW4gb2JqZWN0ICYmIG9iamVjdFtndGtUeXBlXSAhPT0gXCJcIikge1xuICAgICAgICBjb25zb2xlLndhcm4oYHR5cGUgb3ZlcnJpZGVuIGZyb20gJHtvYmplY3RbZ3RrVHlwZV19IHRvICR7dHlwZX0gb24gJHtvYmplY3R9YClcbiAgICB9XG5cbiAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBbZ3RrVHlwZV06IHR5cGUgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IFJldHVyblR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgbmV3IChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgQ29uc3RydWN0b3JQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IEluc3RhbmNlVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3Rvcjoga2V5b2YgKHR5cGVvZiBlbnYpW1wiaW50cmluc2ljRWxlbWVudHNcIl0gfCAobmV3IChwcm9wczogYW55KSA9PiBUKSB8ICgocHJvcHM6IGFueSkgPT4gVCksXG4gICAgaW5wcm9wczogYW55LFxuICAgIC8vIGtleSBpcyBhIHNwZWNpYWwgcHJvcCBpbiBqc3ggd2hpY2ggaXMgcGFzc2VkIGFzIGEgdGhpcmQgYXJndW1lbnQgYW5kIG5vdCBpbiBwcm9wc1xuICAgIGtleT86IHN0cmluZyxcbik6IFQge1xuICAgIGNvbnN0IHsgJCwgJHR5cGUsICRjb25zdHJ1Y3RvciwgY2hpbGRyZW4sIC4uLnJlc3QgfSA9IGlucHJvcHMgYXMgQ0NQcm9wczxULCBhbnk+XG4gICAgY29uc3QgcHJvcHMgPSByZXN0IGFzIFJlY29yZDxzdHJpbmcsIGFueT5cblxuICAgIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pXG4gICAgZW52LmluaXRQcm9wcyhwcm9wcylcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgZGVsZXRlIHByb3BzW2tleV1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LnNsaWNlKDIpLCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2gsIC0xKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaGlsZCwgLTEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkoc2lnKVxuICAgICAgICBjb25zdCBpZCA9IG5hbWUuc3RhcnRzV2l0aChcIm5vdGlmeS1cIilcbiAgICAgICAgICAgID8gb2JqZWN0LmNvbm5lY3QoYG5vdGlmeTo6JHtuYW1lLnNsaWNlKDcpfWAsIGhhbmRsZXIpXG4gICAgICAgICAgICA6IG9iamVjdC5jb25uZWN0KGtlYmFiaWZ5KHNpZyksIGhhbmRsZXIpXG5cbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBoYW5kbGUgYmluZGluZ3NcbiAgICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2VcbiAgICB9KVxuXG4gICAgLy8gY2xlYW51cFxuICAgIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQ/LihvYmplY3QpXG4gICAgcmV0dXJuIG9iamVjdFxufVxuXG5leHBvcnQgY29uc3QganN4cyA9IGpzeFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgdHlwZSBFbGVtZW50VHlwZSA9IGtleW9mIEludHJpbnNpY0VsZW1lbnRzIHwgRkMgfCBDQ1xuICAgICAgICB0eXBlIEVsZW1lbnQgPSBHT2JqZWN0Lk9iamVjdFxuICAgICAgICB0eXBlIEVsZW1lbnRDbGFzcyA9IEdPYmplY3QuT2JqZWN0XG5cbiAgICAgICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUHJvcHM+ID0gSnN4UHJvcHM8QywgUHJvcHM+ICYge1xuICAgICAgICAgICAgLy8gRklYTUU6IHdoeSBkb2VzIGFuIGludHJpbnNpYyBlbGVtZW50IGFsd2F5cyByZXNvbHZlIGFzIEZDP1xuICAgICAgICAgICAgLy8gX190eXBlPzogQyBleHRlbmRzIENDID8gXCJDQ1wiIDogQyBleHRlbmRzIEZDID8gXCJGQ1wiIDogbmV2ZXJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIC8vIGNjOiBDQ1Byb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcywgR3RrLkJveC5TaWduYWxTaWduYXR1cmVzPlxuICAgICAgICAgICAgLy8gZmM6IEZDUHJvcHM8R3RrLldpZGdldCwgRm5Qcm9wcz5cbiAgICAgICAgfVxuXG4gICAgICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICAgICAgY2hpbGRyZW46IHt9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciwgUmVjdXJzaXZlSW5mZXIgfSBmcm9tIFwiLi4vdmFyaWFudC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtZGVjbGFyYXRpb24tbWVyZ2luZ1xuZXhwb3J0IGNsYXNzIEFjY2Vzc29yPFQgPSB1bmtub3duPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBzdGF0aWMgJGd0eXBlID0gR09iamVjdC5UWVBFX0pTT0JKRUNUIGFzIHVua25vd24gYXMgR09iamVjdC5HVHlwZTxBY2Nlc3Nvcj5cblxuICAgICNnZXQ6ICgpID0+IFRcbiAgICAjc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvblxuXG4gICAgY29uc3RydWN0b3IoZ2V0OiAoKSA9PiBULCBzdWJzY3JpYmU/OiBTdWJzY3JpYmVGdW5jdGlvbikge1xuICAgICAgICBzdXBlcihcInJldHVybiBhcmd1bWVudHMuY2FsbGVlLl9jYWxsLmFwcGx5KGFyZ3VtZW50cy5jYWxsZWUsIGFyZ3VtZW50cylcIilcbiAgICAgICAgdGhpcy4jc3Vic2NyaWJlID0gc3Vic2NyaWJlID8/ICgoKSA9PiAoKSA9PiB2b2lkIDApXG4gICAgICAgIHRoaXMuI2dldCA9IGdldFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN1YnNjcmliZSBmb3IgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50IHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHJldHVybnMgVW5zdWJzY3JpYmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgc3Vic2NyaWJlKGNhbGxiYWNrOiBTdWJzY3JpYmVDYWxsYmFjayk6IERpc3Bvc2VGdW5jdGlvbiB7XG4gICAgICAgIC8vIFRPRE86IGF1dG8gdW5zdWIgd2hlbiBhIHNjb3BlIGlzIGF2YWlsYWJsZT9cbiAgICAgICAgcmV0dXJuIHRoaXMuI3N1YnNjcmliZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZS5cbiAgICAgKi9cbiAgICBnZXQoKTogVCB7XG4gICAgICAgIHJldHVybiB0aGlzLiNnZXQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBhczxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdHJhbnNmb3JtKHRoaXMuI2dldCgpKSwgdGhpcy4jc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBfY2FsbDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmFzKHRyYW5zZm9ybSlcbiAgICB9XG5cbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YFxuICAgIH1cblxuICAgIFtTeW1ib2wudG9QcmltaXRpdmVdKCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJBY2Nlc3NvciBpbXBsaWNpdGx5IGNvbnZlcnRlZCB0byBhIHByaW1pdGl2ZSB2YWx1ZS5cIilcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NvcjxUPiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPlxufVxuXG5leHBvcnQgdHlwZSBTZXR0ZXI8VD4gPSB7XG4gICAgKHZhbHVlOiBUKTogdm9pZFxuICAgICh2YWx1ZTogKHByZXY6IFQpID0+IFQpOiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFN0YXRlPFQ+ID0gW0FjY2Vzc29yPFQ+LCBTZXR0ZXI8VD5dXG5cbi8qKlxuICogQ3JlYXRlIGEgd3JpdGFibGUgc2lnbmFsLlxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbnRpYWwgdmFsdWUgb2YgdGhlIHNpZ25hbFxuICogQHJldHVybnMgQW4gYEFjY2Vzc29yYCBhbmQgYSBzZXR0ZXIgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXRlPFQ+KGluaXQ6IFQpOiBTdGF0ZTxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuICAgICAgICByZXR1cm4gKCkgPT4gc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNvbnN0IHNldCA9IChuZXdWYWx1ZTogdW5rbm93bikgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZTogVCA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gbmV3VmFsdWUoY3VycmVudFZhbHVlKSA6IG5ld1ZhbHVlXG4gICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgLy8gcnVubmluZyBjYWxsYmFja3MgbWlnaHQgbXV0YXRlIHN1YnNjcmliZXJzXG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKSwgc2V0IGFzIFNldHRlcjxUPl1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBpcyBjb21wdXRlZCBmcm9tIGEgbGlzdCBvZiBgQWNjZXNzb3Jgcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPHN0cmluZz5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPFtudW1iZXIsIHN0cmluZ10+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdKVxuICogY29uc3QgZDogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSwgKGE6IG51bWJlciwgYjogc3RyaW5nKSA9PiBgJHthfSAke2J9YClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBkZXBzIExpc3Qgb2YgYEFjY2Vzc29yc2AuXG4gKiBAcGFyYW0gdHJhbnNmb3JtIEFuIG9wdGlvbmFsIHRyYW5zZm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFYgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVik6IEFjY2Vzc29yPFY+IHtcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IEFycmF5PHVua25vd24+KGRlcHMubGVuZ3RoKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IGRlcHMubWFwKChkZXAsIGkpID0+XG4gICAgICAgICAgICAgICAgZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgICAgICBjYWNoZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogViA9PiB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlW2ldKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlW2ldXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybSA/IHRyYW5zZm9ybSguLi4oYXJncyBhcyBBcmdzKSkgOiAoYXJncyBhcyBWKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQGRlcHJlY2F0ZWQgcHJlZmVyIHVzaW5nIHtAbGluayBjcmVhdGVTZXR0aW5nc30uXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR2lvLlNldHRpbmdzYCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0ga2V5IFRoZSBzZXR0aW5ncyBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4oc2V0dGluZ3M6IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihvYmplY3Q6IEdPYmplY3QuT2JqZWN0IHwgR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBwcm9wID0ga2ViYWJpZnkoa2V5KSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpZyA9IG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncyA/IFwiY2hhbmdlZFwiIDogXCJub3RpZnlcIlxuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KGAke3NpZ306OiR7cHJvcH1gLCAoKSA9PiBjYWxsYmFjaygpKVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqZWN0LmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpIGFzIFRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtwcm9wLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgICAgICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iamVjdFtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKCkgYXMgVFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF0gYXMgVFxuICAgICAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBvYmplY3Rba2V5IGFzIGtleW9mIHR5cGVvZiBvYmplY3RdIGFzIFRcblxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBnZXQgcHJvcGVydHkgJHtrZXl9YClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgQ29ubmVjdGlvbkhhbmRsZXI8XG4gICAgTyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMgZXh0ZW5kcyBrZXlvZiBPW1wiJHNpZ25hbHNcIl0sXG4gICAgVCxcbj4gPSBPW1wiJHNpZ25hbHNcIl1bU10gZXh0ZW5kcyAoLi4uYXJnczogYW55W10pID0+IGluZmVyIFJcbiAgICA/IHZvaWQgZXh0ZW5kcyBSXG4gICAgICAgID8gKC4uLmFyZ3M6IFsuLi5QYXJhbWV0ZXJzPE9bXCIkc2lnbmFsc1wiXVtTXT4sIGN1cnJlbnRWYWx1ZTogVF0pID0+IFRcbiAgICAgICAgOiBuZXZlclxuICAgIDogbmV2ZXJcblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBzZXRzIHVwIGEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgIHNpZ25hbCBjb25uZWN0aW9ucy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBjb25zdCB2YWx1ZTogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbm5lY3Rpb24oXG4gKiAgIFwiaW5pdGlhbCB2YWx1ZVwiLFxuICogICBbb2JqMSwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl0sXG4gKiAgIFtvYmoyLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXVxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBzaWduYWxzIEEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgLCBzaWduYWwgbmFtZSBhbmQgY2FsbGJhY2sgcGFpcnMgdG8gY29ubmVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb248XG4gICAgVCxcbiAgICBPMSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMxIGV4dGVuZHMga2V5b2YgTzFbXCIkc2lnbmFsc1wiXSxcbiAgICBPMiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMyIGV4dGVuZHMga2V5b2YgTzJbXCIkc2lnbmFsc1wiXSxcbiAgICBPMyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMzIGV4dGVuZHMga2V5b2YgTzNbXCIkc2lnbmFsc1wiXSxcbiAgICBPNCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM0IGV4dGVuZHMga2V5b2YgTzRbXCIkc2lnbmFsc1wiXSxcbiAgICBPNSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM1IGV4dGVuZHMga2V5b2YgTzVbXCIkc2lnbmFsc1wiXSxcbiAgICBPNiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM2IGV4dGVuZHMga2V5b2YgTzZbXCIkc2lnbmFsc1wiXSxcbiAgICBPNyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM3IGV4dGVuZHMga2V5b2YgTzdbXCIkc2lnbmFsc1wiXSxcbiAgICBPOCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM4IGV4dGVuZHMga2V5b2YgTzhbXCIkc2lnbmFsc1wiXSxcbiAgICBPOSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM5IGV4dGVuZHMga2V5b2YgTzlbXCIkc2lnbmFsc1wiXSxcbj4oXG4gICAgaW5pdDogVCxcbiAgICBoMTogW08xLCBTMSwgQ29ubmVjdGlvbkhhbmRsZXI8TzEsIFMxLCBUPl0sXG4gICAgaDI/OiBbTzIsIFMyLCBDb25uZWN0aW9uSGFuZGxlcjxPMiwgUzIsIFQ+XSxcbiAgICBoMz86IFtPMywgUzMsIENvbm5lY3Rpb25IYW5kbGVyPE8zLCBTMywgVD5dLFxuICAgIGg0PzogW080LCBTNCwgQ29ubmVjdGlvbkhhbmRsZXI8TzQsIFM0LCBUPl0sXG4gICAgaDU/OiBbTzUsIFM1LCBDb25uZWN0aW9uSGFuZGxlcjxPNSwgUzUsIFQ+XSxcbiAgICBoNj86IFtPNiwgUzYsIENvbm5lY3Rpb25IYW5kbGVyPE82LCBTNiwgVD5dLFxuICAgIGg3PzogW083LCBTNywgQ29ubmVjdGlvbkhhbmRsZXI8TzcsIFM3LCBUPl0sXG4gICAgaDg/OiBbTzgsIFM4LCBDb25uZWN0aW9uSGFuZGxlcjxPOCwgUzgsIFQ+XSxcbiAgICBoOT86IFtPOSwgUzksIENvbm5lY3Rpb25IYW5kbGVyPE85LCBTOSwgVD5dLFxuKSB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3Qgc2lnbmFscyA9IFtoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoNywgaDgsIGg5XS5maWx0ZXIoKGgpID0+IGggIT09IHVuZGVmaW5lZClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBzaWduYWxzLm1hcCgoW29iamVjdCwgc2lnbmFsLCBjYWxsYmFja10pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5jb25uZWN0LmNhbGwoXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgKF8sIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY2FsbGJhY2soLi4uYXJncywgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcblxuICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuZGlzY29ubmVjdC5jYWxsKG9iamVjdCwgaWQpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBzaWduYWwgZnJvbSBhIHByb3ZpZXIgZnVuY3Rpb24uXG4gKiBUaGUgcHJvdmlkZXIgaXMgY2FsbGVkIHdoZW4gdGhlIGZpcnN0IHN1YnNjcmliZXIgYXBwZWFycyBhbmQgdGhlIHJldHVybmVkIGRpc3Bvc2VcbiAqIGZ1bmN0aW9uIGZyb20gdGhlIHByb3ZpZGVyIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIG51bWJlciBvZiBzdWJzY3JpYmVycyBkcm9wIHRvIHplcm8uXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgdmFsdWUgPSBjcmVhdGVFeHRlcm5hbCgwLCAoc2V0KSA9PiB7XG4gKiAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gc2V0KCh2KSA9PiB2ICsgMSkpXG4gKiAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKVxuICogfSlcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIHNob3VsZCByZXR1cm4gYSBjbGVhbnVwIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFeHRlcm5hbDxUPihcbiAgICBpbml0OiBULFxuICAgIHByb2R1Y2VyOiAoc2V0OiBTZXR0ZXI8VD4pID0+IERpc3Bvc2VGdW5jdGlvbixcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBEaXNwb3NlRnVuY3Rpb25cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBwcm9kdWNlcigodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlOiBUID0gdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoY3VycmVudFZhbHVlKSA6IHZcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqIEBleHBlcmltZW50YWwgKi9cbnR5cGUgU2V0dGluZ3M8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+ID0ge1xuICAgIFtLIGluIGtleW9mIFQgYXMgVW5jYXBpdGFsaXplPFBhc2NhbGlmeTxLPj5dOiBBY2Nlc3NvcjxSZWN1cnNpdmVJbmZlcjxUW0tdPj5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBgc2V0JHtQYXNjYWxpZnk8Sz59YF06IFNldHRlcjxEZWVwSW5mZXI8VFtLXT4+XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICpcbiAqIFdyYXAgYSB7QGxpbmsgR2lvLlNldHRpbmdzfSBpbnRvIGEgY29sbGVjdGlvbiBvZiBzZXR0ZXJzIGFuZCBhY2Nlc3NvcnMuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgcyA9IGNyZWF0ZVNldHRpbmdzKHNldHRpbmdzLCB7XG4gKiAgIFwiY29tcGxleC1rZXlcIjogXCJhe3Nhe3NzfX1cIixcbiAqICAgXCJzaW1wbGUta2V5XCI6IFwic1wiLFxuICogfSlcbiAqXG4gKiBzLmNvbXBsZXhLZXkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgcHJpbnQocy5jb21wbGV4S2V5LmdldCgpKVxuICogfSlcbiAqXG4gKiBzLnNldENvbXBsZXhLZXkoKHByZXYpID0+ICh7XG4gKiAgIC4uLnByZXYsXG4gKiAgIGtleTogeyBuZXN0ZWQ6IFwiXCIgfSxcbiAqIH0pKVxuICogYGBgXG4gKi9cbi8vIFRPRE86IGNvbWUgdXAgd2l0aCBhbiBBUElcbi8vIC0gdG8gbWFudWFsbHkgYW5ub3RhdGUgVmFyaWFudCB0eXBlZCBzZXR0ZXJzL2dldHRlcnNcbi8vIC0gdG8gc2V0IHJlY3Vyc2l2ZSB2cyBkZWVwIHVucGFjayBwZXIga2V5XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2V0dGluZ3M8Y29uc3QgVCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KFxuICAgIHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsXG4gICAga2V5czogVCxcbik6IFNldHRpbmdzPFQ+IHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICBPYmplY3QuZW50cmllcyhrZXlzKS5mbGF0TWFwKChba2V5LCB0eXBlXSkgPT4gW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGNhbWVsaWZ5KGtleSksXG4gICAgICAgICAgICAgICAgbmV3IEFjY2Vzc29yKFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiBzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSxcbiAgICAgICAgICAgICAgICAgICAgKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpZCA9IHNldHRpbmdzLmNvbm5lY3QoYGNoYW5nZWQ6OiR7a2V5fWAsIGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IHNldHRpbmdzLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgYHNldCR7a2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBjYW1lbGlmeShrZXkpLnNsaWNlKDEpfWAsXG4gICAgICAgICAgICAgICAgKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Muc2V0X3ZhbHVlKFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KHNldHRpbmdzLmdldF92YWx1ZShrZXkpLmRlZXBVbnBhY2soKSkgOiB2LFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICBdKSxcbiAgICApXG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuZXhwb3J0IGZ1bmN0aW9uIGtlYmFiaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIl9cIiwgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FtZWxpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1stX10oLikvZywgKF8sIGNoYXIpID0+IGNoYXIudG9VcHBlckNhc2UoKSlcbn1cblxuZXhwb3J0IHR5cGUgUGFzY2FsaWZ5PFM+ID0gUyBleHRlbmRzIGAke2luZmVyIEhlYWR9JHtcIi1cIiB8IFwiX1wifSR7aW5mZXIgVGFpbH1gXG4gICAgPyBgJHtDYXBpdGFsaXplPEhlYWQ+fSR7UGFzY2FsaWZ5PFRhaWw+fWBcbiAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgID8gQ2FwaXRhbGl6ZTxTPlxuICAgICAgOiBuZXZlclxuXG5leHBvcnQgdHlwZSBYbWxOb2RlID0ge1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIGF0dHJpYnV0ZXM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+XG4gICAgY2hpbGRyZW4/OiBBcnJheTxYbWxOb2RlPlxufVxuXG5leHBvcnQgZnVuY3Rpb24geG1sKHsgbmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4gfTogWG1sTm9kZSkge1xuICAgIGxldCBidWlsZGVyID0gYDwke25hbWV9YFxuXG4gICAgY29uc3QgYXR0cnMgPSBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzID8/IFtdKVxuXG4gICAgaWYgKGF0dHJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgYXR0cnMpIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0gYCAke2tleX09XCIke3ZhbHVlfVwiYFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYnVpbGRlciArPSBcIj5cIlxuICAgICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0geG1sKG5vZGUpXG4gICAgICAgIH1cbiAgICAgICAgYnVpbGRlciArPSBgPC8ke25hbWV9PmBcbiAgICB9IGVsc2Uge1xuICAgICAgICBidWlsZGVyICs9IFwiIC8+XCJcbiAgICB9XG5cbiAgICByZXR1cm4gYnVpbGRlclxufVxuXG4vLyBCaW5kaW5ncyB3b3JrIG92ZXIgcHJvcGVydGllcyBpbiBrZWJhYi1jYXNlIGJlY2F1c2UgdGhhdHMgdGhlIGNvbnZlbnRpb24gb2YgZ29iamVjdFxuLy8gaG93ZXZlciBpbiBqcyBpdHMgZWl0aGVyIHNuYWtlX2Nhc2Ugb3IgY2FtZWxDYXNlXG4vLyBhbHNvIG9uIERCdXMgaW50ZXJmYWNlcyBpdHMgUGFzY2FsQ2FzZSBieSBjb252ZW50aW9uXG4vLyBzbyBhcyBhIHdvcmthcm91bmQgd2UgdXNlIGdldF9wcm9wZXJ0eV9uYW1lIGFuZCBvbmx5IHVzZSB0aGUgcHJvcGVydHkgZmllbGQgYXMgYSBmYWxsYmFja1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5R2V0dGVyPFQgZXh0ZW5kcyBvYmplY3Q+KG9iamVjdDogVCwgcHJvcDogRXh0cmFjdDxrZXlvZiBULCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgYGdldF8ke2tlYmFiaWZ5KHByb3ApLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiAoKSA9PiBvYmplY3RbcHJvcF0sXG4gICAgfSlcbn1cblxuLy8gYXR0ZW1wdCBzZXR0aW5nIGEgcHJvcGVydHkgb2YgR09iamVjdC5PYmplY3RcbmV4cG9ydCBmdW5jdGlvbiBzZXQob2JqOiBHT2JqZWN0Lk9iamVjdCwgcHJvcDogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgY29uc3Qga2V5ID0gc25ha2VpZnkocHJvcClcbiAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuICAgIGNvbnN0IHNldHRlciA9IGBzZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG5cbiAgICBsZXQgY3VycmVudDogdW5rbm93blxuXG4gICAgaWYgKGdldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY3VycmVudCA9IChvYmpbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3VycmVudCA9IG9ialtwcm9wIGFzIGtleW9mIHR5cGVvZiBvYmpdXG4gICAgfVxuXG4gICAgaWYgKGN1cnJlbnQgIT09IHZhbHVlKSB7XG4gICAgICAgIGlmIChzZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbc2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICA7KG9ialtzZXR0ZXJdIGFzICh2OiBhbnkpID0+IHZvaWQpKHZhbHVlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvYmosIHsgW3Byb3BdOiB2YWx1ZSB9KVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyB0eXBlIEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IHR5cGUgQ0M8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IHsgbmV3IChwcm9wczogYW55KTogVCB9XG5leHBvcnQgdHlwZSBGQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0gKHByb3BzOiBhbnkpID0+IFRcblxudHlwZSBDc3NTZXR0ZXIgPSAob2JqZWN0OiBHT2JqLCBjc3M6IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz4pID0+IHZvaWRcbnR5cGUgQ2hpbGRGbiA9IChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqIHwgbnVtYmVyIHwgc3RyaW5nLCBpbmRleD86IG51bWJlcikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndWUoY29uZjogUGFydGlhbDxKc3hFbnY+KSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKVxufVxuXG50eXBlIEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czogUmVjb3JkPHN0cmluZywgQ0MgfCBGQz5cbiAgICBhZGRDaGlsZDogQ2hpbGRGblxuICAgIHNldENzczogQ3NzU2V0dGVyXG4gICAgc2V0Q2xhc3M6IENzc1NldHRlclxuICAgIGluaXRQcm9wczogKHByb3BzOiBhbnkpID0+IHZvaWRcbiAgICBkZWZhdWx0Q2xlYW51cDogKG9iamVjdDogR09iaikgPT4gdm9pZFxufVxuXG5mdW5jdGlvbiBtaXNzaW5nSW1wbCgpIHtcbiAgICB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW1wbFwiKVxufVxuXG5leHBvcnQgY29uc3QgZW52OiBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IHt9LFxuICAgIGFkZENoaWxkOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDc3M6IG1pc3NpbmdJbXBsLFxuICAgIHNldENsYXNzOiBtaXNzaW5nSW1wbCxcbiAgICBpbml0UHJvcHM6ICgpID0+IHZvaWQgMCxcbiAgICBkZWZhdWx0Q2xlYW51cDogKCkgPT4gdm9pZCAwLFxufVxuIiwgImV4cG9ydCBjbGFzcyBTY29wZSB7XG4gICAgc3RhdGljIGN1cnJlbnQ/OiBTY29wZSB8IG51bGxcblxuICAgIHBhcmVudD86IFNjb3BlIHwgbnVsbFxuICAgIGNvbnRleHRzID0gbmV3IE1hcDxDb250ZXh0LCB1bmtub3duPigpXG5cbiAgICBwcml2YXRlIGNsZWFudXBzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50ZWQgPSBmYWxzZVxuXG4gICAgY29uc3RydWN0b3IocGFyZW50PzogU2NvcGUgfCBudWxsKSB7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50XG4gICAgfVxuXG4gICAgb25DbGVhbnVwKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHM/LmFkZChjYWxsYmFjaylcbiAgICB9XG5cbiAgICBvbk1vdW50KGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudCAmJiAhdGhpcy5wYXJlbnQubW91bnRlZCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQub25Nb3VudChjYWxsYmFjaylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmFkZChjYWxsYmFjaylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJ1bjxUPihmbjogKCkgPT4gVCkge1xuICAgICAgICBjb25zdCBwcmV2ID0gU2NvcGUuY3VycmVudFxuICAgICAgICBTY29wZS5jdXJyZW50ID0gdGhpc1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZm4oKVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB0aGlzLm1vdW50cy5jbGVhcigpXG4gICAgICAgICAgICB0aGlzLm1vdW50ZWQgPSB0cnVlXG4gICAgICAgICAgICBTY29wZS5jdXJyZW50ID0gcHJldlxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5jbGVhcigpXG4gICAgICAgIHRoaXMuY29udGV4dHMuY2xlYXIoKVxuICAgICAgICBkZWxldGUgdGhpcy5wYXJlbnRcbiAgICB9XG59XG5cbmV4cG9ydCB0eXBlIENvbnRleHQ8VCA9IGFueT4gPSB7XG4gICAgdXNlKCk6IFRcbiAgICBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFJcbiAgICAocHJvcHM6IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KTogSlNYLkVsZW1lbnRcbn1cblxuLyoqXG4gKiBFeGFtcGxlIFVzYWdlOlxuICogYGBgdHN4XG4gKiBjb25zdCBNeUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KFwiZmFsbGJhY2stdmFsdWVcIilcbiAqXG4gKiBmdW5jdGlvbiBDb25zdW1lckNvbXBvbmVudCgpIHtcbiAqICAgY29uc3QgdmFsdWUgPSBNeUNvbnRleHQudXNlKClcbiAqXG4gKiAgIHJldHVybiA8R3RrLkxhYmVsIGxhYmVsPXt2YWx1ZX0gLz5cbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiBQcm92aWRlckNvbXBvbmVudCgpIHtcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLkJveD5cbiAqICAgICAgIDxNeUNvbnRleHQgdmFsdWU9XCJteS12YWx1ZVwiPlxuICogICAgICAgICB7KCkgPT4gPENvbnN1bWVyQ29tcG9uZW50IC8+fVxuICogICAgICAgPC9NeUNvbnRleHQ+XG4gKiAgICAgPC9HdGsuQm94PlxuICogICApXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQ8VD4oZGVmYXVsdFZhbHVlOiBUKTogQ29udGV4dDxUPiB7XG4gICAgbGV0IGN0eDogQ29udGV4dDxUPlxuXG4gICAgZnVuY3Rpb24gcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSIHtcbiAgICAgICAgY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gICAgICAgIHNjb3BlLmNvbnRleHRzLnNldChjdHgsIHZhbHVlKVxuICAgICAgICByZXR1cm4gc2NvcGUucnVuKGZuKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVzZSgpOiBUIHtcbiAgICAgICAgbGV0IHNjb3BlID0gU2NvcGUuY3VycmVudFxuICAgICAgICB3aGlsZSAoc2NvcGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gc2NvcGUuY29udGV4dHMuZ2V0KGN0eClcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSByZXR1cm4gdmFsdWUgYXMgVFxuICAgICAgICAgICAgc2NvcGUgPSBzY29wZS5wYXJlbnRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udGV4dCh7IHZhbHVlLCBjaGlsZHJlbiB9OiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSkge1xuICAgICAgICByZXR1cm4gcHJvdmlkZSh2YWx1ZSwgY2hpbGRyZW4pXG4gICAgfVxuXG4gICAgcmV0dXJuIChjdHggPSBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICAgICAgcHJvdmlkZSxcbiAgICAgICAgdXNlLFxuICAgIH0pKVxufVxuXG4vKipcbiAqIEdldHMgdGhlIHNjb3BlIHRoYXQgb3ducyB0aGUgY3VycmVudGx5IHJ1bm5pbmcgY29kZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNvbnN0IHNjb3BlID0gZ2V0U2NvcGUoKVxuICogc2V0VGltZW91dCgoKSA9PiB7XG4gKiAgIC8vIFRoaXMgY2FsbGJhY2sgZ2V0cyBydW4gd2l0aG91dCBhbiBvd25lciBzY29wZS5cbiAqICAgLy8gUmVzdG9yZSBvd25lciB2aWEgc2NvcGUucnVuOlxuICogICBzY29wZS5ydW4oKCkgPT4ge1xuICogICAgIGNvbnN0IGZvbyA9IEZvb0NvbnRleHQudXNlKClcbiAqICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICogICAgICAgcHJpbnQoXCJzb21lIGNsZWFudXBcIilcbiAqICAgICB9KVxuICogICB9KVxuICogfSwgMTAwMClcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2NvcGUoKTogU2NvcGUge1xuICAgIGNvbnN0IHNjb3BlID0gU2NvcGUuY3VycmVudFxuICAgIGlmICghc2NvcGUpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJjYW5ub3QgZ2V0IHNjb3BlOiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKVxuICAgIH1cblxuICAgIHJldHVybiBzY29wZVxufVxuXG4vKipcbiAqIEF0dGFjaCBhIGNsZWFudXAgY2FsbGJhY2sgdG8gdGhlIGN1cnJlbnQge0BsaW5rIFNjb3BlfS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uQ2xlYW51cChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJvdXQgb2YgdHJhY2tpbmcgY29udGV4dDogd2lsbCBub3QgYmUgYWJsZSB0byBjbGVhbnVwXCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uQ2xlYW51cChjbGVhbnVwKVxufVxuXG4vKipcbiAqIEF0dGFjaCBhIGNhbGxiYWNrIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50bHkgcnVubmluZyB7QGxpbmsgU2NvcGV9IHJldHVybnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbk1vdW50KGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcImNhbm5vdCBhdHRhY2ggb25Nb3VudDogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25Nb3VudChjbGVhbnVwKVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSByb290IHtAbGluayBTY29wZX0gdGhhdCB3aGVuIGRpc3Bvc2VkIHdpbGwgcmVtb3ZlXG4gKiBhbnkgY2hpbGQgc2lnbmFsIGhhbmRsZXIgb3Igc3RhdGUgc3Vic2NyaWJlci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHN4XG4gKiBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gKiAgIGxldCByb290OiBHdGsuV2luZG93XG4gKlxuICogICBjb25zdCBbc3RhdGVdID0gY3JlYXRlU3RhdGUoXCJ2YWx1ZVwiKVxuICpcbiAqICAgY29uc3QgcmVtb3ZlID0gKCkgPT4ge1xuICogICAgIHJvb3QuZGVzdHJveSgpXG4gKiAgICAgZGlzcG9zZSgpXG4gKiAgIH1cbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5XaW5kb3cgJD17KHNlbGYpID0+IChyb290ID0gc2VsZil9PlxuICogICAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICAgIDxHdGsuTGFiZWwgbGFiZWw9e3N0YXRlfSAvPlxuICogICAgICAgICA8R3RrLkJ1dHRvbiAkY2xpY2tlZD17cmVtb3ZlfSAvPlxuICogICAgICAgPC9HdGsuQm94PlxuICogICAgIDwvR3RrLldpbmRvdz5cbiAqICAgKVxuICogfSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUm9vdDxUPihmbjogKGRpc3Bvc2U6ICgpID0+IHZvaWQpID0+IFQpIHtcbiAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShudWxsKVxuICAgIHJldHVybiBzY29wZS5ydW4oKCkgPT4gZm4oKCkgPT4gc2NvcGUuZGlzcG9zZSgpKSlcbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlIH0gZnJvbSBcIi4uL2dub21lL3NpZ25hbFRyYWNrZXIuanNcIlxuXG4vLyBUT0RPOiBGcmFnbWVudCBzaG91bGQgaW1wbGVtZW50IEdpby5MaXN0TW9kZWxcblxuZXhwb3J0IGNsYXNzIEZyYWdtZW50PFQgPSBhbnk+IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIHN0YXRpYyBbR09iamVjdC5zaWduYWxzXSA9IHtcbiAgICAgICAgXCJkZXN0cm95XCI6IHt9LFxuXG4gICAgICAgIFwiY2hpbGQtYWRkZWRcIjoge1xuICAgICAgICAgICAgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNULCBHT2JqZWN0LlRZUEVfVUlOVF0sXG4gICAgICAgIH0sXG4gICAgICAgIFwiY2hpbGQtcmVtb3ZlZFwiOiB7XG4gICAgICAgICAgICBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1QsIEdPYmplY3QuVFlQRV9VSU5UXSxcbiAgICAgICAgfSxcbiAgICB9XG5cbiAgICBzdGF0aWMgW0dPYmplY3QucHJvcGVydGllc10gPSB7XG4gICAgICAgIGNoaWxkcmVuOiBHT2JqZWN0LlBhcmFtU3BlYy5qc29iamVjdChcImNoaWxkcmVuXCIsIFwiXCIsIFwiXCIsIEdPYmplY3QuUGFyYW1GbGFncy5SRUFEQUJMRSksXG4gICAgfVxuXG4gICAgc3RhdGljIHtcbiAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHRoaXMpXG4gICAgICAgIHJlZ2lzdGVyRGVzdHJveWFibGVUeXBlKHRoaXMpXG4gICAgfVxuXG4gICAgc3RhdGljIG5ldzxUPihjaGlsZHJlbjogQXJyYXk8VD4gPSBbXSkge1xuICAgICAgICByZXR1cm4gbmV3IEZyYWdtZW50KHsgY2hpbGRyZW4gfSlcbiAgICB9XG5cbiAgICBwcml2YXRlIGNvbm5lY3Rpb25JZHMgPSBuZXcgU2V0PG51bWJlcj4oKVxuICAgIHByaXZhdGUgX2NoaWxkcmVuOiBBcnJheTxUPlxuXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMuX2NoaWxkcmVuXVxuICAgIH1cblxuICAgIGFkZENoaWxkKGNoaWxkOiBULCBpbmRleDogbnVtYmVyID0gLTEpOiB2b2lkIHtcbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBuZXN0aW5nIEZyYWdtZW50cyBhcmUgbm90IHlldCBzdXBwb3J0ZWRgKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluZGV4ID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fY2hpbGRyZW4gPSBbXG4gICAgICAgICAgICAgICAgLi4udGhpcy5fY2hpbGRyZW4uc2xpY2UoMCwgaW5kZXgpLFxuICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgIC4uLnRoaXMuX2NoaWxkcmVuLnNsaWNlKGluZGV4KSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpXG4gICAgICAgICAgICBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmxlbmd0aCAtIDFcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZW1pdChcImNoaWxkLWFkZGVkXCIsIGNoaWxkLCBpbmRleClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIGhhc0NoaWxkKGNoaWxkOiBUKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jaGlsZHJlbi5maW5kSW5kZXgoKGNoKSA9PiBjaCA9PT0gY2hpbGQpID4gLTFcbiAgICB9XG5cbiAgICByZW1vdmVDaGlsZChjaGlsZDogVCk6IHZvaWQge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoaSkgPT4gaSA9PT0gY2hpbGQpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwgMSlcblxuICAgICAgICB0aGlzLmVtaXQoXCJjaGlsZC1yZW1vdmVkXCIsIGNoaWxkLCBpbmRleClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHsgY2hpbGRyZW4gPSBbXSB9OiBQYXJ0aWFsPHsgY2hpbGRyZW46IEFycmF5PFQ+IHwgVCB9PiA9IHt9KSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4gPSBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXVxuICAgIH1cblxuICAgIGNvbm5lY3Qoc2lnbmFsOiBzdHJpbmcsIGNhbGxiYWNrOiAoXzogdGhpcywgLi4uYXJnczogYW55W10pID0+IHZvaWQpOiBudW1iZXIge1xuICAgICAgICBjb25zdCBpZCA9IHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uSWRzLmFkZChpZClcbiAgICAgICAgcmV0dXJuIGlkXG4gICAgfVxuXG4gICAgZGlzY29ubmVjdChpZDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgIHRoaXMuY29ubmVjdGlvbklkcy5kZWxldGUoaWQpXG4gICAgfVxuXG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5lbWl0KFwiZGVzdHJveVwiKVxuICAgICAgICBmb3IgKGNvbnN0IGlkIG9mIHRoaXMuY29ubmVjdGlvbklkcy52YWx1ZXMoKSkge1xuICAgICAgICAgICAgc3VwZXIuZGlzY29ubmVjdChpZClcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG50eXBlIFR5cGUgPSB7IG5ldyAoLi4uYXJnczogYW55W10pOiBHT2JqZWN0Lk9iamVjdCB9XG5cbi8vIEB0cy1leHBlY3QtZXJyb3IgbWlzc2luZyB0eXBlc1xuY29uc3QgbW9kID0gaW1wb3J0KFwicmVzb3VyY2U6Ly8vb3JnL2dub21lL3NoZWxsL21pc2Mvc2lnbmFsVHJhY2tlci5qc1wiKVxuXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGU6ICh0eXBlOiBUeXBlKSA9PiB2b2lkID0gYXdhaXQgbW9kXG4gICAgLnRoZW4oKG1vZCkgPT4gbW9kLnJlZ2lzdGVyRGVzdHJveWFibGVUeXBlKVxuICAgIC5jYXRjaCgoKSA9PiAoKSA9PiB2b2lkIDApXG4iLCAiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciwgdHlwZSBTdGF0ZSwgY3JlYXRlU3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0U2NvcGUsIG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbmludGVyZmFjZSBGb3JQcm9wczxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+IHtcbiAgICBlYWNoOiBBY2Nlc3NvcjxJdGVyYWJsZTxJdGVtPj5cbiAgICBjaGlsZHJlbjogKGl0ZW06IEl0ZW0sIGluZGV4OiBBY2Nlc3NvcjxudW1iZXI+KSA9PiBFbFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcnVuIGZvciBlYWNoIHJlbW92ZWQgZWxlbWVudC5cbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBlbnZpcm9ubWVudDpcbiAgICAgKlxuICAgICAqIC0gKipHdGs0Kio6IG51bGxcbiAgICAgKiAtICoqR3RrMyoqOiBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95XG4gICAgICogLSAqKkdub21lKio6IENsdXR0ZXIuQWN0b3IucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRWwsIGl0ZW06IEl0ZW0sIGluZGV4OiBudW1iZXIpID0+IHZvaWQpXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0aGF0IGdlbmVyYXRlcyB0aGUga2V5IGZvciBlYWNoIGl0ZW0uXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0IGl0ZW1zIGFyZSBtYXBwZWQgYnk6XG4gICAgICogLSB2YWx1ZSBpbiBjYXNlIG9mIHByaW1pdGl2ZSB2YWx1ZXNcbiAgICAgKiAtIHJlZmVyZW5jZSBvdGhlcndpc2VcbiAgICAgKi9cbiAgICBpZD86IChpdGVtOiBJdGVtKSA9PiBLZXkgfCBJdGVtXG59XG5cbi8vIFRPRE86IHN1cHBvcnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgZnVuY3Rpb24gRm9yPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4oe1xuICAgIGVhY2gsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbiAgICBpZCA9IChpdGVtOiBJdGVtKSA9PiBpdGVtLFxufTogRm9yUHJvcHM8SXRlbSwgRWwsIEtleT4pOiBGcmFnbWVudDxFbD4ge1xuICAgIHR5cGUgTWFwSXRlbSA9IHsgaXRlbTogSXRlbTsgY2hpbGQ6IEVsOyBpbmRleDogU3RhdGU8bnVtYmVyPjsgc2NvcGU6IFNjb3BlIH1cblxuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwPEl0ZW0gfCBLZXksIE1hcEl0ZW0+KClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFbD4oKVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlKHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXhdLCBzY29wZSB9OiBNYXBJdGVtKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjbGVhbnVwKGNoaWxkLCBpdGVtLCBpbmRleC5nZXQoKSlcbiAgICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7XG4gICAgICAgICAgICBlbnYuZGVmYXVsdENsZWFudXAoY2hpbGQpXG4gICAgICAgIH1cbiAgICAgICAgc2NvcGUuZGlzcG9zZSgpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2soaXRhcmVhYmxlOiBJdGVyYWJsZTxJdGVtPikge1xuICAgICAgICBjb25zdCBpdGVtcyA9IFsuLi5pdGFyZWFibGVdXG4gICAgICAgIGNvbnN0IGlkcyA9IGl0ZW1zLm1hcChpZClcbiAgICAgICAgY29uc3QgaWRTZXQgPSBuZXcgU2V0KGlkcylcblxuICAgICAgICAvLyBjbGVhbnVwIGNoaWxkcmVuIG1pc3NpbmcgZnJvbSBhcnJcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbWFwLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgLy8gdGhlcmUgaXMgbm8gZ2VuZXJpYyB3YXkgdG8gaW5zZXJ0IGNoaWxkIGF0IGluZGV4XG4gICAgICAgICAgICAvLyBzbyB3ZSBzb3J0IGJ5IHJlbW92aW5nIGV2ZXJ5IGNoaWxkIGFuZCByZWFwcGVuZGluZyBpbiBvcmRlclxuICAgICAgICAgICAgZnJhZ21lbnQucmVtb3ZlQ2hpbGQodmFsdWUuY2hpbGQpXG5cbiAgICAgICAgICAgIGlmICghaWRTZXQuaGFzKGtleSkpIHtcbiAgICAgICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgICAgICAgICAgbWFwLmRlbGV0ZShrZXkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyB1cGRhdGUgaW5kZXggYW5kIGFkZCBuZXcgaXRlbXNcbiAgICAgICAgaXRlbXMubWFwKChpdGVtLCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBpZHNbaV1cbiAgICAgICAgICAgIGlmIChtYXAuaGFzKGtleSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiBbLCBzZXRJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgIH0gPSBtYXAuZ2V0KGtleSkhXG4gICAgICAgICAgICAgICAgc2V0SW5kZXgoaSlcbiAgICAgICAgICAgICAgICBpZiAoZnJhZ21lbnQuaGFzQ2hpbGQoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgZHVwbGljYXRlIGtleXMgZm91bmQ6ICR7a2V5fWApXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2hpbGQpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbaW5kZXgsIHNldEluZGV4XSA9IGNyZWF0ZVN0YXRlKGkpXG4gICAgICAgICAgICAgICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQoaXRlbSwgaW5kZXgpKVxuICAgICAgICAgICAgICAgIG1hcC5zZXQoa2V5LCB7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4LCBzZXRJbmRleF0sIHNjb3BlIH0pXG4gICAgICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2hpbGQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IGVhY2guc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcbiAgICB9KVxuICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBkaXNwb3NlKClcblxuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIG1hcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICB9XG5cbiAgICAgICAgbWFwLmNsZWFyKClcbiAgICB9KVxuXG4gICAgcmV0dXJuIGZyYWdtZW50XG59XG4iLCAiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuaW50ZXJmYWNlIFdpdGhQcm9wczxULCBFIGV4dGVuZHMgSlNYLkVsZW1lbnQ+IHtcbiAgICB2YWx1ZTogQWNjZXNzb3I8VD5cbiAgICBjaGlsZHJlbjogKHZhbHVlOiBUKSA9PiBFIHwgXCJcIiB8IGZhbHNlIHwgbnVsbCB8IHVuZGVmaW5lZFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcnVuIGZvciBlYWNoIHJlbW92ZWQgZWxlbWVudC5cbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBlbnZpcm9ubWVudDpcbiAgICAgKlxuICAgICAqIC0gKipHdGs0Kio6IG51bGxcbiAgICAgKiAtICoqR3RrMyoqOiBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95XG4gICAgICogLSAqKkdub21lKio6IENsdXR0ZXIuQWN0b3IucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRSkgPT4gdm9pZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFdpdGg8VCwgRSBleHRlbmRzIEpTWC5FbGVtZW50Pih7XG4gICAgdmFsdWUsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbn06IFdpdGhQcm9wczxULCBFPik6IEZyYWdtZW50PEU+IHtcbiAgICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpXG4gICAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQ8RT4oKVxuXG4gICAgbGV0IHNjb3BlOiBTY29wZVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2sodjogVCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGZyYWdtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmVDaGlsZChjaGlsZClcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBjbGVhbnVwKGNoaWxkKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoc2NvcGUpIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICB9XG5cbiAgICAgICAgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICBjb25zdCBjaCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKHYpKVxuICAgICAgICBpZiAoY2ggIT09IFwiXCIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFkZENoaWxkKGNoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKHZhbHVlLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICAgICAgZGlzcG9zZSgpXG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5leHBvcnQgeyBBc3RhbCwgR3RrLCBHZGsgfVxuIiwgImltcG9ydCB7IEFzdGFsIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgQXN0YWxCYXR0ZXJ5IGZyb20gXCJnaTovL0FzdGFsQmF0dGVyeVwiXG5pbXBvcnQgQXN0YWxCbHVldG9vdGggZnJvbSBcImdpOi8vQXN0YWxCbHVldG9vdGhcIlxuaW1wb3J0IEFzdGFsSHlwcmxhbmQgZnJvbSBcImdpOi8vQXN0YWxIeXBybGFuZFwiXG5pbXBvcnQgQXN0YWxNcHJpcyBmcm9tIFwiZ2k6Ly9Bc3RhbE1wcmlzXCJcbmltcG9ydCBBc3RhbE5ldHdvcmsgZnJvbSBcImdpOi8vQXN0YWxOZXR3b3JrXCJcbmltcG9ydCBBc3RhbFRyYXkgZnJvbSBcImdpOi8vQXN0YWxUcmF5XCJcbi8vIGltcG9ydCBUaW1lIGZyb20gXCJAd2lkZ2V0cy9UaW1lL1RpbWVcIlxuLy8gaW1wb3J0IHsgZ2V0V2VhdGhlckVtb2ppIH0gZnJvbSBcIkBjb21tb24vZnVuY3Rpb25zXCJcbmltcG9ydCB7IGN1cnJlbnRUaW1lLCBtZW1vcnlVc2FnZSwgbm90aWZpY2F0aW9uc0xlbmd0aCwgc2V0U2hvd0xlZnRTaWRlYmFyLCBzZXRTaG93UmlnaHRTaWRlYmFyLCBzaG93TGVmdFNpZGViYXIsIHNob3dSaWdodFNpZGViYXIgfSBmcm9tIFwiQGNvbW1vbi92YXJzXCJcbmltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVCaW5kaW5nLCBGb3IsIFdpdGggfSBmcm9tIFwiYWdzXCJcblxuZnVuY3Rpb24gVHJheU1vZHVsZSgpIHtcbiAgY29uc3QgdHJheSA9IEFzdGFsVHJheS5nZXRfZGVmYXVsdCgpXG4gIGNvbnN0IGl0ZW1zID0gY3JlYXRlQmluZGluZyh0cmF5LCBcIml0ZW1zXCIpXG5cbiAgY29uc3QgaW5pdCA9IChidG46IEd0ay5NZW51QnV0dG9uLCBpdGVtOiBBc3RhbFRyYXkuVHJheUl0ZW0pID0+IHtcbiAgICBidG4ubWVudU1vZGVsID0gaXRlbS5tZW51TW9kZWxcbiAgICBidG4uaW5zZXJ0X2FjdGlvbl9ncm91cChcImRidXNtZW51XCIsIGl0ZW0uYWN0aW9uR3JvdXApXG4gICAgaXRlbS5jb25uZWN0KFwibm90aWZ5OjphY3Rpb24tZ3JvdXBcIiwgKCkgPT4ge1xuICAgICAgYnRuLmluc2VydF9hY3Rpb25fZ3JvdXAoXCJkYnVzbWVudVwiLCBpdGVtLmFjdGlvbkdyb3VwKVxuICAgIH0pXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxib3g+XG4gICAgICA8Rm9yIGVhY2g9e2l0ZW1zfT5cbiAgICAgICAgeyhpdGVtKSA9PiAoXG4gICAgICAgICAgPG1lbnVidXR0b24gJD17KHNlbGYpID0+IGluaXQoc2VsZiwgaXRlbSl9PlxuICAgICAgICAgICAgPGltYWdlIGdpY29uPXtjcmVhdGVCaW5kaW5nKGl0ZW0sIFwiZ2ljb25cIil9IC8+XG4gICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApfVxuICAgICAgPC9Gb3I+XG4gICAgPC9ib3g+XG4gIClcbn1cblxuZnVuY3Rpb24gTmV0d29ya01vZHVsZSgpIHtcbiAgY29uc3QgbmV0d29yayA9IEFzdGFsTmV0d29yay5nZXRfZGVmYXVsdCgpXG4gIGNvbnN0IHdpZmkgPSBjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwid2lmaVwiKVxuICBjb25zdCB3aXJlZCA9IGNyZWF0ZUJpbmRpbmcobmV0d29yaywgXCJ3aXJlZFwiKVxuXG4gIHJldHVybiAoXG4gICAgPGJveD5cbiAgICAgIDxib3ggdmlzaWJsZT17d2lmaShCb29sZWFuKX0+XG4gICAgICAgIDxXaXRoIHZhbHVlPXt3aWZpfT5cbiAgICAgICAgICB7KHdpZmkpID0+XG4gICAgICAgICAgICB3aWZpICYmIChcbiAgICAgICAgICAgICAgPGltYWdlIGljb25OYW1lPXtjcmVhdGVCaW5kaW5nKHdpZmksIFwiaWNvbk5hbWVcIil9IC8+XG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuICAgICAgICA8L1dpdGg+XG4gICAgICA8L2JveD5cbiAgICAgIDxib3ggdmlzaWJsZT17d2lyZWQoQm9vbGVhbil9PlxuICAgICAgICA8V2l0aCB2YWx1ZT17d2lyZWR9PlxuICAgICAgICAgIHsod2lyZWQpID0+XG4gICAgICAgICAgICB3aXJlZCAmJiAoXG4gICAgICAgICAgICAgIDxpbWFnZSBpY29uTmFtZT17Y3JlYXRlQmluZGluZyh3aXJlZCwgXCJpY29uTmFtZVwiKX0gLz5cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvYm94PlxuICAgIDwvYm94PlxuICApXG59XG5cbmZ1bmN0aW9uIEJsdWV0b290aE1vZHVsZSgpIHtcbiAgY29uc3QgYmx1ZXRvb3RoID0gQXN0YWxCbHVldG9vdGguZ2V0X2RlZmF1bHQoKVxuXG4gIHJldHVybiA8cmV2ZWFsZXJcbiAgICB0cmFuc2l0aW9uVHlwZT17R3RrLlJldmVhbGVyVHJhbnNpdGlvblR5cGUuU0xJREVfTEVGVH1cbiAgICByZXZlYWxDaGlsZD17Y3JlYXRlQmluZGluZyhibHVldG9vdGgsIFwiaXNfY29ubmVjdGVkXCIpfT5cbiAgICA8bGFiZWwgY2xhc3M9XCJCbHVldG9vdGhcIiBsYWJlbD1cIlx1REI4MFx1RENCMVwiIC8+XG4gIDwvcmV2ZWFsZXI+XG59XG5cbmZ1bmN0aW9uIEJhdHRlcnlNb2R1bGUoKSB7XG4gIGNvbnN0IGJhdCA9IEFzdGFsQmF0dGVyeS5nZXRfZGVmYXVsdCgpXG5cbiAgcmV0dXJuIDxib3ggY2xhc3M9XCJCYXR0ZXJ5XCJcbiAgICB2aXNpYmxlPXtjcmVhdGVCaW5kaW5nKGJhdCwgXCJpc1ByZXNlbnRcIil9PlxuICAgIDxsYWJlbCBsYWJlbD17Y3JlYXRlQmluZGluZyhiYXQsIFwicGVyY2VudGFnZVwiKS5hcyhwID0+IGAke01hdGguZmxvb3IocCAqIDEwMCl9JWApfSAvPlxuICAgIDxpbWFnZSBpY29uTmFtZT17Y3JlYXRlQmluZGluZyhiYXQsIFwiYmF0dGVyeUljb25OYW1lXCIpfSAvPlxuICA8L2JveD5cbn1cblxuZnVuY3Rpb24gZ2V0VGl0bGUocGxheWVyOiBBc3RhbE1wcmlzLlBsYXllcik6IHN0cmluZyB7XG4gIHJldHVybiBwbGF5ZXIuYXJ0aXN0XG4gICAgPyBgJHtwbGF5ZXIuYXJ0aXN0fTogJHtwbGF5ZXIudGl0bGV9YFxuICAgIDogcGxheWVyLmFsYnVtXG4gICAgICA/IGAke3BsYXllci5hbGJ1bX06ICR7cGxheWVyLnRpdGxlfWBcbiAgICAgIDogYCR7cGxheWVyLnRpdGxlfWBcbn1cblxuZnVuY3Rpb24gTWVkaWFNb2R1bGUoKSB7XG4gIGNvbnN0IG1wcmlzID0gQXN0YWxNcHJpcy5nZXRfZGVmYXVsdCgpXG5cbiAgcmV0dXJuIDxXaXRoIHZhbHVlPXtjcmVhdGVCaW5kaW5nKG1wcmlzLCBcInBsYXllcnNcIil9PlxuICAgIHsocHM6IEFycmF5PEFzdGFsTXByaXMuUGxheWVyPikgPT4gcHNbMF0gPyAoXG4gICAgICA8YnV0dG9uIGNsYXNzPVwiTWVkaWFcIlxuICAgICAgICBvbkNsaWNrZWQ9eygpID0+IHBzWzBdLnBsYXlfcGF1c2UoKX0+XG4gICAgICAgIDxsYWJlbFxuICAgICAgICAgIGNsYXNzPXtjcmVhdGVCaW5kaW5nKHBzWzBdLCBcInBsYXliYWNrU3RhdHVzXCIpLmFzKHMgPT4gcyA+IDAgPyBcInBhdXNlZFwiIDogXCJwbGF5aW5nXCIpfVxuICAgICAgICAgIG1heFdpZHRoQ2hhcnM9ezgwfVxuICAgICAgICAgIGxhYmVsPXtjcmVhdGVCaW5kaW5nKHBzWzBdLCBcIm1ldGFkYXRhXCIpLmFzKCgpID0+IGdldFRpdGxlKHBzWzBdKSl9IC8+XG4gICAgICA8L2J1dHRvbj5cbiAgICApIDogKDxib3ggLz4pXG4gICAgfVxuICA8L1dpdGg+XG59XG5cbmZ1bmN0aW9uIFdvcmtzcGFjZXMoKSB7XG4gIGNvbnN0IGh5cHIgPSBBc3RhbEh5cHJsYW5kLmdldF9kZWZhdWx0KClcbiAgY29uc3Qgd29ya3NwYWNlcyA9IGNyZWF0ZUJpbmRpbmcoaHlwciwgXCJ3b3Jrc3BhY2VzXCIpXG5cbiAgY29uc3Qgc29ydGVkID0gKGFycjogQXJyYXk8QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2U+KSA9PiB7XG4gICAgcmV0dXJuIGFyci5maWx0ZXIod3MgPT4gISh3cy5pZCA+PSAtOTkgJiYgd3MuaWQgPD0gLTIpKS5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZClcbiAgfVxuXG4gIHJldHVybiA8Ym94IGNsYXNzPVwiV29ya3NwYWNlc1wiPlxuICAgIDxGb3IgZWFjaD17d29ya3NwYWNlcyhzb3J0ZWQpfT5cbiAgICAgIHsod3MpID0+IChcbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzPXtjcmVhdGVCaW5kaW5nKGh5cHIsIFwiZm9jdXNlZFdvcmtzcGFjZVwiKS5hcyhmdyA9PiB3cyA9PT0gZncgPyBcImZvY3VzZWRcIiA6IFwiXCIpfVxuICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4gd3MuZm9jdXMoKX1cbiAgICAgICAgPlxuICAgICAgICAgIHt3cy5pZH1cbiAgICAgICAgPC9idXR0b24+XG4gICAgICApfVxuICAgIDwvRm9yPlxuICA8L2JveD5cbn1cblxuLy8gZnVuY3Rpb24gV2VhdGhlcigpIHtcbi8vICAgY29uc3QgdmlzaWJsZSA9IFZhcmlhYmxlPGJvb2xlYW4+KGZhbHNlKVxuLy8gICByZXR1cm4gPHJldmVhbGVyXG4vLyAgICAgdHJhbnNpdGlvblR5cGU9e0d0ay5SZXZlYWxlclRyYW5zaXRpb25UeXBlLlNMSURFX1JJR0hUfVxuLy8gICAgIHJldmVhbENoaWxkPXt2aXNpYmxlKCl9PlxuLy8gICAgIHtiaW5kKHdlYXRoZXJSZXBvcnQpLmFzKChkYXRhKSA9PiB7XG4vLyAgICAgICBpZiAoZGF0YSkge1xuLy8gICAgICAgICBjb25zdCBjb25kaXRpb24gPSBkYXRhLndlYXRoZXIuY3VycmVudF9jb25kaXRpb25bMF1cbi8vICAgICAgICAgY29uc3QgdGVtcCA9IGNvbmRpdGlvbi50ZW1wX0Ncbi8vICAgICAgICAgY29uc3QgZW1vamkgPSBnZXRXZWF0aGVyRW1vamkoY29uZGl0aW9uLndlYXRoZXJEZXNjWzBdLnZhbHVlKVxuLy8gICAgICAgICB2aXNpYmxlLnNldCh0cnVlKVxuLy8gICAgICAgICByZXR1cm4gPGxhYmVsIGNsYXNzTmFtZT1cIldlYXRoZXJcIiBsYWJlbD17YCR7dGVtcH1cdTAwQjBDICR7ZW1vaml9YH0gLz5cbi8vICAgICAgIH1cbi8vICAgICAgIHJldHVybiA8Ym94IC8+XG4vLyAgICAgfSl9XG4vLyAgIDwvcmV2ZWFsZXI+XG4vLyB9XG5cbmZ1bmN0aW9uIE5vdGlmaWNhdGlvbkJlbGwoKSB7XG4gIHJldHVybiA8cmV2ZWFsZXJcbiAgICB0cmFuc2l0aW9uVHlwZT17R3RrLlJldmVhbGVyVHJhbnNpdGlvblR5cGUuU0xJREVfTEVGVH1cbiAgICByZXZlYWxDaGlsZD17bm90aWZpY2F0aW9uc0xlbmd0aC5hcyhsID0+IGwgPiAxKX0+XG4gICAgPGxhYmVsIGNsYXNzPVwiTm90aWZpY2F0aW9uQmVsbFwiIGxhYmVsPVwiXHVEQjg0XHVERDZCXCIgLz5cbiAgPC9yZXZlYWxlcj5cbn1cblxuZnVuY3Rpb24gTWVtb3J5KCkge1xuICByZXR1cm4gPFdpdGggdmFsdWU9e21lbW9yeVVzYWdlfT5cbiAgICB7KG1lbW9yeVVzYWdlKSA9PlxuICAgICAgPGxhYmVsXG4gICAgICAgIGNsYXNzPVwiTWVtb3J5XCJcbiAgICAgICAgbGFiZWw9e21lbW9yeVVzYWdlfVxuICAgICAgLz5cbiAgICB9XG4gIDwvV2l0aD5cbn1cblxuZnVuY3Rpb24gVGltZSgpIHtcbiAgcmV0dXJuIDxXaXRoIHZhbHVlPXtjdXJyZW50VGltZX0+XG4gICAgeyh0aW1lKSA9PiA8bGFiZWwgbGFiZWw9e3RpbWV9IC8+fVxuICA8L1dpdGg+XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJhcihtb25pdG9yOiBHZGsuTW9uaXRvciwgdmlzaWJsZTogQWNjZXNzb3I8Ym9vbGVhbj4pIHtcbiAgY29uc3QgeyBUT1AsIExFRlQsIFJJR0hUIH0gPSBBc3RhbC5XaW5kb3dBbmNob3JcblxuICByZXR1cm4gKFxuICAgIDx3aW5kb3dcbiAgICAgIGNsYXNzPVwiQmFyXCJcbiAgICAgIG5hbWVzcGFjZT1cImJhclwiXG4gICAgICBnZGttb25pdG9yPXttb25pdG9yfVxuICAgICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRX1cbiAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICB2aXNpYmxlPXt2aXNpYmxlfVxuICAgICAgbGF5ZXI9e0FzdGFsLkxheWVyLlRPUH1cbiAgICAgIGFuY2hvcj17VE9QIHwgTEVGVCB8IFJJR0hUfVxuICAgID5cbiAgICAgIDxjZW50ZXJib3g+XG4gICAgICAgIDxib3hcbiAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgJHR5cGU9XCJzdGFydFwiXG4gICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgY3NzPVwibWFyZ2luLWxlZnQ6IDRweFwiPlxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNsYXNzPVwiVGltZUFuZFdlYXRoZXJcIlxuICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiBzZXRTaG93TGVmdFNpZGViYXIoIXNob3dMZWZ0U2lkZWJhci5nZXQoKSl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgPFRpbWUgLz5cbiAgICAgICAgICAgICAgey8qIDxXZWF0aGVyIC8+ICovfVxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPFdvcmtzcGFjZXMgLz5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxib3hcbiAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICR0eXBlPVwiY2VudGVyXCI+XG4gICAgICAgICAgPE1lZGlhTW9kdWxlIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgICA8Ym94XG4gICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICR0eXBlPVwiZW5kXCJcbiAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5FTkR9XG4gICAgICAgICAgY3NzPVwibWFyZ2luLXJpZ2h0OiA0cHhcIj5cbiAgICAgICAgICA8VHJheU1vZHVsZSAvPlxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNsYXNzPVwiVGltZUFuZFdlYXRoZXJcIlxuICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiBzZXRTaG93UmlnaHRTaWRlYmFyKCFzaG93UmlnaHRTaWRlYmFyLmdldCgpKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICA8QmF0dGVyeU1vZHVsZSAvPlxuICAgICAgICAgICAgICA8TmV0d29ya01vZHVsZSAvPlxuICAgICAgICAgICAgICA8Qmx1ZXRvb3RoTW9kdWxlIC8+XG4gICAgICAgICAgICAgIDxOb3RpZmljYXRpb25CZWxsIC8+XG4gICAgICAgICAgICAgIDxNZW1vcnkgLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2JveD5cbiAgICAgIDwvY2VudGVyYm94PlxuICAgIDwvd2luZG93PlxuICApXG59XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiYWdzL3Byb2Nlc3NcIlxuaW1wb3J0IE1wcmlzIGZyb20gXCJnaTovL0FzdGFsTXByaXNcIlxuaW1wb3J0IHsgY3JlYXRlU3RhdGUgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IGNyZWF0ZVBvbGwgfSBmcm9tIFwiYWdzL3RpbWVcIlxuXG5leHBvcnQgY29uc3QgWyBzaG93QmFyLCBzZXRTaG93QmFyIF0gPSBjcmVhdGVTdGF0ZSh0cnVlKVxuZXhwb3J0IGNvbnN0IFsgc2hvd0xlZnRTaWRlYmFyLCBzZXRTaG93TGVmdFNpZGViYXIgXSA9IGNyZWF0ZVN0YXRlKGZhbHNlKVxuZXhwb3J0IGNvbnN0IFsgc2hvd1JpZ2h0U2lkZWJhciwgc2V0U2hvd1JpZ2h0U2lkZWJhciBdID0gY3JlYXRlU3RhdGUoZmFsc2UpXG5leHBvcnQgY29uc3QgWyBzaG93Q3Jvc3NoYWlyLCBzZXRTaG93Q3Jvc3NoYWlyIF0gPSBjcmVhdGVTdGF0ZShmYWxzZSlcbmV4cG9ydCBjb25zdCBbIHNob3dMYXVuY2hlciwgc2V0U2hvd0xhdW5jaGVyIF0gPSBjcmVhdGVTdGF0ZShmYWxzZSlcbmV4cG9ydCBjb25zdCBbIGRvTm90RGlzdHVyYiwgc2V0RG9Ob3REaXN0dXJiIF0gPSBjcmVhdGVTdGF0ZShmYWxzZSlcbmV4cG9ydCBjb25zdCBbIG5pZ2h0TGlnaHRFbmFibGVkLCBzZXROaWdodExpZ2h0RW5hYmxlZCBdID0gY3JlYXRlU3RhdGUoZmFsc2UpXG5leHBvcnQgY29uc3QgWyBub3RpZmljYXRpb25zTGVuZ3RoLCBzZXROb3RpZmljYXRpb25zTGVuZ3RoIF0gPSBjcmVhdGVTdGF0ZSgwKVxuZXhwb3J0IGNvbnN0IFsgc2lkZWJhclBhbmVsLCBzZXRTaWRlYmFyUGFuZWwgXSA9IGNyZWF0ZVN0YXRlKFwibWFpblwiKVxuZXhwb3J0IGNvbnN0IHNwb3RpZnlQbGF5ZXIgPSBNcHJpcy5QbGF5ZXIubmV3KFwic3BvdGlmeVwiKVxuXG5leGVjQXN5bmMoJ3BncmVwIC14IGh5cHJzdW5zZXQnKVxuICAudGhlbigoKSA9PiBzZXROaWdodExpZ2h0RW5hYmxlZCh0cnVlKSlcbiAgLmNhdGNoKCgpID0+IHNldE5pZ2h0TGlnaHRFbmFibGVkKGZhbHNlKSlcblxuZXhwb3J0IGNvbnN0IGN1cnJlbnRUaW1lID0gY3JlYXRlUG9sbChcIlwiLCAxMDAwLCAoKSA9PlxuICBHTGliLkRhdGVUaW1lLm5ld19ub3dfbG9jYWwoKS5mb3JtYXQoXCIlSDolTVwiKSEpXG5cbmV4cG9ydCBjb25zdCBjdXJyZW50RGF5ID0gY3JlYXRlUG9sbChcIlwiLCAxMDAwLCAoKSA9PlxuICBHTGliLkRhdGVUaW1lLm5ld19ub3dfbG9jYWwoKS5mb3JtYXQoXCJeJUEsICVkIGRlIF4lQlwiKSEpXG5cbmV4cG9ydCBjb25zdCB1cHRpbWUgPSBjcmVhdGVQb2xsKFwiXCIsIDUgKiA2MCAqIDEwMDAsIGFzeW5jICgpID0+IHtcbiAgY29uc3Qgb3V0cHV0ID0gYXdhaXQgZXhlY0FzeW5jKFwidXB0aW1lIC1wXCIpXG4gIHJldHVybiBvdXRwdXRcbiAgICAucmVwbGFjZSgvIG1pbnV0ZXN8IG1pbnV0ZS8sIFwibVwiKVxuICAgIC5yZXBsYWNlKC8gaG91cnN8IGhvdXIvLCBcImhcIilcbiAgICAucmVwbGFjZSgvIGRheXN8IGRheS8sIFwiZFwiKVxuICAgIC5yZXBsYWNlKC8gd2Vla3N8IHdlZWsvLCBcIndcIilcbn0pXG5cbmV4cG9ydCBjb25zdCBtZW1vcnlVc2FnZSA9IGNyZWF0ZVBvbGwoXCJcIiwgNSAqIDEwMDAsIGFzeW5jICgpID0+IHtcbiAgY29uc3Qgb3V0cHV0ID0gYXdhaXQgZXhlY0FzeW5jKFtcInNoXCIsIFwiLWNcIiwgYGZyZWUgLS1tZWdhIHwgYXdrICdOUj09MntwcmludCAkMyBcIiBNQlwifSdgXSlcbiAgcmV0dXJuIG91dHB1dFxufSlcblxuLy8gdHlwZSBXZWF0aGVyRGF0YSA9IHtcbi8vICAgdGltZXN0YW1wOiBzdHJpbmdcbi8vICAgd2VhdGhlcjogYW55XG4vLyB9O1xuLy9cbi8vIGV4cG9ydCBjb25zdCB3ZWF0aGVyUmVwb3J0ID0gY3JlYXRlUG9sbCh7fSwgMjAgKiA2MCAqIDEwMDAsIGFzeW5jICgpID0+IHtcbi8vICAgdHJ5IHtcbi8vICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBleGVjQXN5bmMoYGN1cmwgLXMgXCJ3dHRyLmluL0N1cml0aWJhP2Zvcm1hdD1qMVwiYClcbi8vICAgICBjb25zdCB3ZWF0aGVyID0gSlNPTi5wYXJzZShyZXN1bHQpXG4vLyAgICAgY29uc3QgdGltZXN0YW1wID0gY3VycmVudFRpbWUuZ2V0KClcbi8vICAgICByZXR1cm4geyB0aW1lc3RhbXAsIHdlYXRoZXIgfVxuLy8gICB9IGNhdGNoIChlcnIpIHtcbi8vICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgd2VhdGhlcjpcIiwgZXJyKVxuLy8gICAgIHJldHVybiBudWxsXG4vLyAgIH1cbi8vIH0pXG4iLCAiaW1wb3J0IEFzdGFsSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcblxudHlwZSBBcmdzID0ge1xuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW11cbiAgICBvdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWRcbiAgICBlcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgUHJvY2VzcyA9IEFzdGFsSU8uUHJvY2Vzc1xuZXhwb3J0IGNvbnN0IFByb2Nlc3MgPSBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoYXJnczogQXJncyk6IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkLFxuICAgIG9uRXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkLFxuKTogQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGFyZ3NPckNtZDogQXJncyB8IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQgPSBwcmludCxcbiAgICBvbkVycjogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnRlcnIsXG4pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkuaXNBcnJheShhcmdzT3JDbWQpIHx8IHR5cGVvZiBhcmdzT3JDbWQgPT09IFwic3RyaW5nXCJcbiAgICBjb25zdCB7IGNtZCwgZXJyLCBvdXQgfSA9IHtcbiAgICAgICAgY21kOiBhcmdzID8gYXJnc09yQ21kIDogYXJnc09yQ21kLmNtZCxcbiAgICAgICAgZXJyOiBhcmdzID8gb25FcnIgOiBhcmdzT3JDbWQuZXJyIHx8IG9uRXJyLFxuICAgICAgICBvdXQ6IGFyZ3MgPyBvbk91dCA6IGFyZ3NPckNtZC5vdXQgfHwgb25PdXQsXG4gICAgfVxuXG4gICAgY29uc3QgcHJvYyA9IEFycmF5LmlzQXJyYXkoY21kKVxuICAgICAgICA/IEFzdGFsSU8uUHJvY2Vzcy5zdWJwcm9jZXNzdihjbWQpXG4gICAgICAgIDogQXN0YWxJTy5Qcm9jZXNzLnN1YnByb2Nlc3MoY21kKVxuXG4gICAgcHJvYy5jb25uZWN0KFwic3Rkb3V0XCIsIChfLCBzdGRvdXQ6IHN0cmluZykgPT4gb3V0KHN0ZG91dCkpXG4gICAgcHJvYy5jb25uZWN0KFwic3RkZXJyXCIsIChfLCBzdGRlcnI6IHN0cmluZykgPT4gZXJyKHN0ZGVycikpXG4gICAgcmV0dXJuIHByb2Ncbn1cblxuLyoqIEB0aHJvd3Mge0dMaWIuRXJyb3J9IFRocm93cyBzdGRlcnIgKi9cbmV4cG9ydCBmdW5jdGlvbiBleGVjKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjbWQpID8gQXN0YWxJTy5Qcm9jZXNzLmV4ZWN2KGNtZCkgOiBBc3RhbElPLlByb2Nlc3MuZXhlYyhjbWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGVjQXN5bmMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY21kKSkge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2KGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2X2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmMoY21kLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShBc3RhbElPLlByb2Nlc3MuZXhlY19maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzKGluaXQ6IHN0cmluZywgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBwcm9jOiBBc3RhbElPLlByb2Nlc3MgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHByb2MgPSBzdWJwcm9jZXNzKGV4ZWMsIChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcm9jPy5raWxsKClcbiAgICAgICAgICAgICAgICBwcm9jID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcbmltcG9ydCBBc3RhbElPIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5cbmV4cG9ydCB0eXBlIFRpbWUgPSBBc3RhbElPLlRpbWVcbmV4cG9ydCBjb25zdCBUaW1lID0gQXN0YWxJTy5UaW1lXG5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLmludGVydmFsKGludGVydmFsLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLnRpbWVvdXQodGltZW91dCwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUuaWRsZSgoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBBc3RhbElPLlRpbWUgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgZnVuY3Rpb24gc2V0KHZhbHVlOiBUKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgdGltZXIgPSBpbnRlcnZhbChpdmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aW1lcj8uY2FuY2VsKClcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZSAqL1xuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGdldFR5cGUsIG9uQ2xlYW51cCwgQWNjZXNzb3IsIEZyYWdtZW50IH0gZnJvbSBcIi4uL2luZGV4LmpzXCJcbmltcG9ydCB7IGNvbmZpZ3VlIH0gZnJvbSBcIi4uL2pzeC9lbnYuanNcIlxuXG5jb25zdCBkdW1teUJ1aWxkZXIgPSBuZXcgR3RrLkJ1aWxkZXIoKVxuXG5mdW5jdGlvbiBhZGQocGFyZW50OiBHdGsuQnVpbGRhYmxlLCBjaGlsZDogR09iamVjdC5PYmplY3QsIF86IG51bWJlcikge1xuICAgIGlmICghc3BlY2lhbEFkZChwYXJlbnQsIGNoaWxkLCBfKSkge1xuICAgICAgICBwYXJlbnQudmZ1bmNfYWRkX2NoaWxkKGR1bW15QnVpbGRlciwgY2hpbGQsIGdldFR5cGUoY2hpbGQpKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc3BlY2lhbFJlbW92ZShfcGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgX2NoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIC8vIFRPRE86IGFkZCBhbnkgc3BlY2lhbCBjYXNlXG4gICAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHNwZWNpYWxBZGQocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCBfOiBudW1iZXIpIHtcbiAgICAvLyBUT0RPOiBhZGQgYW55IG90aGVyIHNwZWNpYWwgY2FzZVxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuQWRqdXN0bWVudCAmJlxuICAgICAgICBcInNldF9hZGp1c3RtZW50XCIgaW4gcGFyZW50ICYmXG4gICAgICAgIHR5cGVvZiBwYXJlbnQuc2V0X2FkanVzdG1lbnQgPT09IFwiZnVuY3Rpb25cIlxuICAgICkge1xuICAgICAgICBwYXJlbnQuc2V0X2FkanVzdG1lbnQoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiZcbiAgICAgICAgcGFyZW50IGluc3RhbmNlb2YgR3RrLlN0YWNrICYmXG4gICAgICAgIGNoaWxkLm5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgY2hpbGQubmFtZSAhPT0gbnVsbCAmJlxuICAgICAgICBnZXRUeXBlKGNoaWxkKSA9PT0gXCJuYW1lZFwiXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlBvcG92ZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24pIHtcbiAgICAgICAgcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudU1vZGVsICYmXG4gICAgICAgIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbiB8fCBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuUG9wb3Zlck1lbnUpXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5zZXRfbWVudV9tb2RlbChjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvLk1lbnUpIHtcbiAgICAgICAgLy8gVE9ETzpcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5BcHBsaWNhdGlvbikge1xuICAgICAgICBwYXJlbnQuYWRkX3dpbmRvdyhjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuVGV4dEJ1ZmZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuVGV4dFZpZXcpIHtcbiAgICAgICAgcGFyZW50LnNldF9idWZmZXIoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHJlbW92ZShwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAoc3BlY2lhbFJlbW92ZShwYXJlbnQsIGNoaWxkKSkgcmV0dXJuXG5cbiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLldpZGdldCAmJiBjaGlsZCBpbnN0YW5jZW9mIEd0ay5FdmVudENvbnRyb2xsZXIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5yZW1vdmVfY29udHJvbGxlcihjaGlsZClcbiAgICB9XG5cbiAgICBpZiAoXCJzZXRfY2hpbGRcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfY2hpbGQgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2NoaWxkKG51bGwpXG4gICAgfVxuXG4gICAgaWYgKFwicmVtb3ZlXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQucmVtb3ZlID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihgY2Fubm90IHJlbW92ZSAke2NoaWxkfSBmcm9tICR7cGFyZW50fWApXG59XG5cbmNvbnN0IHsgYWRkQ2hpbGQsIGludHJpbnNpY0VsZW1lbnRzIH0gPSBjb25maWd1ZSh7XG4gICAgc2V0Q3NzKG9iamVjdCwgY3NzKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGN0eCA9IG9iamVjdC5nZXRfc3R5bGVfY29udGV4dCgpXG4gICAgICAgIGxldCBwcm92aWRlcjogR3RrLkNzc1Byb3ZpZGVyXG5cbiAgICAgICAgY29uc3Qgc2V0dGVyID0gKGNzczogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNzcy5pbmNsdWRlcyhcIntcIikgfHwgIWNzcy5pbmNsdWRlcyhcIn1cIikpIHtcbiAgICAgICAgICAgICAgICBjc3MgPSBgKiB7ICR7Y3NzfSB9YFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpXG5cbiAgICAgICAgICAgIHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpXG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKGNzcylcbiAgICAgICAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzLmdldCgpKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNzcy5zdWJzY3JpYmUoKCkgPT4gc2V0dGVyKGNzcy5nZXQoKSkpXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNsYXNzTmFtZS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKCkgPT4gKG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLykpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBhZGRDaGlsZChwYXJlbnQsIGNoaWxkLCBpbmRleCA9IC0xKSB7XG4gICAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICBjaGlsZCA9IEd0ay5MYWJlbC5uZXcoU3RyaW5nKGNoaWxkKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIGluZGV4KSkgcmV0dXJuXG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICBwYXJlbnQuYWRkQ2hpbGQoY2hpbGQpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQnVpbGRhYmxlKSB7XG4gICAgICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgYWRkKHBhcmVudCwgY2gsIGluZGV4KVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNoaWxkLmNvbm5lY3QoXCJjaGlsZC1hZGRlZFwiLCAoXywgY2g6IHVua25vd24sIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgYWRkICR7Y2h9IHRvICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYWRkQ2hpbGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIGNoaWxkLmNvbm5lY3QoXCJjaGlsZC1yZW1vdmVkXCIsIChfLCBjaDogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZShwYXJlbnQsIGNoKVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2hpbGQuZGVzdHJveSgpKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgYWRkICR7Y2hpbGR9IHRvICR7cGFyZW50fWApXG4gICAgfSxcbn0pXG5cbmV4cG9ydCB7IEZyYWdtZW50LCBpbnRyaW5zaWNFbGVtZW50cyB9XG5leHBvcnQgeyBqc3gsIGpzeHMgfSBmcm9tIFwiLi4vanN4L2pzeC5qc1wiXG4iLCAiaW1wb3J0IHsgc2V0U2hvd0Jhciwgc2V0U2hvd0Nyb3NzaGFpciwgc2hvd0Jhciwgc2hvd0Nyb3NzaGFpciB9IGZyb20gXCJAY29tbW9uL3ZhcnNcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXF1ZXN0SGFuZGxlcihyZXF1ZXN0OiBzdHJpbmcsIHJlczogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWQpIHtcbiAgY29uc3QgYXJncyA9IHJlcXVlc3Quc3BsaXQoJzonKVxuXG4gIHN3aXRjaCAoYXJnc1swXSkge1xuICAgIGNhc2UgJ2Jhcic6XG4gICAgICBzd2l0Y2ggKGFyZ3NbMV0pIHtcbiAgICAgICAgY2FzZSAndG9nZ2xlJzogcmV0dXJuIHJlcyhzZXRTaG93QmFyKCFzaG93QmFyLmdldCgpKSlcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuIHJlcygnVW5rbm93biBjb21tYW5kIGZvciBiYXIuJylcbiAgICAgIH1cbiAgICBjYXNlICdjcm9zc2hhaXInOlxuICAgICAgc3dpdGNoIChhcmdzWzFdKSB7XG4gICAgICAgIGNhc2UgJ3RvZ2dsZSc6IHJldHVybiByZXMoc2V0U2hvd0Nyb3NzaGFpcighc2hvd0Nyb3NzaGFpci5nZXQoKSkpXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiByZXMoJ1Vua25vd24gY29tbWFuZCBmb3IgY3Jvc3NoYWlyLicpXG4gICAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiByZXMoJ1Vua25vd24gcmVxdWVzdC4nKVxuICB9XG59XG4iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZEZpbGUocGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gQXN0YWwucmVhZF9maWxlKHBhdGgpIHx8IFwiXCJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlQXN5bmMocGF0aDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBBc3RhbC5yZWFkX2ZpbGVfYXN5bmMocGF0aCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsLnJlYWRfZmlsZV9maW5pc2gocmVzKSB8fCBcIlwiKVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlRmlsZShwYXRoOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZyk6IHZvaWQge1xuICAgIEFzdGFsLndyaXRlX2ZpbGUocGF0aCwgY29udGVudClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlRmlsZUFzeW5jKHBhdGg6IHN0cmluZywgY29udGVudDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgQXN0YWwud3JpdGVfZmlsZV9hc3luYyhwYXRoLCBjb250ZW50LCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWwud3JpdGVfZmlsZV9maW5pc2gocmVzKSlcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb25pdG9yRmlsZShcbiAgICBwYXRoOiBzdHJpbmcsXG4gICAgY2FsbGJhY2s6IChmaWxlOiBzdHJpbmcsIGV2ZW50OiBHaW8uRmlsZU1vbml0b3JFdmVudCkgPT4gdm9pZCxcbik6IEdpby5GaWxlTW9uaXRvciB7XG4gICAgcmV0dXJuIEFzdGFsLm1vbml0b3JfZmlsZShwYXRoLCAoZmlsZTogc3RyaW5nLCBldmVudDogR2lvLkZpbGVNb25pdG9yRXZlbnQpID0+IHtcbiAgICAgICAgY2FsbGJhY2soZmlsZSwgZXZlbnQpXG4gICAgfSkhXG59XG4iLCAiaW1wb3J0IGFwcCBmcm9tICdhZ3MvZ3RrNC9hcHAnXG5pbXBvcnQgeyBtb25pdG9yRmlsZSB9IGZyb20gJ2Fncy9maWxlJ1xuaW1wb3J0IHsgZXhlYyB9IGZyb20gJ2Fncy9wcm9jZXNzJ1xuXG5jb25zdCBUTVAgPSBcIi90bXBcIlxuXG5leHBvcnQgZnVuY3Rpb24gY29tcGlsZVNjc3MoKTogc3RyaW5nIHtcbiAgdHJ5IHtcbiAgICBleGVjKGBzYXNzICR7U1JDfS9zdHlsZS5zY3NzICR7VE1QfS9zdHlsZS5jc3NgKVxuICAgIGFwcC5hcHBseV9jc3MoJy90bXAvc3R5bGUuY3NzJylcbiAgICByZXR1cm4gYCR7VE1QfS9zdHlsZS5zY3NzYFxuICB9IGNhdGNoKGVycikge1xuICAgIHByaW50ZXJyKCdFcnJvciBjb21waWxpbmcgc2NzcyBmaWxlcy4nLCBlcnIpXG4gICAgcmV0dXJuICcnXG4gIH1cbn1cblxuLy8gSG90IFJlbG9hZCBTY3NzXG4oZnVuY3Rpb24oKSB7XG4gIGNvbnN0IHNjc3NGaWxlcyA9XG4gICAgZXhlYyhgZmluZCAtTCAke1NSQ30gLWluYW1lICcqLnNjc3MnYClcbiAgICAgIC5zcGxpdCgnXFxuJylcblxuICAvLyBDb21waWxlIHNjc3MgZmlsZXMgYXQgc3RhcnR1cFxuICBjb21waWxlU2NzcygpXG5cbiAgc2Nzc0ZpbGVzXG4gICAgLmZvckVhY2goZmlsZSA9PlxuICAgICAgbW9uaXRvckZpbGUoZmlsZSwgY29tcGlsZVNjc3MpXG4gICAgKVxufSkoKVxuIiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgeyBBc3RhbCwgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiXG5pbXBvcnQgTm90aWZpY2F0aW9uIGZyb20gXCJAd2lkZ2V0cy9Ob3RpZmljYXRpb24vTm90aWZpY2F0aW9uXCJcbmltcG9ydCB7IEZvciwgY3JlYXRlU3RhdGUsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgc2V0Tm90aWZpY2F0aW9uc0xlbmd0aCB9IGZyb20gXCJAY29tbW9uL3ZhcnNcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOb3RpZmljYXRpb25Qb3B1cHMobW9uaXRvcjogR2RrLk1vbml0b3IpIHtcblxuICBjb25zdCBub3RpZmQgPSBBc3RhbE5vdGlmZC5nZXRfZGVmYXVsdCgpXG5cbiAgY29uc3QgW25vdGlmaWNhdGlvbnMsIHNldE5vdGlmaWNhdGlvbnNdID0gY3JlYXRlU3RhdGUoXG4gICAgbmV3IEFycmF5PEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbj4oKSxcbiAgKVxuXG4gIGNvbnN0IG5vdGlmaWVkSGFuZGxlciA9IG5vdGlmZC5jb25uZWN0KFwibm90aWZpZWRcIiwgKF8sIGlkLCByZXBsYWNlZCkgPT4ge1xuICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IG5vdGlmZC5nZXRfbm90aWZpY2F0aW9uKGlkKVxuXG4gICAgaWYgKHJlcGxhY2VkICYmIG5vdGlmaWNhdGlvbnMuZ2V0KCkuc29tZSgobikgPT4gbi5pZCA9PT0gaWQpKSB7XG4gICAgICBzZXROb3RpZmljYXRpb25zKChucykgPT4gbnMubWFwKChuKSA9PiAobi5pZCA9PT0gaWQgPyBub3RpZmljYXRpb24gOiBuKSkpXG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBbbm90aWZpY2F0aW9uLCAuLi5uc10pXG4gICAgfVxuICB9KVxuXG4gIGNvbnN0IHJlc29sdmVkSGFuZGxlciA9IG5vdGlmZC5jb25uZWN0KFwicmVzb2x2ZWRcIiwgKF8sIGlkKSA9PiB7XG4gICAgc2V0Tm90aWZpY2F0aW9ucygobnMpID0+IG5zLmZpbHRlcigobikgPT4gbi5pZCAhPT0gaWQpKVxuICB9KVxuXG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgbm90aWZkLmRpc2Nvbm5lY3Qobm90aWZpZWRIYW5kbGVyKVxuICAgIG5vdGlmZC5kaXNjb25uZWN0KHJlc29sdmVkSGFuZGxlcilcbiAgfSlcblxuICByZXR1cm4gKFxuICAgIDx3aW5kb3dcbiAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgY2xhc3M9XCJOb3RpZmljYXRpb25Qb3B1cHNcIlxuICAgICAgZ2RrbW9uaXRvcj17bW9uaXRvcn1cbiAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgICB2aXNpYmxlPXtub3RpZmljYXRpb25zKChucykgPT4ge1xuICAgICAgICBzZXROb3RpZmljYXRpb25zTGVuZ3RoKG5zLmxlbmd0aClcbiAgICAgICAgcmV0dXJuIG5zLmxlbmd0aCA+IDAgfSlcbiAgICAgIH1cbiAgICAgIGFuY2hvcj17QXN0YWwuV2luZG93QW5jaG9yLlRPUCB8IEFzdGFsLldpbmRvd0FuY2hvci5SSUdIVH1cbiAgICA+XG4gICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICA8Rm9yIGVhY2g9e25vdGlmaWNhdGlvbnN9PlxuICAgICAgICAgIHsobm90aWZpY2F0aW9uKSA9PiA8Tm90aWZpY2F0aW9uIG5vdGlmaWNhdGlvbj17bm90aWZpY2F0aW9ufSAvPn1cbiAgICAgICAgPC9Gb3I+XG4gICAgICA8L2JveD5cbiAgICA8L3dpbmRvdz5cbiAgKVxufVxuIiwgImltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBBZHcgZnJvbSBcImdpOi8vQWR3XCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IEFzdGFsTm90aWZkIGZyb20gXCJnaTovL0FzdGFsTm90aWZkXCJcbmltcG9ydCBQYW5nbyBmcm9tIFwiZ2k6Ly9QYW5nb1wiXG5cbmZ1bmN0aW9uIGlzSWNvbihpY29uPzogc3RyaW5nIHwgbnVsbCkge1xuICBjb25zdCBpY29uVGhlbWUgPSBHdGsuSWNvblRoZW1lLmdldF9mb3JfZGlzcGxheShHZGsuRGlzcGxheS5nZXRfZGVmYXVsdCgpISlcbiAgcmV0dXJuIGljb24gJiYgaWNvblRoZW1lLmhhc19pY29uKGljb24pXG59XG5cbmZ1bmN0aW9uIGZpbGVFeGlzdHMocGF0aDogc3RyaW5nKSB7XG4gIHJldHVybiBHTGliLmZpbGVfdGVzdChwYXRoLCBHTGliLkZpbGVUZXN0LkVYSVNUUylcbn1cblxuZnVuY3Rpb24gdGltZSh0aW1lOiBudW1iZXIsIGZvcm1hdCA9IFwiJUg6JU1cIikge1xuICByZXR1cm4gR0xpYi5EYXRlVGltZS5uZXdfZnJvbV91bml4X2xvY2FsKHRpbWUpLmZvcm1hdChmb3JtYXQpIVxufVxuXG5mdW5jdGlvbiB1cmdlbmN5KG46IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbikge1xuICBjb25zdCB7IExPVywgTk9STUFMLCBDUklUSUNBTCB9ID0gQXN0YWxOb3RpZmQuVXJnZW5jeVxuICBzd2l0Y2ggKG4udXJnZW5jeSkge1xuICAgIGNhc2UgTE9XOlxuICAgICAgcmV0dXJuIFwibG93XCJcbiAgICBjYXNlIENSSVRJQ0FMOlxuICAgICAgcmV0dXJuIFwiY3JpdGljYWxcIlxuICAgIGNhc2UgTk9STUFMOlxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gXCJub3JtYWxcIlxuICB9XG59XG5cbmludGVyZmFjZSBOb3RpZmljYXRpb25Qcm9wcyB7XG4gIG5vdGlmaWNhdGlvbjogQXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vdGlmaWNhdGlvbih7IG5vdGlmaWNhdGlvbjogbiB9OiBOb3RpZmljYXRpb25Qcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxBZHcuQ2xhbXAgbWF4aW11bVNpemU9ezQwMH0+XG4gICAgICA8Ym94XG4gICAgICAgIHdpZHRoUmVxdWVzdD17NDAwfVxuICAgICAgICBjbGFzcz17YE5vdGlmaWNhdGlvbiAke3VyZ2VuY3kobil9YH1cbiAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH1cbiAgICAgID5cbiAgICAgICAgPGJveCBjbGFzcz1cImhlYWRlclwiPlxuICAgICAgICAgIHsobi5hcHBJY29uIHx8IGlzSWNvbihuLmRlc2t0b3BFbnRyeSkpICYmIChcbiAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICBjbGFzcz1cImFwcC1pY29uXCJcbiAgICAgICAgICAgICAgdmlzaWJsZT17Qm9vbGVhbihuLmFwcEljb24gfHwgbi5kZXNrdG9wRW50cnkpfVxuICAgICAgICAgICAgICBpY29uTmFtZT17bi5hcHBJY29uIHx8IG4uZGVza3RvcEVudHJ5fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgY2xhc3M9XCJhcHAtbmFtZVwiXG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH1cbiAgICAgICAgICAgIGVsbGlwc2l6ZT17UGFuZ28uRWxsaXBzaXplTW9kZS5FTkR9XG4gICAgICAgICAgICBsYWJlbD17bi5hcHBOYW1lIHx8IFwiVW5rbm93blwifVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICBjbGFzcz1cInRpbWVcIlxuICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uRU5EfVxuICAgICAgICAgICAgbGFiZWw9e3RpbWUobi50aW1lKX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxidXR0b24gb25DbGlja2VkPXsoKSA9PiBuLmRpc21pc3MoKX0+XG4gICAgICAgICAgICA8aW1hZ2UgaWNvbk5hbWU9XCJ3aW5kb3ctY2xvc2Utc3ltYm9saWNcIiAvPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2JveD5cbiAgICAgICAgPEd0ay5TZXBhcmF0b3IgdmlzaWJsZSAvPlxuICAgICAgICA8Ym94IGNsYXNzPVwiY29udGVudFwiPlxuICAgICAgICAgIHtuLmltYWdlICYmIGZpbGVFeGlzdHMobi5pbWFnZSkgJiYgKFxuICAgICAgICAgICAgPGltYWdlIHZhbGlnbj17R3RrLkFsaWduLlNUQVJUfSBjbGFzcz1cImltYWdlXCIgZmlsZT17bi5pbWFnZX0gLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtuLmltYWdlICYmIGlzSWNvbihuLmltYWdlKSAmJiAoXG4gICAgICAgICAgICA8Ym94IHZhbGlnbj17R3RrLkFsaWduLlNUQVJUfSBjbGFzcz1cImljb24taW1hZ2VcIj5cbiAgICAgICAgICAgICAgPGltYWdlXG4gICAgICAgICAgICAgICAgaWNvbk5hbWU9e24uaW1hZ2V9XG4gICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICl9XG4gICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICBjbGFzcz1cInN1bW1hcnlcIlxuICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH1cbiAgICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgICBsYWJlbD17bi5zdW1tYXJ5fVxuICAgICAgICAgICAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuRU5EfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHtuLmJvZHkgJiYgKFxuICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICBjbGFzcz1cImJvZHlcIlxuICAgICAgICAgICAgICAgIHdyYXBcbiAgICAgICAgICAgICAgICB1c2VNYXJrdXBcbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH1cbiAgICAgICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICAgICAganVzdGlmeT17R3RrLkp1c3RpZmljYXRpb24uRklMTH1cbiAgICAgICAgICAgICAgICBsYWJlbD17bi5ib2R5fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIHtuLmFjdGlvbnMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgPGJveCBjbGFzcz1cImFjdGlvbnNcIj5cbiAgICAgICAgICAgIHtuLmFjdGlvbnMubWFwKCh7IGxhYmVsLCBpZCB9KSA9PiAoXG4gICAgICAgICAgICAgIDxidXR0b24gaGV4cGFuZCBvbkNsaWNrZWQ9eygpID0+IG4uaW52b2tlKGlkKX0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtsYWJlbH0gaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfSBoZXhwYW5kIC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgICl9XG4gICAgICA8L2JveD5cbiAgICA8L0Fkdy5DbGFtcD5cbiAgKVxufVxuIiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgeyBBc3RhbCB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJhZ3NcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDcm9zc2hhaXIobW9uaXRvcjogR2RrLk1vbml0b3IsIHZpc2libGU6IEFjY2Vzc29yPGJvb2xlYW4+KSB7XG4gIHJldHVybiA8d2luZG93XG4gICAgY2xhc3M9XCJDcm9zc2hhaXJcIlxuICAgIG5hbWVzcGFjZT1cImNyb3NzaGFpclwiXG4gICAgZ2RrbW9uaXRvcj17bW9uaXRvcn1cbiAgICB2aXNpYmxlPXt2aXNpYmxlfVxuICAgIGxheWVyPXtBc3RhbC5MYXllci5PVkVSTEFZfVxuICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LklHTk9SRX1cbiAgICBrZXltb2RlPXtBc3RhbC5LZXltb2RlLk5PTkV9XG4gICAgY2FuRm9jdXM9e2ZhbHNlfVxuICA+XG4gICAgPGJveFxuICAgICAgY2xhc3M9XCJEb3RcIlxuICAgIC8+XG4gIDwvd2luZG93PlxufVxuIiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgQmFyIGZyb20gXCJAd2luZG93cy9iYXIvQmFyXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCByZXF1ZXN0SGFuZGxlciBmcm9tIFwiLi9yZXF1ZXN0SGFuZGxlclwiXG5pbXBvcnQgeyBzaG93QmFyLCBzaG93Q3Jvc3NoYWlyIH0gZnJvbSBcIkBjb21tb24vdmFyc1wiXG5pbXBvcnQgeyBjb21waWxlU2NzcyB9IGZyb20gXCJAY29tbW9uL2Nzc0hvdFJlbG9hZFwiXG5pbXBvcnQgTm90aWZpY2F0aW9uUG9wdXBzIGZyb20gXCJAd2luZG93cy9ub3RpZmljYXRpb25fcG9wdXBzL05vdGlmaWNhdGlvblBvcHVwc1wiXG5pbXBvcnQgQ3Jvc3NoYWlyIGZyb20gXCJAd2luZG93cy9jcm9zc2hhaXIvQ3Jvc3NoYWlyXCJcblxuZnVuY3Rpb24gZ2V0VGFyZ2V0TW9uaXRvcihtb25pdG9yczogQXJyYXk8R2RrLk1vbml0b3I+KSB7XG4gIGNvbnN0IG5vdGVib29rTW9kZWwgPSBcIjB4OTA1MVwiXG4gIGNvbnN0IHBjTW9kZWwgPSBcIjI0RzJXMUc0XCJcblxuICBjb25zdCBub3RlYm9va01vbml0b3IgPSBtb25pdG9ycy5maW5kKG0gPT4gbS5tb2RlbCA9PT0gbm90ZWJvb2tNb2RlbClcbiAgY29uc3QgcGNNb25pdG9yID0gbW9uaXRvcnMuZmluZChtID0+IG0ubW9kZWwgPT09IHBjTW9kZWwpXG5cbiAgcmV0dXJuIG5vdGVib29rTW9uaXRvciB8fCBwY01vbml0b3IgfHwgbW9uaXRvcnNbMF1cbn1cblxuYXBwLnN0YXJ0KHtcbiAgY3NzOiBjb21waWxlU2NzcygpLFxuICBpbnN0YW5jZU5hbWU6IFwiYWdzdjNcIixcbiAgcmVxdWVzdEhhbmRsZXI6IHJlcXVlc3RIYW5kbGVyLFxuICBtYWluKCkge1xuICAgIGNvbnN0IHRhcmdldE1vbml0b3IgPSBnZXRUYXJnZXRNb25pdG9yKGFwcC5nZXRfbW9uaXRvcnMoKSlcbiAgICBCYXIodGFyZ2V0TW9uaXRvciwgc2hvd0JhcilcbiAgICBOb3RpZmljYXRpb25Qb3B1cHModGFyZ2V0TW9uaXRvcilcbiAgICBDcm9zc2hhaXIodGFyZ2V0TW9uaXRvciwgc2hvd0Nyb3NzaGFpcilcblxuICAgIHByaW50KGBcXG5Bc3RhbCBXaW5kb3dzIGFwcGxpZWQgb24gbW9uaXRvcjogJHt0YXJnZXRNb25pdG9yLm1vZGVsfWApXG4gIH0sXG59KVxuIl0sCiAgIm1hcHBpbmdzIjog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QWE7QUFFdEMsVUFBTTtBQUFBLG9DQUF1QyxjQUFjLEtBQUssRUFBRTtBQUFBLEVBQ3BFO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFsiR0xpYiIsICJtb2QiLCAicGF0Y2giLCAiTXByaXMiLCAiTm90aWZpY2F0aW9uIiwgIkdPYmplY3QiLCAic25ha2VpZnkiLCAic25ha2VpZnkiLCAic2V0IiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJHT2JqZWN0IiwgIm1vZCIsICJHT2JqZWN0IiwgInJlbW92ZSIsICJHT2JqZWN0IiwgInJlcXVlc3RIYW5kbGVyIiwgIkdMaWIiLCAiQWR3IiwgIkFzdGFsIiwgIkd0ayIsICJHdGsiLCAiR0xpYiIsICJBc3RhbElPIiwgIkFzdGFsSU8iLCAiaW50ZXJ2YWwiLCAic2V0IiwgIkdMaWIiLCAiR3RrIiwgIkFzdGFsIiwgIkd0ayIsICJHaW8iLCAiR09iamVjdCIsICJHdGsiLCAiR2lvIiwgImNzcyIsICJHT2JqZWN0IiwgImluZGV4IiwgIkd0ayIsICJBc3RhbCIsICJ3aWZpIiwgIndpcmVkIiwgIkd0ayIsICJtZW1vcnlVc2FnZSIsICJUaW1lIiwgInRpbWUiLCAiQXN0YWwiLCAiQXN0YWwiLCAiQXN0YWwiLCAiQXN0YWxOb3RpZmQiLCAiR3RrIiwgIkdkayIsICJHTGliIiwgIkd0ayIsICJHZGsiLCAiR0xpYiIsICJ0aW1lIiwgIkFzdGFsTm90aWZkIiwgIkFzdGFsIiwgIkd0ayIsICJBc3RhbCJdCn0K

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@