#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gLi-ags.js"

cat <<EOF | base64 --decode > $file
Ly8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMKaW1wb3J0IEdMaWIyIGZyb20gImdpOi8vR0xpYj92ZXJzaW9uPTIuMCI7CmltcG9ydCBHdGsgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj00LjAiOwppbXBvcnQgQXN0YWwgZnJvbSAiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMCI7CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9vdmVycmlkZXMudHMKZnVuY3Rpb24gc25ha2VpZnkoc3RyKSB7CiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCAiJDFfJDIiKS5yZXBsYWNlQWxsKCItIiwgIl8iKS50b0xvd2VyQ2FzZSgpOwp9CmFzeW5jIGZ1bmN0aW9uIHN1cHByZXNzKG1vZDIsIHBhdGNoMikgewogIHJldHVybiBtb2QyLnRoZW4oKG0pID0+IHBhdGNoMihtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApOwp9CmZ1bmN0aW9uIHBhdGNoKHByb3RvLCBwcm9wKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7CiAgICBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzW2BnZXRfJHtzbmFrZWlmeShwcm9wKX1gXSgpOwogICAgfQogIH0pOwp9CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbEFwcHMiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4gewogIHBhdGNoKEFwcHMucHJvdG90eXBlLCAibGlzdCIpOwogIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgImtleXdvcmRzIik7CiAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCAiY2F0ZWdvcmllcyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsQmF0dGVyeSIpLCAoeyBVUG93ZXIgfSkgPT4gewogIHBhdGNoKFVQb3dlci5wcm90b3R5cGUsICJkZXZpY2VzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxCbHVldG9vdGgiKSwgKHsgQWRhcHRlciwgQmx1ZXRvb3RoLCBEZXZpY2UgfSkgPT4gewogIHBhdGNoKEFkYXB0ZXIucHJvdG90eXBlLCAidXVpZHMiKTsKICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCAiYWRhcHRlcnMiKTsKICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCAiZGV2aWNlcyIpOwogIHBhdGNoKERldmljZS5wcm90b3R5cGUsICJ1dWlkcyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsSHlwcmxhbmQiKSwgKHsgSHlwcmxhbmQsIE1vbml0b3IsIFdvcmtzcGFjZSB9KSA9PiB7CiAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCAiYmluZHMiKTsKICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsICJtb25pdG9ycyIpOwogIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgIndvcmtzcGFjZXMiKTsKICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsICJjbGllbnRzIik7CiAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsICJhdmFpbGFibGVNb2RlcyIpOwogIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCAiYXZhaWxhYmxlX21vZGVzIik7CiAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgImNsaWVudHMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbE1wcmlzIiksICh7IE1wcmlzOiBNcHJpczIsIFBsYXllciB9KSA9PiB7CiAgcGF0Y2goTXByaXMyLnByb3RvdHlwZSwgInBsYXllcnMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkX3VyaV9zY2hlbWVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgInN1cHBvcnRlZFVyaVNjaGVtZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkX21pbWVfdHlwZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkTWltZVR5cGVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgImNvbW1lbnRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxOZXR3b3JrIiksICh7IFdpZmkgfSkgPT4gewogIHBhdGNoKFdpZmkucHJvdG90eXBlLCAiYWNjZXNzX3BvaW50cyIpOwogIHBhdGNoKFdpZmkucHJvdG90eXBlLCAiYWNjZXNzUG9pbnRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxOb3RpZmQiKSwgKHsgTm90aWZkLCBOb3RpZmljYXRpb246IE5vdGlmaWNhdGlvbjIgfSkgPT4gewogIHBhdGNoKE5vdGlmZC5wcm90b3R5cGUsICJub3RpZmljYXRpb25zIik7CiAgcGF0Y2goTm90aWZpY2F0aW9uMi5wcm90b3R5cGUsICJhY3Rpb25zIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxQb3dlclByb2ZpbGVzIiksICh7IFBvd2VyUHJvZmlsZXMgfSkgPT4gewogIHBhdGNoKFBvd2VyUHJvZmlsZXMucHJvdG90eXBlLCAiYWN0aW9ucyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsV3AiKSwgKHsgV3AsIEF1ZGlvLCBWaWRlbyB9KSA9PiB7CiAgcGF0Y2goV3AucHJvdG90eXBlLCAiZGV2aWNlcyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgInN0cmVhbXMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJyZWNvcmRlcnMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJtaWNyb3Bob25lcyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgInNwZWFrZXJzIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAiZGV2aWNlcyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgInN0cmVhbXMiKTsKICBwYXRjaChWaWRlby5wcm90b3R5cGUsICJyZWNvcmRlcnMiKTsKICBwYXRjaChWaWRlby5wcm90b3R5cGUsICJzaW5rcyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgInNvdXJjZXMiKTsKICBwYXRjaChWaWRlby5wcm90b3R5cGUsICJkZXZpY2VzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxUcmF5IiksICh7IFRyYXkgfSkgPT4gewogIHBhdGNoKFRyYXkucHJvdG90eXBlLCAiaXRlbXMiKTsKfSk7CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9fYXBwLnRzCmltcG9ydCB7IHNldENvbnNvbGVMb2dEb21haW4gfSBmcm9tICJjb25zb2xlIjsKaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tICJzeXN0ZW0iOwoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9qc3gudHMKaW1wb3J0IEdPYmplY3QyIGZyb20gImdpOi8vR09iamVjdCI7CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzCmltcG9ydCBHT2JqZWN0IGZyb20gImdpOi8vR09iamVjdCI7CmltcG9ydCBHaW8gZnJvbSAiZ2k6Ly9HaW8iOwppbXBvcnQgR0xpYiBmcm9tICJnaTovL0dMaWIiOwoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L3V0aWwudHMKZnVuY3Rpb24ga2ViYWJpZnkoc3RyKSB7CiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCAiJDEtJDIiKS5yZXBsYWNlQWxsKCJfIiwgIi0iKS50b0xvd2VyQ2FzZSgpOwp9CmZ1bmN0aW9uIHNuYWtlaWZ5MihzdHIpIHsKICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICIkMS0kMiIpLnJlcGxhY2VBbGwoIi0iLCAiXyIpLnRvTG93ZXJDYXNlKCk7Cn0KZnVuY3Rpb24gc2V0KG9iaiwgcHJvcCwgdmFsdWUpIHsKICBjb25zdCBrZXkgPSBzbmFrZWlmeTIocHJvcCk7CiAgY29uc3QgZ2V0dGVyID0gYGdldF8ke2tleX1gOwogIGNvbnN0IHNldHRlciA9IGBzZXRfJHtrZXl9YDsKICBsZXQgY3VycmVudDsKICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09ICJmdW5jdGlvbiIpIHsKICAgIGN1cnJlbnQgPSBvYmpbZ2V0dGVyXSgpOwogIH0gZWxzZSB7CiAgICBjdXJyZW50ID0gb2JqW3Byb3BdOwogIH0KICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHsKICAgIGlmIChzZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbc2V0dGVyXSA9PT0gImZ1bmN0aW9uIikgewogICAgICA7CiAgICAgIG9ialtzZXR0ZXJdKHZhbHVlKTsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm9wXTogdmFsdWUgfSk7CiAgICB9CiAgfQp9CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzCnZhciBBY2Nlc3NvciA9IGNsYXNzIF9BY2Nlc3NvciBleHRlbmRzIEZ1bmN0aW9uIHsKICBzdGF0aWMgewogICAgdGhpcy4kZ3R5cGUgPSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1Q7CiAgfQogICNnZXQ7CiAgI3N1YnNjcmliZTsKICBjb25zdHJ1Y3RvcihnZXQsIHN1YnNjcmliZSkgewogICAgc3VwZXIoInJldHVybiBhcmd1bWVudHMuY2FsbGVlLl9jYWxsLmFwcGx5KGFyZ3VtZW50cy5jYWxsZWUsIGFyZ3VtZW50cykiKTsKICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKTsKICAgIHRoaXMuI2dldCA9IGdldDsKICB9CiAgLyoqCiAgICogU3Vic2NyaWJlIGZvciB2YWx1ZSBjaGFuZ2VzLgogICAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnQgdmFsdWUgY2hhbmdlcy4KICAgKiBAcmV0dXJucyBVbnN1YnNjcmliZSBmdW5jdGlvbi4KICAgKi8KICBzdWJzY3JpYmUoY2FsbGJhY2spIHsKICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spOwogIH0KICAvKioKICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZS4KICAgKi8KICBnZXQoKSB7CiAgICByZXR1cm4gdGhpcy4jZ2V0KCk7CiAgfQogIC8qKgogICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS4KICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi4KICAgKi8KICBhcyh0cmFuc2Zvcm0pIHsKICAgIHJldHVybiBuZXcgX0FjY2Vzc29yKCgpID0+IHRyYW5zZm9ybSh0aGlzLiNnZXQoKSksIHRoaXMuI3N1YnNjcmliZSk7CiAgfQogIF9jYWxsKHRyYW5zZm9ybSkgewogICAgcmV0dXJuIHRoaXMuYXModHJhbnNmb3JtKTsKICB9CiAgdG9TdHJpbmcoKSB7CiAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YDsKICB9CiAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7CiAgICBjb25zb2xlLndhcm4oIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLiIpOwogICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTsKICB9Cn07CmZ1bmN0aW9uIGNyZWF0ZVN0YXRlKGluaXQpIHsKICBsZXQgY3VycmVudFZhbHVlID0gaW5pdDsKICBjb25zdCBzdWJzY3JpYmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgY29uc3Qgc3Vic2NyaWJlID0gKGNhbGxiYWNrKSA9PiB7CiAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spOwogICAgcmV0dXJuICgpID0+IHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjayk7CiAgfTsKICBjb25zdCBzZXQyID0gKG5ld1ZhbHVlKSA9PiB7CiAgICBjb25zdCB2YWx1ZSA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gImZ1bmN0aW9uIiA/IG5ld1ZhbHVlKGN1cnJlbnRWYWx1ZSkgOiBuZXdWYWx1ZTsKICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7CiAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlOwogICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICB9CiAgfTsKICByZXR1cm4gW25ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSksIHNldDJdOwp9CmZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmcob2JqZWN0LCBrZXkpIHsKICBjb25zdCBwcm9wID0ga2ViYWJpZnkoa2V5KTsKICBjb25zdCBzdWJzY3JpYmUgPSAoY2FsbGJhY2spID0+IHsKICAgIGNvbnN0IHNpZyA9IG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncyA/ICJjaGFuZ2VkIiA6ICJub3RpZnkiOwogICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChgJHtzaWd9Ojoke3Byb3B9YCwgKCkgPT4gY2FsbGJhY2soKSk7CiAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpOwogIH07CiAgY29uc3QgZ2V0ID0gKCkgPT4gewogICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncykgewogICAgICByZXR1cm4gb2JqZWN0LmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpOwogICAgfSBlbHNlIHsKICAgICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke3Byb3AucmVwbGFjZUFsbCgiLSIsICJfIil9YDsKICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgcmV0dXJuIG9iamVjdFtnZXR0ZXJdKCk7CiAgICAgIH0KICAgICAgaWYgKHByb3AgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W3Byb3BdOwogICAgICBpZiAoa2V5IGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtrZXldOwogICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGdldCBwcm9wZXJ0eSAke2tleX1gKTsKICAgIH0KICB9OwogIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpOwp9CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cwpmdW5jdGlvbiBjb25maWd1ZShjb25mKSB7CiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKTsKfQpmdW5jdGlvbiBtaXNzaW5nSW1wbCgpIHsKICB0aHJvdyBFcnJvcigibWlzc2luZyBpbXBsIik7Cn0KdmFyIGVudiA9IHsKICBpbnRyaW5zaWNFbGVtZW50czoge30sCiAgYWRkQ2hpbGQ6IG1pc3NpbmdJbXBsLAogIHNldENzczogbWlzc2luZ0ltcGwsCiAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLAogIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLAogIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAKfTsKCi8vIC4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMKdmFyIFNjb3BlID0gY2xhc3MgX1Njb3BlIHsKICBjb25zdHJ1Y3RvcihwYXJlbnQpIHsKICAgIHRoaXMuY29udGV4dHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpOwogICAgdGhpcy5jbGVhbnVwcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgICB0aGlzLm1vdW50cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgICB0aGlzLm1vdW50ZWQgPSBmYWxzZTsKICAgIHRoaXMucGFyZW50ID0gcGFyZW50OwogIH0KICBvbkNsZWFudXAoY2FsbGJhY2spIHsKICAgIHRoaXMuY2xlYW51cHM/LmFkZChjYWxsYmFjayk7CiAgfQogIG9uTW91bnQoY2FsbGJhY2spIHsKICAgIGlmICh0aGlzLnBhcmVudCAmJiAhdGhpcy5wYXJlbnQubW91bnRlZCkgewogICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMubW91bnRzLmFkZChjYWxsYmFjayk7CiAgICB9CiAgfQogIHJ1bihmbikgewogICAgY29uc3QgcHJldiA9IF9TY29wZS5jdXJyZW50OwogICAgX1Njb3BlLmN1cnJlbnQgPSB0aGlzOwogICAgdHJ5IHsKICAgICAgcmV0dXJuIGZuKCk7CiAgICB9IGZpbmFsbHkgewogICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICAgIHRoaXMubW91bnRzLmNsZWFyKCk7CiAgICAgIHRoaXMubW91bnRlZCA9IHRydWU7CiAgICAgIF9TY29wZS5jdXJyZW50ID0gcHJldjsKICAgIH0KICB9CiAgZGlzcG9zZSgpIHsKICAgIHRoaXMuY2xlYW51cHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpOwogICAgdGhpcy5jbGVhbnVwcy5jbGVhcigpOwogICAgdGhpcy5jb250ZXh0cy5jbGVhcigpOwogICAgZGVsZXRlIHRoaXMucGFyZW50OwogIH0KfTsKZnVuY3Rpb24gZ2V0U2NvcGUoKSB7CiAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50OwogIGlmICghc2NvcGUpIHsKICAgIHRocm93IEVycm9yKCJjYW5ub3QgZ2V0IHNjb3BlOiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dCIpOwogIH0KICByZXR1cm4gc2NvcGU7Cn0KZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXApIHsKICBpZiAoIVNjb3BlLmN1cnJlbnQpIHsKICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXAiKSk7CiAgfQogIFNjb3BlLmN1cnJlbnQ/Lm9uQ2xlYW51cChjbGVhbnVwKTsKfQpmdW5jdGlvbiBjcmVhdGVSb290KGZuKSB7CiAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUobnVsbCk7CiAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKTsKfQoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9qc3gudHMKdmFyIGd0a1R5cGUgPSBTeW1ib2woImd0ayBidWlsZGVyIHR5cGUiKTsKZnVuY3Rpb24gZ2V0VHlwZShvYmplY3QpIHsKICByZXR1cm4gZ3RrVHlwZSBpbiBvYmplY3QgPyBvYmplY3RbZ3RrVHlwZV0gOiBudWxsOwp9CmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcikgewogIHJldHVybiBjdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdPYmplY3QyLk9iamVjdDsKfQpmdW5jdGlvbiBpc0Z1bmN0aW9uQ3RvcihjdG9yKSB7CiAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSAiZnVuY3Rpb24iICYmICFpc0dPYmplY3RDdG9yKGN0b3IpOwp9CmZ1bmN0aW9uIHNldFR5cGUob2JqZWN0LCB0eXBlKSB7CiAgaWYgKGd0a1R5cGUgaW4gb2JqZWN0ICYmIG9iamVjdFtndGtUeXBlXSAhPT0gIiIpIHsKICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKTsKICB9CiAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pOwp9CmZ1bmN0aW9uIGpzeChjdG9yLCBpbnByb3BzLCBrZXkpIHsKICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuLCAuLi5yZXN0IH0gPSBpbnByb3BzOwogIGNvbnN0IHByb3BzID0gcmVzdDsKICBpZiAoa2V5KSBPYmplY3QuYXNzaWduKHByb3BzLCB7IGtleSB9KTsKICBlbnYuaW5pdFByb3BzKHByb3BzKTsKICBmb3IgKGNvbnN0IFtrZXkyLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7CiAgICBpZiAodmFsdWUgPT09IHZvaWQgMCkgZGVsZXRlIHByb3BzW2tleTJdOwogIH0KICBpZiAodHlwZW9mIGN0b3IgPT09ICJzdHJpbmciKSB7CiAgICBpZiAoY3RvciBpbiBlbnYuaW50cmluc2ljRWxlbWVudHMpIHsKICAgICAgY3RvciA9IGVudi5pbnRyaW5zaWNFbGVtZW50c1tjdG9yXTsKICAgIH0gZWxzZSB7CiAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50ICIke2N0b3J9ImApOwogICAgfQogIH0KICBpZiAoaXNGdW5jdGlvbkN0b3IoY3RvcikpIHsKICAgIGNvbnN0IG9iamVjdDIgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pOwogICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdDIsICR0eXBlKTsKICAgICQ/LihvYmplY3QyKTsKICAgIHJldHVybiBvYmplY3QyOwogIH0KICBjb25zdCB7IGNzcywgY2xhc3M6IGNsYXNzTmFtZSB9ID0gcHJvcHM7CiAgZGVsZXRlIHByb3BzLmNzczsKICBkZWxldGUgcHJvcHMuY2xhc3M7CiAgY29uc3Qgc2lnbmFscyA9IFtdOwogIGNvbnN0IGJpbmRpbmdzID0gW107CiAgZm9yIChjb25zdCBba2V5MiwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkgewogICAgaWYgKGtleTIuc3RhcnRzV2l0aCgib24iKSkgewogICAgICBzaWduYWxzLnB1c2goW2tleTIuc2xpY2UoMiksIHZhbHVlXSk7CiAgICAgIGRlbGV0ZSBwcm9wc1trZXkyXTsKICAgIH0KICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7CiAgICAgIGJpbmRpbmdzLnB1c2goW2tleTIsIHZhbHVlXSk7CiAgICAgIHByb3BzW2tleTJdID0gdmFsdWUuZ2V0KCk7CiAgICB9CiAgfQogIGNvbnN0IG9iamVjdCA9ICRjb25zdHJ1Y3RvciA/ICRjb25zdHJ1Y3Rvcihwcm9wcykgOiBuZXcgY3Rvcihwcm9wcyk7CiAgaWYgKCRjb25zdHJ1Y3RvcikgT2JqZWN0LmFzc2lnbihvYmplY3QsIHByb3BzKTsKICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSk7CiAgaWYgKGNzcykgZW52LnNldENzcyhvYmplY3QsIGNzcyk7CiAgaWYgKGNsYXNzTmFtZSkgZW52LnNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKTsKICBmb3IgKGNvbnN0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7CiAgICBpZiAoY2hpbGQgPT09IHRydWUpIHsKICAgICAgY29uc29sZS53YXJuKCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuIik7CiAgICAgIGNvbnRpbnVlOwogICAgfQogICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7CiAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHsKICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaCwgLTEpOwogICAgICB9CiAgICB9IGVsc2UgaWYgKGNoaWxkKSB7CiAgICAgIGVudi5hZGRDaGlsZChvYmplY3QsIGNoaWxkLCAtMSk7CiAgICB9CiAgfQogIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4gewogICAgY29uc3QgbmFtZSA9IGtlYmFiaWZ5KHNpZyk7CiAgICBjb25zdCBpZCA9IG5hbWUuc3RhcnRzV2l0aCgibm90aWZ5LSIpID8gb2JqZWN0LmNvbm5lY3QoYG5vdGlmeTo6JHtuYW1lLnNsaWNlKDcpfWAsIGhhbmRsZXIpIDogb2JqZWN0LmNvbm5lY3Qoa2ViYWJpZnkoc2lnKSwgaGFuZGxlcik7CiAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpOwogIH0pOwogIGNvbnN0IGRpc3Bvc2VCaW5kaW5ncyA9IGJpbmRpbmdzLm1hcCgoW3Byb3AsIGJpbmRpbmddKSA9PiB7CiAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4gewogICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKTsKICAgIH0pOwogICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSk7CiAgICByZXR1cm4gZGlzcG9zZTsKICB9KTsKICBpZiAoZGlzcG9zZUJpbmRpbmdzLmxlbmd0aCA+IDAgfHwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aCA+IDApIHsKICAgIG9uQ2xlYW51cCgoKSA9PiB7CiAgICAgIGRpc3Bvc2VIYW5kbGVycy5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICAgIGRpc3Bvc2VCaW5kaW5ncy5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICB9KTsKICB9CiAgJD8uKG9iamVjdCk7CiAgcmV0dXJuIG9iamVjdDsKfQp2YXIganN4cyA9IGpzeDsKCi8vIC4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMKaW1wb3J0IEdPYmplY3QzIGZyb20gImdpOi8vR09iamVjdCI7CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ25vbWUvc2lnbmFsVHJhY2tlci50cwp2YXIgbW9kID0gaW1wb3J0KCJyZXNvdXJjZTovLy9vcmcvZ25vbWUvc2hlbGwvbWlzYy9zaWduYWxUcmFja2VyLmpzIik7CnZhciByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSA9IGF3YWl0IG1vZC50aGVuKChtb2QyKSA9PiBtb2QyLnJlZ2lzdGVyRGVzdHJveWFibGVUeXBlKS5jYXRjaCgoKSA9PiAoKSA9PiB2b2lkIDApOwoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cwp2YXIgX2EsIF9iLCBfYzsKdmFyIEZyYWdtZW50ID0gY2xhc3MgX0ZyYWdtZW50IGV4dGVuZHMgKF9jID0gR09iamVjdDMuT2JqZWN0LCBfYiA9IEdPYmplY3QzLnNpZ25hbHMsIF9hID0gR09iamVjdDMucHJvcGVydGllcywgX2MpIHsKICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfSA9IHt9KSB7CiAgICBzdXBlcigpOwogICAgdGhpcy5jb25uZWN0aW9uSWRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl07CiAgfQogIHN0YXRpYyB7CiAgICB0aGlzW19iXSA9IHsKICAgICAgImRlc3Ryb3kiOiB7fSwKICAgICAgImNoaWxkLWFkZGVkIjogewogICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdDMuVFlQRV9PQkpFQ1QsIEdPYmplY3QzLlRZUEVfVUlOVF0KICAgICAgfSwKICAgICAgImNoaWxkLXJlbW92ZWQiOiB7CiAgICAgICAgcGFyYW1fdHlwZXM6IFtHT2JqZWN0My5UWVBFX09CSkVDVCwgR09iamVjdDMuVFlQRV9VSU5UXQogICAgICB9CiAgICB9OwogIH0KICBzdGF0aWMgewogICAgdGhpc1tfYV0gPSB7CiAgICAgIGNoaWxkcmVuOiBHT2JqZWN0My5QYXJhbVNwZWMuanNvYmplY3QoImNoaWxkcmVuIiwgIiIsICIiLCBHT2JqZWN0My5QYXJhbUZsYWdzLlJFQURBQkxFKQogICAgfTsKICB9CiAgc3RhdGljIHsKICAgIEdPYmplY3QzLnJlZ2lzdGVyQ2xhc3ModGhpcyk7CiAgICByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZSh0aGlzKTsKICB9CiAgc3RhdGljIG5ldyhjaGlsZHJlbiA9IFtdKSB7CiAgICByZXR1cm4gbmV3IF9GcmFnbWVudCh7IGNoaWxkcmVuIH0pOwogIH0KICBnZXQgY2hpbGRyZW4oKSB7CiAgICByZXR1cm4gWy4uLnRoaXMuX2NoaWxkcmVuXTsKICB9CiAgYWRkQ2hpbGQoY2hpbGQsIGluZGV4ID0gLTEpIHsKICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIF9GcmFnbWVudCkgewogICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYCk7CiAgICB9CiAgICBpZiAoaW5kZXggPiAwKSB7CiAgICAgIHRoaXMuX2NoaWxkcmVuID0gWwogICAgICAgIC4uLnRoaXMuX2NoaWxkcmVuLnNsaWNlKDAsIGluZGV4KSwKICAgICAgICBjaGlsZCwKICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZShpbmRleCkKICAgICAgXTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpOwogICAgICBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmxlbmd0aCAtIDE7CiAgICB9CiAgICB0aGlzLmVtaXQoImNoaWxkLWFkZGVkIiwgY2hpbGQsIGluZGV4KTsKICAgIHRoaXMubm90aWZ5KCJjaGlsZHJlbiIpOwogIH0KICBoYXNDaGlsZChjaGlsZCkgewogICAgcmV0dXJuIHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoY2gpID0+IGNoID09PSBjaGlsZCkgPiAtMTsKICB9CiAgcmVtb3ZlQ2hpbGQoY2hpbGQpIHsKICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZCk7CiAgICB0aGlzLl9jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpOwogICAgdGhpcy5lbWl0KCJjaGlsZC1yZW1vdmVkIiwgY2hpbGQsIGluZGV4KTsKICAgIHRoaXMubm90aWZ5KCJjaGlsZHJlbiIpOwogIH0KICBjb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spIHsKICAgIGNvbnN0IGlkID0gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKTsKICAgIHRoaXMuY29ubmVjdGlvbklkcy5hZGQoaWQpOwogICAgcmV0dXJuIGlkOwogIH0KICBkaXNjb25uZWN0KGlkKSB7CiAgICBzdXBlci5kaXNjb25uZWN0KGlkKTsKICAgIHRoaXMuY29ubmVjdGlvbklkcy5kZWxldGUoaWQpOwogIH0KICBkZXN0cm95KCkgewogICAgdGhpcy5lbWl0KCJkZXN0cm95Iik7CiAgICBmb3IgKGNvbnN0IGlkIG9mIHRoaXMuY29ubmVjdGlvbklkcy52YWx1ZXMoKSkgewogICAgICBzdXBlci5kaXNjb25uZWN0KGlkKTsKICAgIH0KICB9Cn07CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L0Zvci50cwpmdW5jdGlvbiBGb3IoewogIGVhY2gsCiAgY2hpbGRyZW46IG1rQ2hpbGQsCiAgY2xlYW51cCwKICBpZCA9IChpdGVtKSA9PiBpdGVtCn0pIHsKICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpOwogIGNvbnN0IG1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7CiAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQoKTsKICBmdW5jdGlvbiByZW1vdmUyKHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXhdLCBzY29wZSB9KSB7CiAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgY2xlYW51cChjaGlsZCwgaXRlbSwgaW5kZXguZ2V0KCkpOwogICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7CiAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZCk7CiAgICB9CiAgICBzY29wZS5kaXNwb3NlKCk7CiAgfQogIGZ1bmN0aW9uIGNhbGxiYWNrKGl0YXJlYWJsZSkgewogICAgY29uc3QgaXRlbXMgPSBbLi4uaXRhcmVhYmxlXTsKICAgIGNvbnN0IGlkcyA9IGl0ZW1zLm1hcChpZCk7CiAgICBjb25zdCBpZFNldCA9IG5ldyBTZXQoaWRzKTsKICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIG1hcC5lbnRyaWVzKCkpIHsKICAgICAgZnJhZ21lbnQucmVtb3ZlQ2hpbGQodmFsdWUuY2hpbGQpOwogICAgICBpZiAoIWlkU2V0LmhhcyhrZXkpKSB7CiAgICAgICAgcmVtb3ZlMih2YWx1ZSk7CiAgICAgICAgbWFwLmRlbGV0ZShrZXkpOwogICAgICB9CiAgICB9CiAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHsKICAgICAgY29uc3Qga2V5ID0gaWRzW2ldOwogICAgICBpZiAobWFwLmhhcyhrZXkpKSB7CiAgICAgICAgY29uc3QgewogICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSwKICAgICAgICAgIGNoaWxkCiAgICAgICAgfSA9IG1hcC5nZXQoa2V5KTsKICAgICAgICBzZXRJbmRleChpKTsKICAgICAgICBpZiAoZnJhZ21lbnQuaGFzQ2hpbGQoY2hpbGQpKSB7CiAgICAgICAgICBjb25zb2xlLndhcm4oYGR1cGxpY2F0ZSBrZXlzIGZvdW5kOiAke2tleX1gKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2hpbGQpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBbaW5kZXgsIHNldEluZGV4XSA9IGNyZWF0ZVN0YXRlKGkpOwogICAgICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKGN1cnJlbnRTY29wZSk7CiAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpOwogICAgICAgIG1hcC5zZXQoa2V5LCB7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4LCBzZXRJbmRleF0sIHNjb3BlIH0pOwogICAgICAgIGZyYWdtZW50LmFkZENoaWxkKGNoaWxkKTsKICAgICAgfQogICAgfSk7CiAgfQogIGNvbnN0IGRpc3Bvc2UgPSBlYWNoLnN1YnNjcmliZSgoKSA9PiB7CiAgICBjYWxsYmFjayhlYWNoLmdldCgpKTsKICB9KTsKICBjYWxsYmFjayhlYWNoLmdldCgpKTsKICBvbkNsZWFudXAoKCkgPT4gewogICAgZGlzcG9zZSgpOwogICAgZm9yIChjb25zdCB2YWx1ZSBvZiBtYXAudmFsdWVzKCkpIHsKICAgICAgcmVtb3ZlMih2YWx1ZSk7CiAgICB9CiAgICBtYXAuY2xlYXIoKTsKICB9KTsKICByZXR1cm4gZnJhZ21lbnQ7Cn0KCi8vIC4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvV2l0aC50cwpmdW5jdGlvbiBXaXRoKHsKICB2YWx1ZSwKICBjaGlsZHJlbjogbWtDaGlsZCwKICBjbGVhbnVwCn0pIHsKICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpOwogIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50KCk7CiAgbGV0IHNjb3BlOwogIGZ1bmN0aW9uIGNhbGxiYWNrKHYpIHsKICAgIGZvciAoY29uc3QgY2hpbGQgb2YgZnJhZ21lbnQuY2hpbGRyZW4pIHsKICAgICAgZnJhZ21lbnQucmVtb3ZlQ2hpbGQoY2hpbGQpOwogICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICBjbGVhbnVwKGNoaWxkKTsKICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7CiAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKTsKICAgICAgfQogICAgICBpZiAoc2NvcGUpIHNjb3BlLmRpc3Bvc2UoKTsKICAgIH0KICAgIHNjb3BlID0gbmV3IFNjb3BlKGN1cnJlbnRTY29wZSk7CiAgICBjb25zdCBjaCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKHYpKTsKICAgIGlmIChjaCAhPT0gIiIgJiYgY2ggIT09IGZhbHNlICYmIGNoICE9PSBudWxsICYmIGNoICE9PSB2b2lkIDApIHsKICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2gpOwogICAgfQogIH0KICBjb25zdCBkaXNwb3NlID0gdmFsdWUuc3Vic2NyaWJlKCgpID0+IHsKICAgIGNhbGxiYWNrKHZhbHVlLmdldCgpKTsKICB9KTsKICBjYWxsYmFjayh2YWx1ZS5nZXQoKSk7CiAgb25DbGVhbnVwKCgpID0+IHsKICAgIHNjb3BlLmRpc3Bvc2UoKTsKICAgIGRpc3Bvc2UoKTsKICB9KTsKICByZXR1cm4gZnJhZ21lbnQ7Cn0KCi8vIC4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL19hcHAudHMKaW1wb3J0IElPIGZyb20gImdpOi8vQXN0YWxJTyI7CmltcG9ydCBHT2JqZWN0NCBmcm9tICJnaTovL0dPYmplY3QiOwpmdW5jdGlvbiBta0FwcChBcHApIHsKICByZXR1cm4gbmV3IGNsYXNzIEFzdGFsSlMgZXh0ZW5kcyBBcHAgewogICAgc3RhdGljIHsKICAgICAgR09iamVjdDQucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogIkFzdGFsSlMiIH0sIHRoaXMpOwogICAgfQogICAgZXZhbChib2R5KSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgY29uc3QgZm4gPSBGdW5jdGlvbihgcmV0dXJuIChhc3luYyBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHtib2R5LmluY2x1ZGVzKCI7IikgPyBib2R5IDogYHJldHVybiAke2JvZHl9O2B9CiAgICAgICAgICAgICAgICAgICAgfSlgKTsKICAgICAgICAgIGZuKCkoKS50aGVuKHJlcykuY2F0Y2gocmVqKTsKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgcmVqKGVycm9yKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogICAgdmZ1bmNfc2h1dGRvd24oKSB7CiAgICAgIHN1cGVyLnZmdW5jX3NodXRkb3duKCk7CiAgICAgIHRoaXMuZGlzcG9zZVJvb3Q/LigpOwogICAgfQogICAgdmZ1bmNfcmVxdWVzdChtc2csIGNvbm4pIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RIYW5kbGVyID09PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgdGhpcy5yZXF1ZXN0SGFuZGxlcihtc2csIChyZXNwb25zZSkgPT4gewogICAgICAgICAgSU8ud3JpdGVfc29jayhjb25uLCBTdHJpbmcocmVzcG9uc2UpLCAoXywgcmVzKSA9PiBJTy53cml0ZV9zb2NrX2ZpbmlzaChyZXMpKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzdXBlci52ZnVuY19yZXF1ZXN0KG1zZywgY29ubik7CiAgICAgIH0KICAgIH0KICAgIGFwcGx5X2NzcyhzdHlsZSwgcmVzZXQgPSBmYWxzZSkgewogICAgICBzdXBlci5hcHBseV9jc3Moc3R5bGUsIHJlc2V0KTsKICAgIH0KICAgIHF1aXQoY29kZSkgewogICAgICBzdXBlci5xdWl0KCk7CiAgICAgIGV4aXQoY29kZSA/PyAwKTsKICAgIH0KICAgIHN0YXJ0KHsgcmVxdWVzdEhhbmRsZXI6IHJlcXVlc3RIYW5kbGVyMiwgY3NzLCBob2xkLCBtYWluLCBjbGllbnQsIGljb25zLCAuLi5jZmcgfSA9IHt9KSB7CiAgICAgIGNvbnN0IGFwcCA9IHRoaXM7CiAgICAgIGNsaWVudCA/Pz0gKCkgPT4gewogICAgICAgIHByaW50KGBBc3RhbCBpbnN0YW5jZSAiJHthcHAuaW5zdGFuY2VOYW1lfSIgYWxyZWFkeSBydW5uaW5nYCk7CiAgICAgICAgZXhpdCgxKTsKICAgICAgfTsKICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpOwogICAgICBzZXRDb25zb2xlTG9nRG9tYWluKGFwcC5pbnN0YW5jZU5hbWUpOwogICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyID0gcmVxdWVzdEhhbmRsZXIyOwogICAgICBhcHAuY29ubmVjdCgiYWN0aXZhdGUiLCAoKSA9PiB7CiAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4gewogICAgICAgICAgdGhpcy5kaXNwb3NlUm9vdCA9IGRpc3Bvc2U7CiAgICAgICAgICBtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdHJ5IHsKICAgICAgICBhcHAuYWNxdWlyZV9zb2NrZXQoKTsKICAgICAgfSBjYXRjaCB7CiAgICAgICAgcmV0dXJuIGNsaWVudCgobXNnKSA9PiBJTy5zZW5kX3JlcXVlc3QoYXBwLmluc3RhbmNlTmFtZSwgbXNnKSwgLi4ucHJvZ3JhbUFyZ3MpOwogICAgICB9CiAgICAgIGlmIChjc3MpIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpOwogICAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpOwogICAgICBob2xkID8/PSB0cnVlOwogICAgICBpZiAoaG9sZCkgYXBwLmhvbGQoKTsKICAgICAgYXBwLnJ1bkFzeW5jKFtdKTsKICAgIH0KICB9KCk7Cn0KCi8vIC4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzCkd0ay5pbml0KCk7CkdMaWIyLnVuc2V0ZW52KCJMRF9QUkVMT0FEIik7CmF3YWl0IGltcG9ydCgiZ2k6Ly9BZHc/dmVyc2lvbj0xIikudGhlbigoeyBkZWZhdWx0OiBBZHcyIH0pID0+IEFkdzIuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApOwp2YXIgYXBwX2RlZmF1bHQgPSBta0FwcChBc3RhbC5BcHBsaWNhdGlvbik7CgovLyAuLi8uLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzCmltcG9ydCBBc3RhbDIgZnJvbSAiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMCI7CmltcG9ydCBHdGsyIGZyb20gImdpOi8vR3RrP3ZlcnNpb249NC4wIjsKaW1wb3J0IEdkayBmcm9tICJnaTovL0dkaz92ZXJzaW9uPTQuMCI7CgovLyB3aW5kb3dzL2Jhci9CYXIudHN4CmltcG9ydCBHdGs1IGZyb20gImdpOi8vR3RrP3ZlcnNpb249NC4wIjsKaW1wb3J0IEFzdGFsQmF0dGVyeSBmcm9tICJnaTovL0FzdGFsQmF0dGVyeSI7CmltcG9ydCBBc3RhbEJsdWV0b290aCBmcm9tICJnaTovL0FzdGFsQmx1ZXRvb3RoIjsKaW1wb3J0IEFzdGFsSHlwcmxhbmQgZnJvbSAiZ2k6Ly9Bc3RhbEh5cHJsYW5kIjsKaW1wb3J0IEFzdGFsTXByaXMgZnJvbSAiZ2k6Ly9Bc3RhbE1wcmlzIjsKaW1wb3J0IEFzdGFsTmV0d29yayBmcm9tICJnaTovL0FzdGFsTmV0d29yayI7CmltcG9ydCBBc3RhbFRyYXkgZnJvbSAiZ2k6Ly9Bc3RhbFRyYXkiOwoKLy8gY29tbW9uL2Z1bmN0aW9ucy50cwpmdW5jdGlvbiBnZXRXZWF0aGVyRW1vamkoZGVzYykgewogIGRlc2MgPSBkZXNjLnRvTG93ZXJDYXNlKCk7CiAgaWYgKGRlc2MuaW5jbHVkZXMoInN1bm55IikgfHwgZGVzYy5pbmNsdWRlcygiY2xlYXIiKSkgcmV0dXJuICJcdTI2MDBcdUZFMEYiOwogIGlmIChkZXNjLmluY2x1ZGVzKCJwYXJ0bHkiKSkgcmV0dXJuICJcdTI2QzUiOwogIGlmIChkZXNjLmluY2x1ZGVzKCJjbG91ZHkiKSB8fCBkZXNjLmluY2x1ZGVzKCJvdmVyY2FzdCIpKSByZXR1cm4gIlx1MjYwMVx1RkUwRiI7CiAgaWYgKGRlc2MuaW5jbHVkZXMoInJhaW4iKSB8fCBkZXNjLmluY2x1ZGVzKCJkcml6emxlIikpIHJldHVybiAiXHV7MUYzMjd9XHVGRTBGIjsKICBpZiAoZGVzYy5pbmNsdWRlcygidGh1bmRlciIpKSByZXR1cm4gIlx1MjZDOFx1RkUwRiI7CiAgaWYgKGRlc2MuaW5jbHVkZXMoInNub3ciKSkgcmV0dXJuICJcdTI3NDRcdUZFMEYiOwogIGlmIChkZXNjLmluY2x1ZGVzKCJmb2ciKSB8fCBkZXNjLmluY2x1ZGVzKCJtaXN0IikpIHJldHVybiAiXHV7MUYzMkJ9XHVGRTBGIjsKICByZXR1cm4gIlx1ezFGMzA4fSI7Cn0KCi8vIGNvbW1vbi92YXJzLnRzCmltcG9ydCBHTGliMyBmcm9tICJnaTovL0dMaWIiOwoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cwppbXBvcnQgQXN0YWxJTyBmcm9tICJnaTovL0FzdGFsSU8iOwp2YXIgUHJvY2VzcyA9IEFzdGFsSU8uUHJvY2VzczsKZnVuY3Rpb24gZXhlYyhjbWQpIHsKICByZXR1cm4gQXJyYXkuaXNBcnJheShjbWQpID8gQXN0YWxJTy5Qcm9jZXNzLmV4ZWN2KGNtZCkgOiBBc3RhbElPLlByb2Nlc3MuZXhlYyhjbWQpOwp9CmZ1bmN0aW9uIGV4ZWNBc3luYyhjbWQpIHsKICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgaWYgKEFycmF5LmlzQXJyYXkoY21kKSkgewogICAgICBBc3RhbElPLlByb2Nlc3MuZXhlY19hc3luY3YoY21kLCAoXywgcmVzKSA9PiB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmN2X2ZpbmlzaChyZXMpKTsKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfYXN5bmMoY21kLCAoXywgcmVzKSA9PiB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfZmluaXNoKHJlcykpOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSk7Cn0KCi8vIGNvbW1vbi92YXJzLnRzCmltcG9ydCBNcHJpcyBmcm9tICJnaTovL0FzdGFsTXByaXMiOwoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvdGltZS50cwppbXBvcnQgQXN0YWxJTzIgZnJvbSAiZ2k6Ly9Bc3RhbElPIjsKdmFyIFRpbWUgPSBBc3RhbElPMi5UaW1lOwpmdW5jdGlvbiBpbnRlcnZhbChpbnRlcnZhbDIsIGNhbGxiYWNrKSB7CiAgcmV0dXJuIEFzdGFsSU8yLlRpbWUuaW50ZXJ2YWwoaW50ZXJ2YWwyLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSk7Cn0KZnVuY3Rpb24gY3JlYXRlUG9sbChpbml0LCBpdmFsLCBleGVjT3JGbiwgdHJhbnNmb3JtKSB7CiAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXQ7CiAgbGV0IHRpbWVyID0gbnVsbDsKICBjb25zdCBzdWJzY3JpYmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrKSB7CiAgICBmdW5jdGlvbiBzZXQyKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7CiAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWU7CiAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpOwogICAgICB9CiAgICB9CiAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkgewogICAgICB0aW1lciA9IGludGVydmFsKGl2YWwsICgpID0+IHsKICAgICAgICBpZiAodHlwZW9mIGV4ZWNPckZuID09PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgICBjb25zdCB2YWx1ZSA9IGV4ZWNPckZuKGN1cnJlbnRWYWx1ZSk7CiAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7CiAgICAgICAgICAgIHZhbHVlLnRoZW4oc2V0Mik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzZXQyKHZhbHVlKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgZXhlY0FzeW5jKGV4ZWNPckZuKS50aGVuKChzdGRvdXQpID0+IHsKICAgICAgICAgICAgc2V0Mih0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogc3Rkb3V0KTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spOwogICAgcmV0dXJuICgpID0+IHsKICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKTsKICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHsKICAgICAgICB0aW1lcj8uY2FuY2VsKCk7CiAgICAgICAgdGltZXIgPSBudWxsOwogICAgICB9CiAgICB9OwogIH0KICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKTsKfQoKLy8gY29tbW9uL3ZhcnMudHMKdmFyIFtzaG93QmFyLCBzZXRTaG93QmFyXSA9IGNyZWF0ZVN0YXRlKHRydWUpOwp2YXIgW3Nob3dMZWZ0U2lkZWJhciwgc2V0U2hvd0xlZnRTaWRlYmFyXSA9IGNyZWF0ZVN0YXRlKGZhbHNlKTsKdmFyIFtzaG93UmlnaHRTaWRlYmFyLCBzZXRTaG93UmlnaHRTaWRlYmFyXSA9IGNyZWF0ZVN0YXRlKGZhbHNlKTsKdmFyIFtzaG93Q3Jvc3NoYWlyLCBzZXRTaG93Q3Jvc3NoYWlyXSA9IGNyZWF0ZVN0YXRlKGZhbHNlKTsKdmFyIFtzaG93TGF1bmNoZXIsIHNldFNob3dMYXVuY2hlcl0gPSBjcmVhdGVTdGF0ZShmYWxzZSk7CnZhciBbZG9Ob3REaXN0dXJiLCBzZXREb05vdERpc3R1cmJdID0gY3JlYXRlU3RhdGUoZmFsc2UpOwp2YXIgW25pZ2h0TGlnaHRFbmFibGVkLCBzZXROaWdodExpZ2h0RW5hYmxlZF0gPSBjcmVhdGVTdGF0ZShmYWxzZSk7CnZhciBbbm90aWZpY2F0aW9uc0xlbmd0aCwgc2V0Tm90aWZpY2F0aW9uc0xlbmd0aF0gPSBjcmVhdGVTdGF0ZSgwKTsKdmFyIFtzaWRlYmFyUGFuZWwsIHNldFNpZGViYXJQYW5lbF0gPSBjcmVhdGVTdGF0ZSgibWFpbiIpOwp2YXIgc3BvdGlmeVBsYXllciA9IE1wcmlzLlBsYXllci5uZXcoInNwb3RpZnkiKTsKZXhlY0FzeW5jKCJwZ3JlcCAteCBoeXByc3Vuc2V0IikudGhlbigoKSA9PiBzZXROaWdodExpZ2h0RW5hYmxlZCh0cnVlKSkuY2F0Y2goKCkgPT4gc2V0TmlnaHRMaWdodEVuYWJsZWQoZmFsc2UpKTsKdmFyIGN1cnJlbnRUaW1lID0gY3JlYXRlUG9sbCgiIiwgMWUzLCAoKSA9PiBHTGliMy5EYXRlVGltZS5uZXdfbm93X2xvY2FsKCkuZm9ybWF0KCIlSDolTSIpKTsKdmFyIGN1cnJlbnREYXkgPSBjcmVhdGVQb2xsKCIiLCAxZTMsICgpID0+IEdMaWIzLkRhdGVUaW1lLm5ld19ub3dfbG9jYWwoKS5mb3JtYXQoIl4lQSwgJWQgZGUgXiVCIikpOwp2YXIgdXB0aW1lID0gY3JlYXRlUG9sbCgiIiwgNSAqIDYwICogMWUzLCBhc3luYyAoKSA9PiB7CiAgY29uc3Qgb3V0cHV0ID0gYXdhaXQgZXhlY0FzeW5jKCJ1cHRpbWUgLXAiKTsKICByZXR1cm4gb3V0cHV0LnJlcGxhY2UoLyBtaW51dGVzfCBtaW51dGUvLCAibSIpLnJlcGxhY2UoLyBob3Vyc3wgaG91ci8sICJoIikucmVwbGFjZSgvIGRheXN8IGRheS8sICJkIikucmVwbGFjZSgvIHdlZWtzfCB3ZWVrLywgInciKTsKfSk7CnZhciBtZW1vcnlVc2FnZSA9IGNyZWF0ZVBvbGwoIiIsIDUgKiAxZTMsIGFzeW5jICgpID0+IHsKICBjb25zdCBvdXRwdXQgPSBhd2FpdCBleGVjQXN5bmMoWyJzaCIsICItYyIsIGBmcmVlIC0tbWVnYSB8IGF3ayAnTlI9PTJ7cHJpbnQgJDMgIiBNQiJ9J2BdKTsKICByZXR1cm4gb3V0cHV0Owp9KTsKdmFyIHN0YXJ0UmVwb3J0ID0gewogIHRpbWVzdGFtcDogIiIsCiAgd2VhdGhlcjogbnVsbAp9Owp2YXIgd2VhdGhlclJlcG9ydCA9IGNyZWF0ZVBvbGwoc3RhcnRSZXBvcnQsIDIwICogNjAgKiAxZTMsIGFzeW5jICgpID0+IHsKICB0cnkgewogICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY0FzeW5jKGBjdXJsIC1zICJ3dHRyLmluL0N1cml0aWJhP2Zvcm1hdD1qMSJgKTsKICAgIGNvbnN0IHdlYXRoZXIgPSBKU09OLnBhcnNlKHJlc3VsdCk7CiAgICBjb25zdCB0aW1lc3RhbXAgPSBjdXJyZW50VGltZS5nZXQoKTsKICAgIHJldHVybiB7IHRpbWVzdGFtcCwgd2VhdGhlciB9OwogIH0gY2F0Y2ggKGVycikgewogICAgY29uc29sZS5lcnJvcigiRXJyb3IgZmV0Y2hpbmcgd2VhdGhlcjoiLCBlcnIpOwogICAgcmV0dXJuIG51bGw7CiAgfQp9KTsKCi8vIC4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvanN4LXJ1bnRpbWUudHMKaW1wb3J0IEd0azQgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj00LjAiOwppbXBvcnQgQXN0YWwzIGZyb20gImdpOi8vQXN0YWw/dmVyc2lvbj00LjAiOwoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2d0azQvanN4LXJ1bnRpbWUudHMKaW1wb3J0IEd0azMgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj00LjAiOwppbXBvcnQgR2lvMiBmcm9tICJnaTovL0dpbz92ZXJzaW9uPTIuMCI7CmltcG9ydCBHT2JqZWN0NSBmcm9tICJnaTovL0dPYmplY3QiOwp2YXIgZHVtbXlCdWlsZGVyID0gbmV3IEd0azMuQnVpbGRlcigpOwpmdW5jdGlvbiBhZGQocGFyZW50LCBjaGlsZCwgXykgewogIGlmICghc3BlY2lhbEFkZChwYXJlbnQsIGNoaWxkLCBfKSkgewogICAgcGFyZW50LnZmdW5jX2FkZF9jaGlsZChkdW1teUJ1aWxkZXIsIGNoaWxkLCBnZXRUeXBlKGNoaWxkKSk7CiAgfQp9CmZ1bmN0aW9uIHNwZWNpYWxSZW1vdmUoX3BhcmVudCwgX2NoaWxkKSB7CiAgcmV0dXJuIGZhbHNlOwp9CmZ1bmN0aW9uIHNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgXykgewogIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0azMuQWRqdXN0bWVudCAmJiAic2V0X2FkanVzdG1lbnQiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9hZGp1c3RtZW50ID09PSAiZnVuY3Rpb24iKSB7CiAgICBwYXJlbnQuc2V0X2FkanVzdG1lbnQoY2hpbGQpOwogICAgcmV0dXJuIHRydWU7CiAgfQogIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0azMuV2lkZ2V0ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azMuU3RhY2sgJiYgY2hpbGQubmFtZSAhPT0gIiIgJiYgY2hpbGQubmFtZSAhPT0gbnVsbCAmJiBnZXRUeXBlKGNoaWxkKSA9PT0gIm5hbWVkIikgewogICAgcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azMuTWVudUJ1dHRvbikgewogICAgcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKTsKICAgIHJldHVybiB0cnVlOwogIH0KICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8yLk1lbnVNb2RlbCAmJiAocGFyZW50IGluc3RhbmNlb2YgR3RrMy5NZW51QnV0dG9uIHx8IHBhcmVudCBpbnN0YW5jZW9mIEd0azMuUG9wb3Zlck1lbnUpKSB7CiAgICBwYXJlbnQuc2V0X21lbnVfbW9kZWwoY2hpbGQpOwogICAgcmV0dXJuIHRydWU7CiAgfQogIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpbzIuTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvMi5NZW51KSB7CiAgfQogIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0azMuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azMuQXBwbGljYXRpb24pIHsKICAgIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKTsKICAgIHJldHVybiB0cnVlOwogIH0KICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGszLlRleHRCdWZmZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrMy5UZXh0VmlldykgewogICAgcGFyZW50LnNldF9idWZmZXIoY2hpbGQpOwogICAgcmV0dXJuIHRydWU7CiAgfQogIHJldHVybiBmYWxzZTsKfQpmdW5jdGlvbiByZW1vdmUocGFyZW50LCBjaGlsZCkgewogIGlmIChzcGVjaWFsUmVtb3ZlKHBhcmVudCwgY2hpbGQpKSByZXR1cm47CiAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0azMuV2lkZ2V0ICYmIGNoaWxkIGluc3RhbmNlb2YgR3RrMy5FdmVudENvbnRyb2xsZXIpIHsKICAgIHJldHVybiBwYXJlbnQucmVtb3ZlX2NvbnRyb2xsZXIoY2hpbGQpOwogIH0KICBpZiAoInNldF9jaGlsZCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2NoaWxkID09ICJmdW5jdGlvbiIpIHsKICAgIHJldHVybiBwYXJlbnQuc2V0X2NoaWxkKG51bGwpOwogIH0KICBpZiAoInJlbW92ZSIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQucmVtb3ZlID09ICJmdW5jdGlvbiIpIHsKICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKTsKICB9CiAgdGhyb3cgRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaGlsZH0gZnJvbSAke3BhcmVudH1gKTsKfQp2YXIgeyBhZGRDaGlsZCwgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHsKICBzZXRDc3Mob2JqZWN0LCBjc3MpIHsKICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0azMuV2lkZ2V0KSkgewogICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSk7CiAgICB9CiAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKTsKICAgIGxldCBwcm92aWRlcjsKICAgIGNvbnN0IHNldHRlciA9IChjc3MyKSA9PiB7CiAgICAgIGlmICghY3NzMi5pbmNsdWRlcygieyIpIHx8ICFjc3MyLmluY2x1ZGVzKCJ9IikpIHsKICAgICAgICBjc3MyID0gYCogeyAke2NzczJ9IH1gOwogICAgICB9CiAgICAgIGlmIChwcm92aWRlcikgY3R4LnJlbW92ZV9wcm92aWRlcihwcm92aWRlcik7CiAgICAgIHByb3ZpZGVyID0gbmV3IEd0azMuQ3NzUHJvdmlkZXIoKTsKICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhjc3MyKTsKICAgICAgY3R4LmFkZF9wcm92aWRlcihwcm92aWRlciwgR3RrMy5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSKTsKICAgIH07CiAgICBpZiAoY3NzIGluc3RhbmNlb2YgQWNjZXNzb3IpIHsKICAgICAgc2V0dGVyKGNzcy5nZXQoKSk7CiAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjc3Muc3Vic2NyaWJlKCgpID0+IHNldHRlcihjc3MuZ2V0KCkpKTsKICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpOwogICAgfSBlbHNlIHsKICAgICAgc2V0dGVyKGNzcyk7CiAgICB9CiAgfSwKICBzZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSkgewogICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrMy5XaWRnZXQpKSB7CiAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKTsKICAgIH0KICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3NvcikgewogICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXHMrLyk7CiAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjbGFzc05hbWUuc3Vic2NyaWJlKAogICAgICAgICgpID0+IG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9ccysvKQogICAgICApOwogICAgICBvbkNsZWFudXAoZGlzcG9zZSk7CiAgICB9IGVsc2UgewogICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXHMrLykpOwogICAgfQogIH0sCiAgYWRkQ2hpbGQocGFyZW50LCBjaGlsZCwgaW5kZXggPSAtMSkgewogICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0NS5PYmplY3QpKSB7CiAgICAgIGNoaWxkID0gR3RrMy5MYWJlbC5uZXcoU3RyaW5nKGNoaWxkKSk7CiAgICB9CiAgICBpZiAoc3BlY2lhbEFkZChwYXJlbnQsIGNoaWxkLCBpbmRleCkpIHJldHVybjsKICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkgewogICAgICBwYXJlbnQuYWRkQ2hpbGQoY2hpbGQpOwogICAgICByZXR1cm47CiAgICB9CiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrMy5CdWlsZGFibGUpIHsKICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHsKICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkLmNoaWxkcmVuKSB7CiAgICAgICAgICBhZGQocGFyZW50LCBjaCwgaW5kZXgpOwogICAgICAgIH0KICAgICAgICBjaGlsZC5jb25uZWN0KCJjaGlsZC1hZGRlZCIsIChfLCBjaCwgaW5kZXgyKSA9PiB7CiAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3Q1Lk9iamVjdCkpIHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgICBhZGRDaGlsZChwYXJlbnQsIGNoLCBpbmRleDIpOwogICAgICAgIH0pOwogICAgICAgIGNoaWxkLmNvbm5lY3QoImNoaWxkLXJlbW92ZWQiLCAoXywgY2gpID0+IHsKICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdDUuT2JqZWN0KSkgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQogICAgICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpOwogICAgICAgIH0pOwogICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjaGlsZC5kZXN0cm95KCkpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBhZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpOwogICAgICByZXR1cm47CiAgICB9CiAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKTsKICB9Cn0pOwoKLy8gLi4vLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cwpPYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7CiAgYm94OiBHdGs0LkJveCwKICBidXR0b246IEd0azQuQnV0dG9uLAogIGNlbnRlcmJveDogR3RrNC5DZW50ZXJCb3gsCiAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcywKICBkcmF3aW5nYXJlYTogR3RrNC5EcmF3aW5nQXJlYSwKICBlbnRyeTogR3RrNC5FbnRyeSwKICBpbWFnZTogR3RrNC5JbWFnZSwKICBsYWJlbDogR3RrNC5MYWJlbCwKICBsZXZlbGJhcjogR3RrNC5MZXZlbEJhciwKICBtZW51YnV0dG9uOiBHdGs0Lk1lbnVCdXR0b24sCiAgb3ZlcmxheTogR3RrNC5PdmVybGF5LAogIHBvcG92ZXI6IEd0azQuUG9wb3ZlciwKICByZXZlYWxlcjogR3RrNC5SZXZlYWxlciwKICBzY3JvbGxlZHdpbmRvdzogR3RrNC5TY3JvbGxlZFdpbmRvdywKICBzbGlkZXI6IEFzdGFsMy5TbGlkZXIsCiAgc3RhY2s6IEd0azQuU3RhY2ssCiAgc3dpdGNoOiBHdGs0LlN3aXRjaCwKICB0b2dnbGVidXR0b246IEd0azQuVG9nZ2xlQnV0dG9uLAogIHdpbmRvdzogQXN0YWwzLldpbmRvdwp9KTsKCi8vIHdpbmRvd3MvYmFyL0Jhci50c3gKZnVuY3Rpb24gVHJheU1vZHVsZSgpIHsKICBjb25zdCB0cmF5ID0gQXN0YWxUcmF5LmdldF9kZWZhdWx0KCk7CiAgY29uc3QgaXRlbXMgPSBjcmVhdGVCaW5kaW5nKHRyYXksICJpdGVtcyIpOwogIGNvbnN0IGluaXQgPSAoYnRuLCBpdGVtKSA9PiB7CiAgICBidG4ubWVudU1vZGVsID0gaXRlbS5tZW51TW9kZWw7CiAgICBidG4uaW5zZXJ0X2FjdGlvbl9ncm91cCgiZGJ1c21lbnUiLCBpdGVtLmFjdGlvbkdyb3VwKTsKICAgIGl0ZW0uY29ubmVjdCgibm90aWZ5OjphY3Rpb24tZ3JvdXAiLCAoKSA9PiB7CiAgICAgIGJ0bi5pbnNlcnRfYWN0aW9uX2dyb3VwKCJkYnVzbWVudSIsIGl0ZW0uYWN0aW9uR3JvdXApOwogICAgfSk7CiAgfTsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChGb3IsIHsgZWFjaDogaXRlbXMsIGNoaWxkcmVuOiAoaXRlbSkgPT4gLyogQF9fUFVSRV9fICovIGpzeCgibWVudWJ1dHRvbiIsIHsgJDogKHNlbGYpID0+IGluaXQoc2VsZiwgaXRlbSksIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJpbWFnZSIsIHsgZ2ljb246IGNyZWF0ZUJpbmRpbmcoaXRlbSwgImdpY29uIikgfSkgfSkgfSkgfSk7Cn0KZnVuY3Rpb24gTmV0d29ya01vZHVsZSgpIHsKICBjb25zdCBuZXR3b3JrID0gQXN0YWxOZXR3b3JrLmdldF9kZWZhdWx0KCk7CiAgY29uc3Qgd2lmaSA9IGNyZWF0ZUJpbmRpbmcobmV0d29yaywgIndpZmkiKTsKICBjb25zdCB3aXJlZCA9IGNyZWF0ZUJpbmRpbmcobmV0d29yaywgIndpcmVkIik7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNoaWxkcmVuOiBbCiAgICAvKiBAX19QVVJFX18gKi8ganN4KCJib3giLCB7IHZpc2libGU6IHdpZmkoQm9vbGVhbiksIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFdpdGgsIHsgdmFsdWU6IHdpZmksIGNoaWxkcmVuOiAod2lmaTIpID0+IHdpZmkyICYmIC8qIEBfX1BVUkVfXyAqLyBqc3goImltYWdlIiwgeyBpY29uTmFtZTogY3JlYXRlQmluZGluZyh3aWZpMiwgImljb25OYW1lIikgfSkgfSkgfSksCiAgICAvKiBAX19QVVJFX18gKi8ganN4KCJib3giLCB7IHZpc2libGU6IHdpcmVkKEJvb2xlYW4pLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChXaXRoLCB7IHZhbHVlOiB3aXJlZCwgY2hpbGRyZW46ICh3aXJlZDIpID0+IHdpcmVkMiAmJiAvKiBAX19QVVJFX18gKi8ganN4KCJpbWFnZSIsIHsgaWNvbk5hbWU6IGNyZWF0ZUJpbmRpbmcod2lyZWQyLCAiaWNvbk5hbWUiKSB9KSB9KSB9KQogIF0gfSk7Cn0KZnVuY3Rpb24gQmx1ZXRvb3RoTW9kdWxlKCkgewogIGNvbnN0IGJsdWV0b290aCA9IEFzdGFsQmx1ZXRvb3RoLmdldF9kZWZhdWx0KCk7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAicmV2ZWFsZXIiLAogICAgewogICAgICB0cmFuc2l0aW9uVHlwZTogR3RrNS5SZXZlYWxlclRyYW5zaXRpb25UeXBlLlNMSURFX0xFRlQsCiAgICAgIHJldmVhbENoaWxkOiBjcmVhdGVCaW5kaW5nKGJsdWV0b290aCwgImlzX2Nvbm5lY3RlZCIpLAogICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGNsYXNzOiAiQmx1ZXRvb3RoIiwgbGFiZWw6ICJcdXtGMDBCMX0iIH0pCiAgICB9CiAgKTsKfQpmdW5jdGlvbiBCYXR0ZXJ5TW9kdWxlKCkgewogIGNvbnN0IGJhdCA9IEFzdGFsQmF0dGVyeS5nZXRfZGVmYXVsdCgpOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cygKICAgICJib3giLAogICAgewogICAgICBjbGFzczogIkJhdHRlcnkiLAogICAgICB2aXNpYmxlOiBjcmVhdGVCaW5kaW5nKGJhdCwgImlzUHJlc2VudCIpLAogICAgICBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBsYWJlbDogY3JlYXRlQmluZGluZyhiYXQsICJwZXJjZW50YWdlIikuYXMoKHApID0+IGAke01hdGguZmxvb3IocCAqIDEwMCl9JWApIH0pLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImltYWdlIiwgeyBpY29uTmFtZTogY3JlYXRlQmluZGluZyhiYXQsICJiYXR0ZXJ5SWNvbk5hbWUiKSB9KQogICAgICBdCiAgICB9CiAgKTsKfQpmdW5jdGlvbiBnZXRUaXRsZShwbGF5ZXIpIHsKICByZXR1cm4gcGxheWVyLmFydGlzdCA/IGAke3BsYXllci5hcnRpc3R9OiAke3BsYXllci50aXRsZX1gIDogcGxheWVyLmFsYnVtID8gYCR7cGxheWVyLmFsYnVtfTogJHtwbGF5ZXIudGl0bGV9YCA6IGAke3BsYXllci50aXRsZX1gOwp9CmZ1bmN0aW9uIE1lZGlhTW9kdWxlKCkgewogIGNvbnN0IG1wcmlzID0gQXN0YWxNcHJpcy5nZXRfZGVmYXVsdCgpOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFdpdGgsIHsgdmFsdWU6IGNyZWF0ZUJpbmRpbmcobXByaXMsICJwbGF5ZXJzIiksIGNoaWxkcmVuOiAocHMpID0+IHBzWzBdID8gLyogQF9fUFVSRV9fICovIGpzeCgKICAgICJidXR0b24iLAogICAgewogICAgICBjbGFzczogIk1lZGlhIiwKICAgICAgb25DbGlja2VkOiAoKSA9PiBwc1swXS5wbGF5X3BhdXNlKCksCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICJsYWJlbCIsCiAgICAgICAgewogICAgICAgICAgY2xhc3M6IGNyZWF0ZUJpbmRpbmcocHNbMF0sICJwbGF5YmFja1N0YXR1cyIpLmFzKChzKSA9PiBzID4gMCA/ICJwYXVzZWQiIDogInBsYXlpbmciKSwKICAgICAgICAgIG1heFdpZHRoQ2hhcnM6IDgwLAogICAgICAgICAgbGFiZWw6IGNyZWF0ZUJpbmRpbmcocHNbMF0sICJtZXRhZGF0YSIpLmFzKCgpID0+IGdldFRpdGxlKHBzWzBdKSkKICAgICAgICB9CiAgICAgICkKICAgIH0KICApIDogLyogQF9fUFVSRV9fICovIGpzeCgiYm94Iiwge30pIH0pOwp9CmZ1bmN0aW9uIFdvcmtzcGFjZXMoKSB7CiAgY29uc3QgaHlwciA9IEFzdGFsSHlwcmxhbmQuZ2V0X2RlZmF1bHQoKTsKICBjb25zdCB3b3Jrc3BhY2VzID0gY3JlYXRlQmluZGluZyhoeXByLCAid29ya3NwYWNlcyIpOwogIGNvbnN0IHNvcnRlZCA9IChhcnIpID0+IHsKICAgIHJldHVybiBhcnIuZmlsdGVyKCh3cykgPT4gISh3cy5pZCA+PSAtOTkgJiYgd3MuaWQgPD0gLTIpKS5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZCk7CiAgfTsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBjbGFzczogIldvcmtzcGFjZXMiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChGb3IsIHsgZWFjaDogd29ya3NwYWNlcyhzb3J0ZWQpLCBjaGlsZHJlbjogKHdzKSA9PiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgImJ1dHRvbiIsCiAgICB7CiAgICAgIGNsYXNzOiBjcmVhdGVCaW5kaW5nKGh5cHIsICJmb2N1c2VkV29ya3NwYWNlIikuYXMoKGZ3KSA9PiB3cyA9PT0gZncgPyAiZm9jdXNlZCIgOiAiIiksCiAgICAgIG9uQ2xpY2tlZDogKCkgPT4gd3MuZm9jdXMoKSwKICAgICAgY2hpbGRyZW46IHdzLmlkCiAgICB9CiAgKSB9KSB9KTsKfQpmdW5jdGlvbiBXZWF0aGVyKCkgewogIGNvbnN0IFt2aXNpYmxlLCBzZXRWaXNpYmxlXSA9IGNyZWF0ZVN0YXRlKHRydWUpOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgInJldmVhbGVyIiwKICAgIHsKICAgICAgdHJhbnNpdGlvblR5cGU6IEd0azUuUmV2ZWFsZXJUcmFuc2l0aW9uVHlwZS5TTElERV9SSUdIVCwKICAgICAgcmV2ZWFsQ2hpbGQ6IHZpc2libGUsCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFdpdGgsIHsgdmFsdWU6IHdlYXRoZXJSZXBvcnQsIGNoaWxkcmVuOiAodmFsdWUpID0+IHsKICAgICAgICBpZiAodmFsdWU/LndlYXRoZXIpIHsKICAgICAgICAgIGNvbnN0IGNvbmRpdGlvbiA9IHZhbHVlLndlYXRoZXIuY3VycmVudF9jb25kaXRpb25bMF07CiAgICAgICAgICBjb25zdCB0ZW1wID0gY29uZGl0aW9uLnRlbXBfQzsKICAgICAgICAgIGNvbnN0IGVtb2ppID0gZ2V0V2VhdGhlckVtb2ppKGNvbmRpdGlvbi53ZWF0aGVyRGVzY1swXS52YWx1ZSk7CiAgICAgICAgICBzZXRWaXNpYmxlKHRydWUpOwogICAgICAgICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goImxhYmVsIiwgeyBjbGFzczogIldlYXRoZXIiLCBsYWJlbDogYCR7dGVtcH1ceEIwQyAke2Vtb2ppfWAgfSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KCJib3giLCB7fSk7CiAgICAgIH0gfSkKICAgIH0KICApOwp9CmZ1bmN0aW9uIE5vdGlmaWNhdGlvbkJlbGwoKSB7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAicmV2ZWFsZXIiLAogICAgewogICAgICB0cmFuc2l0aW9uVHlwZTogR3RrNS5SZXZlYWxlclRyYW5zaXRpb25UeXBlLlNMSURFX0xFRlQsCiAgICAgIHJldmVhbENoaWxkOiBub3RpZmljYXRpb25zTGVuZ3RoLmFzKChsKSA9PiBsID4gMSksCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgY2xhc3M6ICJOb3RpZmljYXRpb25CZWxsIiwgbGFiZWw6ICJcdXtGMTE2Qn0iIH0pCiAgICB9CiAgKTsKfQpmdW5jdGlvbiBNZW1vcnkoKSB7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goV2l0aCwgeyB2YWx1ZTogbWVtb3J5VXNhZ2UsIGNoaWxkcmVuOiAobWVtb3J5VXNhZ2UyKSA9PiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgImxhYmVsIiwKICAgIHsKICAgICAgY2xhc3M6ICJNZW1vcnkiLAogICAgICBsYWJlbDogbWVtb3J5VXNhZ2UyCiAgICB9CiAgKSB9KTsKfQpmdW5jdGlvbiBUaW1lMigpIHsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChXaXRoLCB7IHZhbHVlOiBjdXJyZW50VGltZSwgY2hpbGRyZW46ICh0aW1lMikgPT4gLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiB0aW1lMiB9KSB9KTsKfQpmdW5jdGlvbiBCYXIobW9uaXRvciwgdmlzaWJsZSkgewogIGNvbnN0IHsgVE9QLCBMRUZULCBSSUdIVCB9ID0gQXN0YWwyLldpbmRvd0FuY2hvcjsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgKICAgICJ3aW5kb3ciLAogICAgewogICAgICBjbGFzczogIkJhciIsCiAgICAgIG5hbWVzcGFjZTogImJhciIsCiAgICAgIGdka21vbml0b3I6IG1vbml0b3IsCiAgICAgIGV4Y2x1c2l2aXR5OiBBc3RhbDIuRXhjbHVzaXZpdHkuRVhDTFVTSVZFLAogICAgICBhcHBsaWNhdGlvbjogYXBwX2RlZmF1bHQsCiAgICAgIHZpc2libGUsCiAgICAgIGxheWVyOiBBc3RhbDIuTGF5ZXIuVE9QLAogICAgICBhbmNob3I6IFRPUCB8IExFRlQgfCBSSUdIVCwKICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJjZW50ZXJib3giLCB7IGNoaWxkcmVuOiBbCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoCiAgICAgICAgICAiYm94IiwKICAgICAgICAgIHsKICAgICAgICAgICAgaGV4cGFuZDogdHJ1ZSwKICAgICAgICAgICAgJHR5cGU6ICJzdGFydCIsCiAgICAgICAgICAgIGhhbGlnbjogR3RrNS5BbGlnbi5TVEFSVCwKICAgICAgICAgICAgY3NzOiAibWFyZ2luLWxlZnQ6IDRweCIsCiAgICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBjbGFzczogIlRpbWVBbmRXZWF0aGVyIiwKICAgICAgICAgICAgICAgICAgb25DbGlja2VkOiAoKSA9PiBzZXRTaG93TGVmdFNpZGViYXIoIXNob3dMZWZ0U2lkZWJhci5nZXQoKSksCiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4cygKICAgICAgICAgICAgICAgICAgICAiYm94IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBoYWxpZ246IEd0azUuQWxpZ24uRU5ELAogICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChUaW1lMiwge30pLAogICAgICAgICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KFdlYXRoZXIsIHt9KQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChXb3Jrc3BhY2VzLCB7fSkKICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgICksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICJib3giLAogICAgICAgICAgewogICAgICAgICAgICBoZXhwYW5kOiB0cnVlLAogICAgICAgICAgICBoYWxpZ246IEd0azUuQWxpZ24uQ0VOVEVSLAogICAgICAgICAgICAkdHlwZTogImNlbnRlciIsCiAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KE1lZGlhTW9kdWxlLCB7fSkKICAgICAgICAgIH0KICAgICAgICApLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKAogICAgICAgICAgImJveCIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGhleHBhbmQ6IHRydWUsCiAgICAgICAgICAgICR0eXBlOiAiZW5kIiwKICAgICAgICAgICAgaGFsaWduOiBHdGs1LkFsaWduLkVORCwKICAgICAgICAgICAgY3NzOiAibWFyZ2luLXJpZ2h0OiA0cHgiLAogICAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goVHJheU1vZHVsZSwge30pLAogICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgY2xhc3M6ICJUaW1lQW5kV2VhdGhlciIsCiAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZDogKCkgPT4gc2V0U2hvd1JpZ2h0U2lkZWJhcighc2hvd1JpZ2h0U2lkZWJhci5nZXQoKSksCiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goQmF0dGVyeU1vZHVsZSwge30pLAogICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goTmV0d29ya01vZHVsZSwge30pLAogICAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goQmx1ZXRvb3RoTW9kdWxlLCB7fSksCiAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChOb3RpZmljYXRpb25CZWxsLCB7fSksCiAgICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChNZW1vcnksIHt9KQogICAgICAgICAgICAgICAgICBdIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICBdIH0pCiAgICB9CiAgKTsKfQoKLy8gcmVxdWVzdEhhbmRsZXIudHMKZnVuY3Rpb24gcmVxdWVzdEhhbmRsZXIocmVxdWVzdCwgcmVzKSB7CiAgY29uc3QgYXJncyA9IHJlcXVlc3Quc3BsaXQoIjoiKTsKICBzd2l0Y2ggKGFyZ3NbMF0pIHsKICAgIGNhc2UgImJhciI6CiAgICAgIHN3aXRjaCAoYXJnc1sxXSkgewogICAgICAgIGNhc2UgInRvZ2dsZSI6CiAgICAgICAgICByZXR1cm4gcmVzKHNldFNob3dCYXIoIXNob3dCYXIuZ2V0KCkpKTsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuIHJlcygiVW5rbm93biBjb21tYW5kIGZvciBiYXIuIik7CiAgICAgIH0KICAgIGNhc2UgImNyb3NzaGFpciI6CiAgICAgIHN3aXRjaCAoYXJnc1sxXSkgewogICAgICAgIGNhc2UgInRvZ2dsZSI6CiAgICAgICAgICByZXR1cm4gcmVzKHNldFNob3dDcm9zc2hhaXIoIXNob3dDcm9zc2hhaXIuZ2V0KCkpKTsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuIHJlcygiVW5rbm93biBjb21tYW5kIGZvciBjcm9zc2hhaXIuIik7CiAgICAgIH0KICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiByZXMoIlVua25vd24gcmVxdWVzdC4iKTsKICB9Cn0KCi8vIC4uLy4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2ZpbGUudHMKaW1wb3J0IEFzdGFsNCBmcm9tICJnaTovL0FzdGFsSU8iOwpmdW5jdGlvbiBtb25pdG9yRmlsZShwYXRoLCBjYWxsYmFjaykgewogIHJldHVybiBBc3RhbDQubW9uaXRvcl9maWxlKHBhdGgsIChmaWxlLCBldmVudCkgPT4gewogICAgY2FsbGJhY2soZmlsZSwgZXZlbnQpOwogIH0pOwp9CgovLyBjb21tb24vY3NzSG90UmVsb2FkLnRzCnZhciBUTVAgPSAiL3RtcCI7CmZ1bmN0aW9uIGNvbXBpbGVTY3NzKCkgewogIHRyeSB7CiAgICBleGVjKGBzYXNzICR7Ii9ob21lL2Jyb2EvRG9jdW1lbnRzL2Rldi90cy9hZ3MifS9zdHlsZS5zY3NzICR7VE1QfS9zdHlsZS5jc3NgKTsKICAgIGFwcF9kZWZhdWx0LmFwcGx5X2NzcygiL3RtcC9zdHlsZS5jc3MiKTsKICAgIHJldHVybiBgJHtUTVB9L3N0eWxlLnNjc3NgOwogIH0gY2F0Y2ggKGVycikgewogICAgcHJpbnRlcnIoIkVycm9yIGNvbXBpbGluZyBzY3NzIGZpbGVzLiIsIGVycik7CiAgICByZXR1cm4gIiI7CiAgfQp9CihmdW5jdGlvbigpIHsKICBjb25zdCBzY3NzRmlsZXMgPSBleGVjKGBmaW5kIC1MICR7Ii9ob21lL2Jyb2EvRG9jdW1lbnRzL2Rldi90cy9hZ3MifSAtaW5hbWUgJyouc2NzcydgKS5zcGxpdCgiXG4iKTsKICBjb21waWxlU2NzcygpOwogIHNjc3NGaWxlcy5mb3JFYWNoKAogICAgKGZpbGUpID0+IG1vbml0b3JGaWxlKGZpbGUsIGNvbXBpbGVTY3NzKQogICk7Cn0pKCk7CgovLyB3aW5kb3dzL25vdGlmaWNhdGlvbl9wb3B1cHMvTm90aWZpY2F0aW9uUG9wdXBzLnRzeAppbXBvcnQgQXN0YWxOb3RpZmQyIGZyb20gImdpOi8vQXN0YWxOb3RpZmQiOwoKLy8gd2lkZ2V0cy9Ob3RpZmljYXRpb24vTm90aWZpY2F0aW9uLnRzeAppbXBvcnQgR3RrNiBmcm9tICJnaTovL0d0az92ZXJzaW9uPTQuMCI7CmltcG9ydCBHZGsyIGZyb20gImdpOi8vR2RrP3ZlcnNpb249NC4wIjsKaW1wb3J0IEFkdyBmcm9tICJnaTovL0FkdyI7CmltcG9ydCBHTGliNCBmcm9tICJnaTovL0dMaWIiOwppbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSAiZ2k6Ly9Bc3RhbE5vdGlmZCI7CmltcG9ydCBQYW5nbyBmcm9tICJnaTovL1BhbmdvIjsKZnVuY3Rpb24gaXNJY29uKGljb24pIHsKICBjb25zdCBpY29uVGhlbWUgPSBHdGs2Lkljb25UaGVtZS5nZXRfZm9yX2Rpc3BsYXkoR2RrMi5EaXNwbGF5LmdldF9kZWZhdWx0KCkpOwogIHJldHVybiBpY29uICYmIGljb25UaGVtZS5oYXNfaWNvbihpY29uKTsKfQpmdW5jdGlvbiBmaWxlRXhpc3RzKHBhdGgpIHsKICByZXR1cm4gR0xpYjQuZmlsZV90ZXN0KHBhdGgsIEdMaWI0LkZpbGVUZXN0LkVYSVNUUyk7Cn0KZnVuY3Rpb24gdGltZSh0aW1lMiwgZm9ybWF0ID0gIiVIOiVNIikgewogIHJldHVybiBHTGliNC5EYXRlVGltZS5uZXdfZnJvbV91bml4X2xvY2FsKHRpbWUyKS5mb3JtYXQoZm9ybWF0KTsKfQpmdW5jdGlvbiB1cmdlbmN5KG4pIHsKICBjb25zdCB7IExPVywgTk9STUFMLCBDUklUSUNBTCB9ID0gQXN0YWxOb3RpZmQuVXJnZW5jeTsKICBzd2l0Y2ggKG4udXJnZW5jeSkgewogICAgY2FzZSBMT1c6CiAgICAgIHJldHVybiAibG93IjsKICAgIGNhc2UgQ1JJVElDQUw6CiAgICAgIHJldHVybiAiY3JpdGljYWwiOwogICAgY2FzZSBOT1JNQUw6CiAgICBkZWZhdWx0OgogICAgICByZXR1cm4gIm5vcm1hbCI7CiAgfQp9CmZ1bmN0aW9uIE5vdGlmaWNhdGlvbih7IG5vdGlmaWNhdGlvbjogbiB9KSB7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQWR3LkNsYW1wLCB7IG1heGltdW1TaXplOiA0MDAsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4cygKICAgICJib3giLAogICAgewogICAgICB3aWR0aFJlcXVlc3Q6IDQwMCwKICAgICAgY2xhc3M6IGBOb3RpZmljYXRpb24gJHt1cmdlbmN5KG4pfWAsCiAgICAgIG9yaWVudGF0aW9uOiBHdGs2Lk9yaWVudGF0aW9uLlZFUlRJQ0FMLAogICAgICBjaGlsZHJlbjogWwogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IGNsYXNzOiAiaGVhZGVyIiwgY2hpbGRyZW46IFsKICAgICAgICAgIChuLmFwcEljb24gfHwgaXNJY29uKG4uZGVza3RvcEVudHJ5KSkgJiYgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgImltYWdlIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNsYXNzOiAiYXBwLWljb24iLAogICAgICAgICAgICAgIHZpc2libGU6IEJvb2xlYW4obi5hcHBJY29uIHx8IG4uZGVza3RvcEVudHJ5KSwKICAgICAgICAgICAgICBpY29uTmFtZTogbi5hcHBJY29uIHx8IG4uZGVza3RvcEVudHJ5CiAgICAgICAgICAgIH0KICAgICAgICAgICksCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICAgICAibGFiZWwiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgY2xhc3M6ICJhcHAtbmFtZSIsCiAgICAgICAgICAgICAgaGFsaWduOiBHdGs2LkFsaWduLlNUQVJULAogICAgICAgICAgICAgIGVsbGlwc2l6ZTogUGFuZ28uRWxsaXBzaXplTW9kZS5FTkQsCiAgICAgICAgICAgICAgbGFiZWw6IG4uYXBwTmFtZSB8fCAiVW5rbm93biIKICAgICAgICAgICAgfQogICAgICAgICAgKSwKICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBjbGFzczogInRpbWUiLAogICAgICAgICAgICAgIGhleHBhbmQ6IHRydWUsCiAgICAgICAgICAgICAgaGFsaWduOiBHdGs2LkFsaWduLkVORCwKICAgICAgICAgICAgICBsYWJlbDogdGltZShuLnRpbWUpCiAgICAgICAgICAgIH0KICAgICAgICAgICksCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJidXR0b24iLCB7IG9uQ2xpY2tlZDogKCkgPT4gbi5kaXNtaXNzKCksIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJpbWFnZSIsIHsgaWNvbk5hbWU6ICJ3aW5kb3ctY2xvc2Utc3ltYm9saWMiIH0pIH0pCiAgICAgICAgXSB9KSwKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KEd0azYuU2VwYXJhdG9yLCB7IHZpc2libGU6IHRydWUgfSksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgY2xhc3M6ICJjb250ZW50IiwgY2hpbGRyZW46IFsKICAgICAgICAgIG4uaW1hZ2UgJiYgZmlsZUV4aXN0cyhuLmltYWdlKSAmJiAvKiBAX19QVVJFX18gKi8ganN4KCJpbWFnZSIsIHsgdmFsaWduOiBHdGs2LkFsaWduLlNUQVJULCBjbGFzczogImltYWdlIiwgZmlsZTogbi5pbWFnZSB9KSwKICAgICAgICAgIG4uaW1hZ2UgJiYgaXNJY29uKG4uaW1hZ2UpICYmIC8qIEBfX1BVUkVfXyAqLyBqc3goImJveCIsIHsgdmFsaWduOiBHdGs2LkFsaWduLlNUQVJULCBjbGFzczogImljb24taW1hZ2UiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgImltYWdlIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGljb25OYW1lOiBuLmltYWdlLAogICAgICAgICAgICAgIGhhbGlnbjogR3RrNi5BbGlnbi5DRU5URVIsCiAgICAgICAgICAgICAgdmFsaWduOiBHdGs2LkFsaWduLkNFTlRFUgogICAgICAgICAgICB9CiAgICAgICAgICApIH0pLAogICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0azYuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjbGFzczogInN1bW1hcnkiLAogICAgICAgICAgICAgICAgaGFsaWduOiBHdGs2LkFsaWduLlNUQVJULAogICAgICAgICAgICAgICAgeGFsaWduOiAwLAogICAgICAgICAgICAgICAgbGFiZWw6IG4uc3VtbWFyeSwKICAgICAgICAgICAgICAgIGVsbGlwc2l6ZTogUGFuZ28uRWxsaXBzaXplTW9kZS5FTkQKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICksCiAgICAgICAgICAgIG4uYm9keSAmJiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY2xhc3M6ICJib2R5IiwKICAgICAgICAgICAgICAgIHdyYXA6IHRydWUsCiAgICAgICAgICAgICAgICB1c2VNYXJrdXA6IHRydWUsCiAgICAgICAgICAgICAgICBoYWxpZ246IEd0azYuQWxpZ24uU1RBUlQsCiAgICAgICAgICAgICAgICB4YWxpZ246IDAsCiAgICAgICAgICAgICAgICBqdXN0aWZ5OiBHdGs2Lkp1c3RpZmljYXRpb24uRklMTCwKICAgICAgICAgICAgICAgIGxhYmVsOiBuLmJvZHkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkKICAgICAgICAgIF0gfSkKICAgICAgICBdIH0pLAogICAgICAgIG4uYWN0aW9ucy5sZW5ndGggPiAwICYmIC8qIEBfX1BVUkVfXyAqLyBqc3goImJveCIsIHsgY2xhc3M6ICJhY3Rpb25zIiwgY2hpbGRyZW46IG4uYWN0aW9ucy5tYXAoKHsgbGFiZWwsIGlkIH0pID0+IC8qIEBfX1BVUkVfXyAqLyBqc3goImJ1dHRvbiIsIHsgaGV4cGFuZDogdHJ1ZSwgb25DbGlja2VkOiAoKSA9PiBuLmludm9rZShpZCksIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgbGFiZWwsIGhhbGlnbjogR3RrNi5BbGlnbi5DRU5URVIsIGhleHBhbmQ6IHRydWUgfSkgfSkpIH0pCiAgICAgIF0KICAgIH0KICApIH0pOwp9CgovLyB3aW5kb3dzL25vdGlmaWNhdGlvbl9wb3B1cHMvTm90aWZpY2F0aW9uUG9wdXBzLnRzeApmdW5jdGlvbiBOb3RpZmljYXRpb25Qb3B1cHMobW9uaXRvcikgewogIGNvbnN0IG5vdGlmZCA9IEFzdGFsTm90aWZkMi5nZXRfZGVmYXVsdCgpOwogIGNvbnN0IFtub3RpZmljYXRpb25zLCBzZXROb3RpZmljYXRpb25zXSA9IGNyZWF0ZVN0YXRlKAogICAgbmV3IEFycmF5KCkKICApOwogIGNvbnN0IG5vdGlmaWVkSGFuZGxlciA9IG5vdGlmZC5jb25uZWN0KCJub3RpZmllZCIsIChfLCBpZCwgcmVwbGFjZWQpID0+IHsKICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IG5vdGlmZC5nZXRfbm90aWZpY2F0aW9uKGlkKTsKICAgIGlmIChyZXBsYWNlZCAmJiBub3RpZmljYXRpb25zLmdldCgpLnNvbWUoKG4pID0+IG4uaWQgPT09IGlkKSkgewogICAgICBzZXROb3RpZmljYXRpb25zKChucykgPT4gbnMubWFwKChuKSA9PiBuLmlkID09PSBpZCA/IG5vdGlmaWNhdGlvbiA6IG4pKTsKICAgIH0gZWxzZSB7CiAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBbbm90aWZpY2F0aW9uLCAuLi5uc10pOwogICAgfQogIH0pOwogIGNvbnN0IHJlc29sdmVkSGFuZGxlciA9IG5vdGlmZC5jb25uZWN0KCJyZXNvbHZlZCIsIChfLCBpZCkgPT4gewogICAgc2V0Tm90aWZpY2F0aW9ucygobnMpID0+IG5zLmZpbHRlcigobikgPT4gbi5pZCAhPT0gaWQpKTsKICB9KTsKICBvbkNsZWFudXAoKCkgPT4gewogICAgbm90aWZkLmRpc2Nvbm5lY3Qobm90aWZpZWRIYW5kbGVyKTsKICAgIG5vdGlmZC5kaXNjb25uZWN0KHJlc29sdmVkSGFuZGxlcik7CiAgfSk7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAid2luZG93IiwKICAgIHsKICAgICAgJDogKHNlbGYpID0+IG9uQ2xlYW51cCgoKSA9PiBzZWxmLmRlc3Ryb3koKSksCiAgICAgIGNsYXNzOiAiTm90aWZpY2F0aW9uUG9wdXBzIiwKICAgICAgZ2RrbW9uaXRvcjogbW9uaXRvciwKICAgICAgYXBwbGljYXRpb246IGFwcF9kZWZhdWx0LAogICAgICB2aXNpYmxlOiBub3RpZmljYXRpb25zKChucykgPT4gewogICAgICAgIHNldE5vdGlmaWNhdGlvbnNMZW5ndGgobnMubGVuZ3RoKTsKICAgICAgICByZXR1cm4gbnMubGVuZ3RoID4gMDsKICAgICAgfSksCiAgICAgIGFuY2hvcjogQXN0YWwyLldpbmRvd0FuY2hvci5UT1AgfCBBc3RhbDIuV2luZG93QW5jaG9yLlJJR0hULAogICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goRm9yLCB7IGVhY2g6IG5vdGlmaWNhdGlvbnMsIGNoaWxkcmVuOiAobm90aWZpY2F0aW9uKSA9PiAvKiBAX19QVVJFX18gKi8ganN4KE5vdGlmaWNhdGlvbiwgeyBub3RpZmljYXRpb24gfSkgfSkgfSkKICAgIH0KICApOwp9CgovLyB3aW5kb3dzL2Nyb3NzaGFpci9Dcm9zc2hhaXIudHN4CmZ1bmN0aW9uIENyb3NzaGFpcihtb25pdG9yLCB2aXNpYmxlKSB7CiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAid2luZG93IiwKICAgIHsKICAgICAgY2xhc3M6ICJDcm9zc2hhaXIiLAogICAgICBuYW1lc3BhY2U6ICJjcm9zc2hhaXIiLAogICAgICBnZGttb25pdG9yOiBtb25pdG9yLAogICAgICB2aXNpYmxlLAogICAgICBsYXllcjogQXN0YWwyLkxheWVyLk9WRVJMQVksCiAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgZXhjbHVzaXZpdHk6IEFzdGFsMi5FeGNsdXNpdml0eS5JR05PUkUsCiAgICAgIGtleW1vZGU6IEFzdGFsMi5LZXltb2RlLk5PTkUsCiAgICAgIGNhbkZvY3VzOiBmYWxzZSwKICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgImJveCIsCiAgICAgICAgewogICAgICAgICAgY2xhc3M6ICJEb3QiCiAgICAgICAgfQogICAgICApCiAgICB9CiAgKTsKfQoKLy8gYXBwLnRzCmZ1bmN0aW9uIGdldFRhcmdldE1vbml0b3IobW9uaXRvcnMpIHsKICBjb25zdCBub3RlYm9va01vZGVsID0gIjB4OTA1MSI7CiAgY29uc3QgcGNNb2RlbCA9ICIyNEcyVzFHNCI7CiAgY29uc3Qgbm90ZWJvb2tNb25pdG9yID0gbW9uaXRvcnMuZmluZCgobSkgPT4gbS5tb2RlbCA9PT0gbm90ZWJvb2tNb2RlbCk7CiAgY29uc3QgcGNNb25pdG9yID0gbW9uaXRvcnMuZmluZCgobSkgPT4gbS5tb2RlbCA9PT0gcGNNb2RlbCk7CiAgcmV0dXJuIG5vdGVib29rTW9uaXRvciB8fCBwY01vbml0b3IgfHwgbW9uaXRvcnNbMF07Cn0KYXBwX2RlZmF1bHQuc3RhcnQoewogIGNzczogY29tcGlsZVNjc3MoKSwKICBpbnN0YW5jZU5hbWU6ICJhZ3N2MyIsCiAgcmVxdWVzdEhhbmRsZXIsCiAgbWFpbigpIHsKICAgIGNvbnN0IHRhcmdldE1vbml0b3IgPSBnZXRUYXJnZXRNb25pdG9yKGFwcF9kZWZhdWx0LmdldF9tb25pdG9ycygpKTsKICAgIEJhcih0YXJnZXRNb25pdG9yLCBzaG93QmFyKTsKICAgIE5vdGlmaWNhdGlvblBvcHVwcyh0YXJnZXRNb25pdG9yKTsKICAgIENyb3NzaGFpcih0YXJnZXRNb25pdG9yLCBzaG93Q3Jvc3NoYWlyKTsKICAgIHByaW50KGAKQXN0YWwgV2luZG93cyBhcHBsaWVkIG9uIG1vbml0b3I6ICR7dGFyZ2V0TW9uaXRvci5tb2RlbH1gKTsKICB9Cn0pOwovLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV3b2dJQ0oyWlhKemFXOXVJam9nTXl3S0lDQWljMjkxY21ObGN5STZJRnNpTGk0dkxpNHZMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTlzYVdJdlozUnJOQzloY0hBdWRITWlMQ0FpTGk0dkxpNHZMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTlzYVdJdmIzWmxjbkpwWkdWekxuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12YkdsaUwxOWhjSEF1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2TGk0dkxpNHZkWE55TDNOb1lYSmxMMkZuY3k5cWN5OXViMlJsWDIxdlpIVnNaWE12WjI1cGJTOWthWE4wTDJwemVDOXFjM2d1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2TGk0dkxpNHZkWE55TDNOb1lYSmxMMkZuY3k5cWN5OXViMlJsWDIxdlpIVnNaWE12WjI1cGJTOWthWE4wTDJwemVDOXpkR0YwWlM1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk4dUxpOHVMaTkxYzNJdmMyaGhjbVV2WVdkekwycHpMMjV2WkdWZmJXOWtkV3hsY3k5bmJtbHRMMlJwYzNRdmRYUnBiQzUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyNXZaR1ZmYlc5a2RXeGxjeTluYm1sdEwyUnBjM1F2YW5ONEwyVnVkaTUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyNXZaR1ZmYlc5a2RXeGxjeTluYm1sdEwyUnBjM1F2YW5ONEwzTmpiM0JsTG5Seklpd2dJaTR1THk0dUx5NHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5cWMzZ3ZSbkpoWjIxbGJuUXVkSE1pTENBaUxpNHZMaTR2TGk0dkxpNHZMaTR2TGk0dmRYTnlMM05vWVhKbEwyRm5jeTlxY3k5dWIyUmxYMjF2WkhWc1pYTXZaMjVwYlM5a2FYTjBMMmR1YjIxbEwzTnBaMjVoYkZSeVlXTnJaWEl1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2TGk0dkxpNHZkWE55TDNOb1lYSmxMMkZuY3k5cWN5OXViMlJsWDIxdlpIVnNaWE12WjI1cGJTOWthWE4wTDJwemVDOUdiM0l1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2TGk0dkxpNHZkWE55TDNOb1lYSmxMMkZuY3k5cWN5OXViMlJsWDIxdlpIVnNaWE12WjI1cGJTOWthWE4wTDJwemVDOVhhWFJvTG5Seklpd2dJaTR1THk0dUx5NHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZiR2xpTDJkMGF6UXZhVzVrWlhndWRITWlMQ0FpZDJsdVpHOTNjeTlpWVhJdlFtRnlMblJ6ZUNJc0lDSmpiMjF0YjI0dlpuVnVZM1JwYjI1ekxuUnpJaXdnSW1OdmJXMXZiaTkyWVhKekxuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12YkdsaUwzQnliMk5sYzNNdWRITWlMQ0FpTGk0dkxpNHZMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTlzYVdJdmRHbHRaUzUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyeHBZaTluZEdzMEwycHplQzF5ZFc1MGFXMWxMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJtOWtaVjl0YjJSMWJHVnpMMmR1YVcwdlpHbHpkQzluZEdzMEwycHplQzF5ZFc1MGFXMWxMblJ6SWl3Z0luSmxjWFZsYzNSSVlXNWtiR1Z5TG5Seklpd2dJaTR1THk0dUx5NHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZiR2xpTDJacGJHVXVkSE1pTENBaVkyOXRiVzl1TDJOemMwaHZkRkpsYkc5aFpDNTBjeUlzSUNKM2FXNWtiM2R6TDI1dmRHbG1hV05oZEdsdmJsOXdiM0IxY0hNdlRtOTBhV1pwWTJGMGFXOXVVRzl3ZFhCekxuUnplQ0lzSUNKM2FXUm5aWFJ6TDA1dmRHbG1hV05oZEdsdmJpOU9iM1JwWm1sallYUnBiMjR1ZEhONElpd2dJbmRwYm1SdmQzTXZZM0p2YzNOb1lXbHlMME55YjNOemFHRnBjaTUwYzNnaUxDQWlZWEJ3TG5SeklsMHNDaUFnSW5OdmRYSmpaWE5EYjI1MFpXNTBJam9nV3lKcGJYQnZjblFnUjB4cFlpQm1jbTl0SUZ3aVoyazZMeTlIVEdsaVAzWmxjbk5wYjI0OU1pNHdYQ0pjYm1sdGNHOXlkQ0JIZEdzZ1puSnZiU0JjSW1kcE9pOHZSM1JyUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQkJjM1JoYkNCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkQ5MlpYSnphVzl1UFRRdU1Gd2lYRzVwYlhCdmNuUWdleUJ0YTBGd2NDQjlJR1p5YjIwZ1hDSXVMaTlmWVhCd0xtcHpYQ0pjYmx4dVIzUnJMbWx1YVhRb0tWeHVYRzR2THlCemRHOXdJSFJvYVhNZ1puSnZiU0JzWldGcmFXNW5JR2x1ZEc4Z2MzVmljSEp2WTJWemMyVnpYRzR2THlCaGJtUWdaMmx2SUd4aGRXNWphQ0JwYm5adlkyRjBhVzl1YzF4dVIweHBZaTUxYm5ObGRHVnVkaWhjSWt4RVgxQlNSVXhQUVVSY0lpbGNibHh1THk4Z2RYTmxjbk1nYldsbmFIUWdkMkZ1ZENCMGJ5QjFjMlVnUVdSM1lXbDBZU0JwYmlCM2FHbGphQ0JqWVhObElHbDBJR2hoY3lCMGJ5QmlaU0JwYm1sMGFXRnNhWHBsWkZ4dUx5OGdhWFFnYldsbmFIUWdZbVVnWTI5dGJXOXVJSEJwZEdaaGJHd2dkRzhnWm05eVoyVjBJR2wwSUdKbFkyRjFjMlVnWUVGd2NHQWdhWE1nYm05MElHQkJaSGN1UVhCd2JHbGpZWFJwYjI1Z1hHNWhkMkZwZENCcGJYQnZjblFvWENKbmFUb3ZMMEZrZHo5MlpYSnphVzl1UFRGY0lpa3VkR2hsYmlnb2V5QmtaV1poZFd4ME9pQkJaSGNnZlNrZ1BUNGdRV1IzTG1sdWFYUW9LU2t1WTJGMFkyZ29LQ2tnUFQ0Z2RtOXBaQ0F3S1Z4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCdGEwRndjQ2hCYzNSaGJDNUJjSEJzYVdOaGRHbHZiaWxjYmlJc0lDSXZLaXBjYmlBcUlGZHZjbXRoY205MWJtUWdabTl5SUZ3aVEyRnVKM1FnWTI5dWRtVnlkQ0J1YjI0dGJuVnNiQ0J3YjJsdWRHVnlJSFJ2SUVwVElIWmhiSFZsSUZ3aVhHNGdLaTljYmx4dVpYaHdiM0owSUh0OVhHNWNibVoxYm1OMGFXOXVJSE51WVd0bGFXWjVLSE4wY2pvZ2MzUnlhVzVuS1NCN1hHNGdJQ0FnY21WMGRYSnVJSE4wY2x4dUlDQWdJQ0FnSUNBdWNtVndiR0ZqWlNndktGdGhMWHBkS1NoYlFTMWFYU2t2Wnl3Z1hDSWtNVjhrTWx3aUtWeHVJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpVRnNiQ2hjSWkxY0lpd2dYQ0pmWENJcFhHNGdJQ0FnSUNBZ0lDNTBiMHh2ZDJWeVEyRnpaU2dwWEc1OVhHNWNibUZ6ZVc1aklHWjFibU4wYVc5dUlITjFjSEJ5WlhOelBGUStLRzF2WkRvZ1VISnZiV2x6WlR4N0lHUmxabUYxYkhRNklGUWdmVDRzSUhCaGRHTm9PaUFvYlRvZ1ZDa2dQVDRnZG05cFpDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCdGIyUXVkR2hsYmlnb2JTa2dQVDRnY0dGMFkyZ29iUzVrWldaaGRXeDBLU2t1WTJGMFkyZ29LQ2tnUFQ0Z2RtOXBaQ0F3S1Z4dWZWeHVYRzVtZFc1amRHbHZiaUJ3WVhSamFEeFFJR1Y0ZEdWdVpITWdiMkpxWldOMFBpaHdjbTkwYnpvZ1VDd2djSEp2Y0RvZ1JYaDBjbUZqZER4clpYbHZaaUJRTENCemRISnBibWMrS1NCN1hHNGdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIQnliM1J2TENCd2NtOXdMQ0I3WEc0Z0lDQWdJQ0FnSUdkbGRDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpXMkJuWlhSZkpIdHpibUZyWldsbWVTaHdjbTl3S1gxZ1hTZ3BYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdmU2xjYm4xY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJFRndjSE5jSWlrc0lDaDdJRUZ3Y0hNc0lFRndjR3hwWTJGMGFXOXVJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hCY0hCekxuQnliM1J2ZEhsd1pTd2dYQ0pzYVhOMFhDSXBYRzRnSUNBZ2NHRjBZMmdvUVhCd2JHbGpZWFJwYjI0dWNISnZkRzkwZVhCbExDQmNJbXRsZVhkdmNtUnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1FYQndiR2xqWVhScGIyNHVjSEp2ZEc5MGVYQmxMQ0JjSW1OaGRHVm5iM0pwWlhOY0lpbGNibjBwWEc1Y2JtRjNZV2wwSUhOMWNIQnlaWE56S0dsdGNHOXlkQ2hjSW1kcE9pOHZRWE4wWVd4Q1lYUjBaWEo1WENJcExDQW9leUJWVUc5M1pYSWdmU2tnUFQ0Z2UxeHVJQ0FnSUhCaGRHTm9LRlZRYjNkbGNpNXdjbTkwYjNSNWNHVXNJRndpWkdWMmFXTmxjMXdpS1Z4dWZTbGNibHh1WVhkaGFYUWdjM1Z3Y0hKbGMzTW9hVzF3YjNKMEtGd2laMms2THk5QmMzUmhiRUpzZFdWMGIyOTBhRndpS1N3Z0tIc2dRV1JoY0hSbGNpd2dRbXgxWlhSdmIzUm9MQ0JFWlhacFkyVWdmU2tnUFQ0Z2UxeHVJQ0FnSUhCaGRHTm9LRUZrWVhCMFpYSXVjSEp2ZEc5MGVYQmxMQ0JjSW5WMWFXUnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1FteDFaWFJ2YjNSb0xuQnliM1J2ZEhsd1pTd2dYQ0poWkdGd2RHVnljMXdpS1Z4dUlDQWdJSEJoZEdOb0tFSnNkV1YwYjI5MGFDNXdjbTkwYjNSNWNHVXNJRndpWkdWMmFXTmxjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFUmxkbWxqWlM1d2NtOTBiM1I1Y0dVc0lGd2lkWFZwWkhOY0lpbGNibjBwWEc1Y2JtRjNZV2wwSUhOMWNIQnlaWE56S0dsdGNHOXlkQ2hjSW1kcE9pOHZRWE4wWVd4SWVYQnliR0Z1WkZ3aUtTd2dLSHNnU0hsd2NteGhibVFzSUUxdmJtbDBiM0lzSUZkdmNtdHpjR0ZqWlNCOUtTQTlQaUI3WEc0Z0lDQWdjR0YwWTJnb1NIbHdjbXhoYm1RdWNISnZkRzkwZVhCbExDQmNJbUpwYm1SelhDSXBYRzRnSUNBZ2NHRjBZMmdvU0hsd2NteGhibVF1Y0hKdmRHOTBlWEJsTENCY0ltMXZibWwwYjNKelhDSXBYRzRnSUNBZ2NHRjBZMmdvU0hsd2NteGhibVF1Y0hKdmRHOTBlWEJsTENCY0luZHZjbXR6Y0dGalpYTmNJaWxjYmlBZ0lDQndZWFJqYUNoSWVYQnliR0Z1WkM1d2NtOTBiM1I1Y0dVc0lGd2lZMnhwWlc1MGMxd2lLVnh1SUNBZ0lIQmhkR05vS0UxdmJtbDBiM0l1Y0hKdmRHOTBlWEJsTENCY0ltRjJZV2xzWVdKc1pVMXZaR1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29UVzl1YVhSdmNpNXdjbTkwYjNSNWNHVXNJRndpWVhaaGFXeGhZbXhsWDIxdlpHVnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1YyOXlhM053WVdObExuQnliM1J2ZEhsd1pTd2dYQ0pqYkdsbGJuUnpYQ0lwWEc1OUtWeHVYRzVoZDJGcGRDQnpkWEJ3Y21WemN5aHBiWEJ2Y25Rb1hDSm5hVG92TDBGemRHRnNUWEJ5YVhOY0lpa3NJQ2g3SUUxd2NtbHpMQ0JRYkdGNVpYSWdmU2tnUFQ0Z2UxeHVJQ0FnSUhCaGRHTm9LRTF3Y21sekxuQnliM1J2ZEhsd1pTd2dYQ0p3YkdGNVpYSnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1VHeGhlV1Z5TG5CeWIzUnZkSGx3WlN3Z1hDSnpkWEJ3YjNKMFpXUmZkWEpwWDNOamFHVnRaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaFFiR0Y1WlhJdWNISnZkRzkwZVhCbExDQmNJbk4xY0hCdmNuUmxaRlZ5YVZOamFHVnRaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaFFiR0Y1WlhJdWNISnZkRzkwZVhCbExDQmNJbk4xY0hCdmNuUmxaRjl0YVcxbFgzUjVjR1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29VR3hoZVdWeUxuQnliM1J2ZEhsd1pTd2dYQ0p6ZFhCd2IzSjBaV1JOYVcxbFZIbHdaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaFFiR0Y1WlhJdWNISnZkRzkwZVhCbExDQmNJbU52YlcxbGJuUnpYQ0lwWEc1OUtWeHVYRzVoZDJGcGRDQnpkWEJ3Y21WemN5aHBiWEJ2Y25Rb1hDSm5hVG92TDBGemRHRnNUbVYwZDI5eWExd2lLU3dnS0hzZ1YybG1hU0I5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvVjJsbWFTNXdjbTkwYjNSNWNHVXNJRndpWVdOalpYTnpYM0J2YVc1MGMxd2lLVnh1SUNBZ0lIQmhkR05vS0ZkcFpta3VjSEp2ZEc5MGVYQmxMQ0JjSW1GalkyVnpjMUJ2YVc1MGMxd2lLVnh1ZlNsY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJFNXZkR2xtWkZ3aUtTd2dLSHNnVG05MGFXWmtMQ0JPYjNScFptbGpZWFJwYjI0Z2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tFNXZkR2xtWkM1d2NtOTBiM1I1Y0dVc0lGd2libTkwYVdacFkyRjBhVzl1YzF3aUtWeHVJQ0FnSUhCaGRHTm9LRTV2ZEdsbWFXTmhkR2x2Ymk1d2NtOTBiM1I1Y0dVc0lGd2lZV04wYVc5dWMxd2lLVnh1ZlNsY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJGQnZkMlZ5VUhKdlptbHNaWE5jSWlrc0lDaDdJRkJ2ZDJWeVVISnZabWxzWlhNZ2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tGQnZkMlZ5VUhKdlptbHNaWE11Y0hKdmRHOTBlWEJsTENCY0ltRmpkR2x2Ym5OY0lpbGNibjBwWEc1Y2JtRjNZV2wwSUhOMWNIQnlaWE56S0dsdGNHOXlkQ2hjSW1kcE9pOHZRWE4wWVd4WGNGd2lLU3dnS0hzZ1YzQXNJRUYxWkdsdkxDQldhV1JsYnlCOUtTQTlQaUI3WEc0Z0lDQWdjR0YwWTJnb1YzQXVjSEp2ZEc5MGVYQmxMQ0JjSW1SbGRtbGpaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaEJkV1JwYnk1d2NtOTBiM1I1Y0dVc0lGd2ljM1J5WldGdGMxd2lLVnh1SUNBZ0lIQmhkR05vS0VGMVpHbHZMbkJ5YjNSdmRIbHdaU3dnWENKeVpXTnZjbVJsY25OY0lpbGNiaUFnSUNCd1lYUmphQ2hCZFdScGJ5NXdjbTkwYjNSNWNHVXNJRndpYldsamNtOXdhRzl1WlhOY0lpbGNiaUFnSUNCd1lYUmphQ2hCZFdScGJ5NXdjbTkwYjNSNWNHVXNJRndpYzNCbFlXdGxjbk5jSWlsY2JpQWdJQ0J3WVhSamFDaEJkV1JwYnk1d2NtOTBiM1I1Y0dVc0lGd2laR1YyYVdObGMxd2lLVnh1SUNBZ0lIQmhkR05vS0ZacFpHVnZMbkJ5YjNSdmRIbHdaU3dnWENKemRISmxZVzF6WENJcFhHNGdJQ0FnY0dGMFkyZ29WbWxrWlc4dWNISnZkRzkwZVhCbExDQmNJbkpsWTI5eVpHVnljMXdpS1Z4dUlDQWdJSEJoZEdOb0tGWnBaR1Z2TG5CeWIzUnZkSGx3WlN3Z1hDSnphVzVyYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRlpwWkdWdkxuQnliM1J2ZEhsd1pTd2dYQ0p6YjNWeVkyVnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1ZtbGtaVzh1Y0hKdmRHOTBlWEJsTENCY0ltUmxkbWxqWlhOY0lpbGNibjBwWEc1Y2JtRjNZV2wwSUhOMWNIQnlaWE56S0dsdGNHOXlkQ2hjSW1kcE9pOHZRWE4wWVd4VWNtRjVYQ0lwTENBb2V5QlVjbUY1SUgwcElEMCtJSHRjYmlBZ0lDQndZWFJqYUNoVWNtRjVMbkJ5YjNSdmRIbHdaU3dnWENKcGRHVnRjMXdpS1Z4dWZTbGNiaUlzSUNKcGJYQnZjblFnWENJdUwyOTJaWEp5YVdSbGN5NXFjMXdpWEc1cGJYQnZjblFnZXlCelpYUkRiMjV6YjJ4bFRHOW5SRzl0WVdsdUlIMGdabkp2YlNCY0ltTnZibk52YkdWY0lseHVhVzF3YjNKMElIc2daWGhwZEN3Z2NISnZaM0poYlVGeVozTWdmU0JtY205dElGd2ljM2x6ZEdWdFhDSmNibWx0Y0c5eWRDQjdJR055WldGMFpWSnZiM1FnZlNCbWNtOXRJRndpWjI1cGJWd2lYRzVwYlhCdmNuUWdTVThnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hKVDF3aVhHNXBiWEJ2Y25RZ1IwOWlhbVZqZENCbWNtOXRJRndpWjJrNkx5OUhUMkpxWldOMFhDSmNibWx0Y0c5eWRDQkhhVzhnWm5KdmJTQmNJbWRwT2k4dlIybHZQM1psY25OcGIyNDlNaTR3WENKY2JtbHRjRzl5ZENCMGVYQmxJRUZ6ZEdGc015Qm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJEOTJaWEp6YVc5dVBUTXVNRndpWEc1cGJYQnZjblFnZEhsd1pTQkJjM1JoYkRRZ1puSnZiU0JjSW1kcE9pOHZRWE4wWVd3L2RtVnljMmx2YmowMExqQmNJbHh1WEc1MGVYQmxJRU52Ym1acFp5QTlJRkJoY25ScFlXdzhlMXh1SUNBZ0lHbHVjM1JoYm1ObFRtRnRaVG9nYzNSeWFXNW5YRzRnSUNBZ1kzTnpPaUJ6ZEhKcGJtZGNiaUFnSUNCcFkyOXVjem9nYzNSeWFXNW5YRzRnSUNBZ1ozUnJWR2hsYldVNklITjBjbWx1WjF4dUlDQWdJR2xqYjI1VWFHVnRaVG9nYzNSeWFXNW5YRzRnSUNBZ1kzVnljMjl5VkdobGJXVTZJSE4wY21sdVoxeHVJQ0FnSUdodmJHUTZJR0p2YjJ4bFlXNWNiaUFnSUNCeVpYRjFaWE4wU0dGdVpHeGxjaWh5WlhGMVpYTjBPaUJ6ZEhKcGJtY3NJSEpsY3pvZ0tISmxjM0J2Ym5ObE9pQmhibmtwSUQwK0lIWnZhV1FwT2lCMmIybGtYRzRnSUNBZ2JXRnBiaWd1TGk1aGNtZHpPaUJ6ZEhKcGJtZGJYU2s2SUhadmFXUmNiaUFnSUNCamJHbGxiblFvYldWemMyRm5aVG9nS0cxelp6b2djM1J5YVc1bktTQTlQaUJ6ZEhKcGJtY3NJQzR1TG1GeVozTTZJSE4wY21sdVoxdGRLVG9nZG05cFpGeHVmVDVjYmx4dWFXNTBaWEptWVdObElFRnpkR0ZzTTBwVElHVjRkR1Z1WkhNZ1FYTjBZV3d6TGtGd2NHeHBZMkYwYVc5dUlIdGNiaUFnSUNCbGRtRnNLR0p2WkhrNklITjBjbWx1WnlrNklGQnliMjFwYzJVOFlXNTVQbHh1SUNBZ0lISmxjWFZsYzNSSVlXNWtiR1Z5T2lCRGIyNW1hV2RiWENKeVpYRjFaWE4wU0dGdVpHeGxjbHdpWFZ4dUlDQWdJR0Z3Y0d4NVgyTnpjeWh6ZEhsc1pUb2djM1J5YVc1bkxDQnlaWE5sZEQ4NklHSnZiMnhsWVc0cE9pQjJiMmxrWEc0Z0lDQWdjWFZwZENoamIyUmxQem9nYm5WdFltVnlLVG9nZG05cFpGeHVJQ0FnSUhOMFlYSjBLR052Ym1acFp6ODZJRU52Ym1acFp5azZJSFp2YVdSY2JuMWNibHh1YVc1MFpYSm1ZV05sSUVGemRHRnNORXBUSUdWNGRHVnVaSE1nUVhOMFlXdzBMa0Z3Y0d4cFkyRjBhVzl1SUh0Y2JpQWdJQ0JsZG1Gc0tHSnZaSGs2SUhOMGNtbHVaeWs2SUZCeWIyMXBjMlU4WVc1NVBseHVJQ0FnSUhKbGNYVmxjM1JJWVc1a2JHVnlQem9nUTI5dVptbG5XMXdpY21WeGRXVnpkRWhoYm1Sc1pYSmNJbDFjYmlBZ0lDQmhjSEJzZVY5amMzTW9jM1I1YkdVNklITjBjbWx1Wnl3Z2NtVnpaWFEvT2lCaWIyOXNaV0Z1S1RvZ2RtOXBaRnh1SUNBZ0lIRjFhWFFvWTI5a1pUODZJRzUxYldKbGNpazZJSFp2YVdSY2JpQWdJQ0J6ZEdGeWRDaGpiMjVtYVdjL09pQkRiMjVtYVdjcE9pQjJiMmxrWEc1OVhHNWNiblI1Y0dVZ1FYQndNeUE5SUhSNWNHVnZaaUJCYzNSaGJETXVRWEJ3YkdsallYUnBiMjVjYm5SNWNHVWdRWEJ3TkNBOUlIUjVjR1Z2WmlCQmMzUmhiRFF1UVhCd2JHbGpZWFJwYjI1Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHMXJRWEJ3UEVGd2NDQmxlSFJsYm1SeklFRndjRE0rS0VGd2NEb2dRWEJ3S1RvZ1FYTjBZV3d6U2xOY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCdGEwRndjRHhCY0hBZ1pYaDBaVzVrY3lCQmNIQTBQaWhCY0hBNklFRndjQ2s2SUVGemRHRnNORXBUWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCdGEwRndjQ2hCY0hBNklFRndjRE1nZkNCQmNIQTBLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUFvWTJ4aGMzTWdRWE4wWVd4S1V5QmxlSFJsYm1SeklFRndjQ0I3WEc0Z0lDQWdJQ0FnSUhCeWFYWmhkR1VnWkdsemNHOXpaVkp2YjNRL09pQW9LU0E5UGlCMmIybGtYRzVjYmlBZ0lDQWdJQ0FnYzNSaGRHbGpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lFZFBZbXBsWTNRdWNtVm5hWE4wWlhKRGJHRnpjeWg3SUVkVWVYQmxUbUZ0WlRvZ1hDSkJjM1JoYkVwVFhDSWdmU3dnZEdocGN5QmhjeUJoYm5rcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JsZG1Gc0tHSnZaSGs2SUhOMGNtbHVaeWs2SUZCeWIyMXBjMlU4WVc1NVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lGQnliMjFwYzJVb0tISmxjeXdnY21WcUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdabTRnUFNCR2RXNWpkR2x2YmloZ2NtVjBkWEp1SUNoaGMzbHVZeUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSN1ltOWtlUzVwYm1Oc2RXUmxjeWhjSWp0Y0lpa2dQeUJpYjJSNUlEb2dZSEpsZEhWeWJpQWtlMkp2WkhsOU8yQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcFlDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm00b0tTZ3BMblJvWlc0b2NtVnpLUzVqWVhSamFDaHlaV29wWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvWlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnFLR1Z5Y205eUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J5WlhGMVpYTjBTR0Z1Wkd4bGNqODZJRU52Ym1acFoxdGNJbkpsY1hWbGMzUklZVzVrYkdWeVhDSmRYRzVjYmlBZ0lDQWdJQ0FnZG1aMWJtTmZjMmgxZEdSdmQyNG9LVG9nZG05cFpDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRYQmxjaTUyWm5WdVkxOXphSFYwWkc5M2JpZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVJwYzNCdmMyVlNiMjkwUHk0b0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZG1aMWJtTmZjbVZ4ZFdWemRDaHRjMmM2SUhOMGNtbHVaeXdnWTI5dWJqb2dSMmx2TGxOdlkydGxkRU52Ym01bFkzUnBiMjRwT2lCMmIybGtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdkR2hwY3k1eVpYRjFaWE4wU0dGdVpHeGxjaUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaWEYxWlhOMFNHRnVaR3hsY2lodGMyY3NJQ2h5WlhOd2IyNXpaU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JKVHk1M2NtbDBaVjl6YjJOcktHTnZibTRzSUZOMGNtbHVaeWh5WlhOd2IyNXpaU2tzSUNoZkxDQnlaWE1wSUQwK0lFbFBMbmR5YVhSbFgzTnZZMnRmWm1sdWFYTm9LSEpsY3lrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNWd1pYSXVkbVoxYm1OZmNtVnhkV1Z6ZENodGMyY3NJR052Ym00cFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQmhjSEJzZVY5amMzTW9jM1I1YkdVNklITjBjbWx1Wnl3Z2NtVnpaWFFnUFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjM1Z3WlhJdVlYQndiSGxmWTNOektITjBlV3hsTENCeVpYTmxkQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIRjFhWFFvWTI5a1pUODZJRzUxYldKbGNpazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNWd1pYSXVjWFZwZENncFhHNGdJQ0FnSUNBZ0lDQWdJQ0JsZUdsMEtHTnZaR1VnUHo4Z01DbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhOMFlYSjBLSHNnY21WeGRXVnpkRWhoYm1Sc1pYSXNJR056Y3l3Z2FHOXNaQ3dnYldGcGJpd2dZMnhwWlc1MExDQnBZMjl1Y3l3Z0xpNHVZMlpuSUgwNklFTnZibVpwWnlBOUlIdDlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCaGNIQWdQU0IwYUdseklHRnpJSFZ1YTI1dmQyNGdZWE1nU1c1emRHRnVZMlZVZVhCbFBFRndjRE1nZkNCQmNIQTBQbHh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiR2xsYm5RZ1B6ODlJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbWx1ZENoZ1FYTjBZV3dnYVc1emRHRnVZMlVnWENJa2UyRndjQzVwYm5OMFlXNWpaVTVoYldWOVhDSWdZV3h5WldGa2VTQnlkVzV1YVc1bllDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxlR2wwS0RFcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWhjM05wWjI0b2RHaHBjeXdnWTJabktWeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFEyOXVjMjlzWlV4dlowUnZiV0ZwYmloaGNIQXVhVzV6ZEdGdVkyVk9ZVzFsS1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuSmxjWFZsYzNSSVlXNWtiR1Z5SUQwZ2NtVnhkV1Z6ZEVoaGJtUnNaWEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRndjQzVqYjI1dVpXTjBLRndpWVdOMGFYWmhkR1ZjSWl3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOeVpXRjBaVkp2YjNRb0tHUnBjM0J2YzJVcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVrYVhOd2IzTmxVbTl2ZENBOUlHUnBjM0J2YzJWY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0ZwYmo4dUtDNHVMbkJ5YjJkeVlXMUJjbWR6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRndjQzVoWTNGMWFYSmxYM052WTJ0bGRDZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTJ4cFpXNTBLQ2h0YzJjcElEMCtJRWxQTG5ObGJtUmZjbVZ4ZFdWemRDaGhjSEF1YVc1emRHRnVZMlZPWVcxbExDQnRjMmNwSVN3Z0xpNHVjSEp2WjNKaGJVRnlaM01wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqYzNNcElIUm9hWE11WVhCd2JIbGZZM056S0dOemN5d2dabUZzYzJVcFhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBZMjl1Y3lrZ1lYQndMbUZrWkY5cFkyOXVjeWhwWTI5dWN5bGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FHOXNaQ0EvUHowZ2RISjFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2h2YkdRcElHRndjQzVvYjJ4a0tDbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1lYQndMbkoxYmtGemVXNWpLRnRkS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlNrb0tWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCSFQySnFaV04wSUdaeWIyMGdYQ0puYVRvdkwwZFBZbXBsWTNSY0lseHVhVzF3YjNKMElIc2dSbkpoWjIxbGJuUWdmU0JtY205dElGd2lMaTlHY21GbmJXVnVkQzVxYzF3aVhHNXBiWEJ2Y25RZ2V5QkJZMk5sYzNOdmNpQjlJR1p5YjIwZ1hDSXVMM04wWVhSbExtcHpYQ0pjYm1sdGNHOXlkQ0I3SUhSNWNHVWdRME1zSUhSNWNHVWdSa01zSUdWdWRpQjlJR1p5YjIwZ1hDSXVMMlZ1ZGk1cWMxd2lYRzVwYlhCdmNuUWdleUJyWldKaFltbG1lU3dnZEhsd1pTQlFZWE5qWVd4cFpua3NJSE5sZENCOUlHWnliMjBnWENJdUxpOTFkR2xzTG1welhDSmNibWx0Y0c5eWRDQjdJRzl1UTJ4bFlXNTFjQ0I5SUdaeWIyMGdYQ0l1TDNOamIzQmxMbXB6WENKY2JseHVMeW9xWEc0Z0tpQlNaWEJ5WlhObGJuUnpJR0ZzYkNCdlppQjBhR1VnZEdocGJtZHpJSFJvWVhRZ1kyRnVJR0psSUhCaGMzTmxaQ0JoY3lCaElHTm9hV3hrSUhSdklHTnNZWE56SUdOdmJYQnZibVZ1ZEhNdVhHNGdLaTljYm1WNGNHOXlkQ0IwZVhCbElFNXZaR1VnUFZ4dUlDQWdJSHdnUVhKeVlYazhSMDlpYW1WamRDNVBZbXBsWTNRK1hHNGdJQ0FnZkNCSFQySnFaV04wTGs5aWFtVmpkRnh1SUNBZ0lId2diblZ0WW1WeVhHNGdJQ0FnZkNCemRISnBibWRjYmlBZ0lDQjhJR0p2YjJ4bFlXNWNiaUFnSUNCOElHNTFiR3hjYmlBZ0lDQjhJSFZ1WkdWbWFXNWxaRnh1WEc1bGVIQnZjblFnWTI5dWMzUWdaM1JyVkhsd1pTQTlJRk41YldKdmJDaGNJbWQwYXlCaWRXbHNaR1Z5SUhSNWNHVmNJaWxjYmx4dUx5b3FYRzRnS2lCSFpYUWdkR2hsSUhSNWNHVWdiMllnZEdobElHOWlhbVZqZENCemNHVmphV1pwWldRZ2RHaHliM1ZuYUNCMGFHVWdZQ1IwZVhCbFlDQndjbTl3WlhKMGVWeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWjJWMFZIbHdaU2h2WW1wbFkzUTZJRWRQWW1wbFkzUXVUMkpxWldOMEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUdkMGExUjVjR1VnYVc0Z2IySnFaV04wSUQ4Z0tHOWlhbVZqZEZ0bmRHdFVlWEJsWFNCaGN5QnpkSEpwYm1jcElEb2diblZzYkZ4dWZWeHVYRzR2S2lwY2JpQXFJRVoxYm1OMGFXOXVJRU52YlhCdmJtVnVkQ0JRY205d1pYSjBhV1Z6WEc0Z0tpOWNibVY0Y0c5eWRDQjBlWEJsSUVaRFVISnZjSE04VTJWc1ppd2dVSEp2Y0hNK0lEMGdVSEp2Y0hNZ0ppQjdYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSM1JyTGtKMWFXeGtaWElnZEhsd1pWeHVJQ0FnSUNBcUlHbDBjeUJqYjI1emRXMWxaQ0JwYm5SbGNtNWhiR3g1SUdGdVpDQnViM1FnWVdOMGRXRnNiSGtnY0dGemMyVmtJR0Z6SUdFZ2NHRnlZVzFsZEdWeWMxeHVJQ0FnSUNBcUwxeHVJQ0FnSUNSMGVYQmxQem9nYzNSeWFXNW5YRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djMlYwZFhBZ1puVnVZM1JwYjI1Y2JpQWdJQ0FnS2lCcGRITWdZMjl1YzNWdFpXUWdhVzUwWlhKdVlXeHNlU0JoYm1RZ2JtOTBJR0ZqZEhWaGJHeDVJSEJoYzNObFpDQmhjeUJoSUhCaGNtRnRaWFJsY25OY2JpQWdJQ0FnS2k5Y2JpQWdJQ0FrUHloelpXeG1PaUJUWld4bUtUb2dkbTlwWkZ4dWZWeHVYRzR2S2lwY2JpQXFJRU5zWVhOeklFTnZiWEJ2Ym1WdWRDQlFjbTl3WlhKMGFXVnpYRzRnS2k5Y2JtVjRjRzl5ZENCMGVYQmxJRU5EVUhKdmNITThVMlZzWmlCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBMQ0JRY205d2N6NGdQU0I3WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUUdsdWRHVnlibUZzSUdOb2FXeGtjbVZ1SUdWc1pXMWxiblJ6WEc0Z0lDQWdJQ29nYVhSeklHTnZibk4xYldWa0lHbHVkR1Z5Ym1Gc2JIa2dZVzVrSUc1dmRDQmhZM1IxWVd4c2VTQndZWE56WldRZ2RHOGdZMnhoYzNNZ1kyOXRjRzl1Wlc1MElHTnZibk4wY25WamRHOXljMXh1SUNBZ0lDQXFMMXh1SUNBZ0lHTm9hV3hrY21WdVB6b2dRWEp5WVhrOFRtOWtaVDRnZkNCT2IyUmxYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSM1JyTGtKMWFXeGtaWElnZEhsd1pWeHVJQ0FnSUNBcUlHbDBjeUJqYjI1emRXMWxaQ0JwYm5SbGNtNWhiR3g1SUdGdVpDQnViM1FnWVdOMGRXRnNiSGtnY0dGemMyVmtJSFJ2SUdOc1lYTnpJR052YlhCdmJtVnVkQ0JqYjI1emRISjFZM1J2Y25OY2JpQWdJQ0FnS2k5Y2JpQWdJQ0FrZEhsd1pUODZJSE4wY21sdVoxeHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHWjFibU4wYVc5dUlIUnZJSFZ6WlNCaGN5QmhJR052Ym5OMGNuVmpkRzl5TEZ4dUlDQWdJQ0FxSUdsMGN5QmpiMjV6ZFcxbFpDQnBiblJsY201aGJHeDVJR0Z1WkNCdWIzUWdZV04wZFdGc2JIa2djR0Z6YzJWa0lIUnZJR05zWVhOeklHTnZiWEJ2Ym1WdWRDQmpiMjV6ZEhKMVkzUnZjbk5jYmlBZ0lDQWdLaTljYmlBZ0lDQWtZMjl1YzNSeWRXTjBiM0kvS0hCeWIzQnpPaUJRWVhKMGFXRnNQRkJ5YjNCelBpazZJRk5sYkdaY2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCelpYUjFjQ0JtZFc1amRHbHZiaXhjYmlBZ0lDQWdLaUJwZEhNZ1kyOXVjM1Z0WldRZ2FXNTBaWEp1WVd4c2VTQmhibVFnYm05MElHRmpkSFZoYkd4NUlIQmhjM05sWkNCMGJ5QmpiR0Z6Y3lCamIyMXdiMjVsYm5RZ1kyOXVjM1J5ZFdOMGIzSnpYRzRnSUNBZ0lDb3ZYRzRnSUNBZ0pEOG9jMlZzWmpvZ1UyVnNaaWs2SUhadmFXUmNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkRVMU1nWTJ4aGMzTWdibUZ0WlhOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JqYkdGemN6ODZJSE4wY21sdVp5QjhJRUZqWTJWemMyOXlQSE4wY21sdVp6NWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQnBibXhwYm1VZ1ExTlRYRzRnSUNBZ0lDb3ZYRzRnSUNBZ1kzTnpQem9nYzNSeWFXNW5JSHdnUVdOalpYTnpiM0k4YzNSeWFXNW5QbHh1ZlNBbUlIdGNiaUFnSUNCYlN5QnBiaUJyWlhsdlppQlFjbTl3YzEwNklFRmpZMlZ6YzI5eVBFNXZiazUxYkd4aFlteGxQRkJ5YjNCelcwdGRQajRnZkNCUWNtOXdjMXRMWFZ4dWZTQW1JSHRjYmlBZ0lDQmJVeUJwYmlCclpYbHZaaUJUWld4bVcxd2lKSE5wWjI1aGJITmNJbDBnWVhNZ1V5QmxlSFJsYm1SeklHQnViM1JwWm5rNk9pUjdhVzVtWlhJZ1VIMWdYRzRnSUNBZ0lDQWdJRDhnWUc5dVRtOTBhV1o1Skh0UVlYTmpZV3hwWm5rOFVENTlZRnh1SUNBZ0lDQWdJQ0E2SUZNZ1pYaDBaVzVrY3lCemRISnBibWRjYmlBZ0lDQWdJQ0FnSUNBL0lHQnZiaVI3VUdGelkyRnNhV1o1UEZNK2ZXQmNiaUFnSUNBZ0lDQWdJQ0E2SUc1bGRtVnlYVDg2SUVkUFltcGxZM1F1VTJsbmJtRnNRMkZzYkdKaFkyczhVMlZzWml3Z1UyVnNabHRjSWlSemFXZHVZV3h6WENKZFcxTmRQbHh1ZlZ4dVhHNHZMeUJ3Y21WMGRHbGxjaTFwWjI1dmNtVmNiblI1Y0dVZ1NuTjRVSEp2Y0hNOFF5d2dVSEp2Y0hNK0lEMWNiaUFnSUNCRElHVjRkR1Z1WkhNZ2RIbHdaVzltSUVaeVlXZHRaVzUwSUQ4Z0tGQnliM0J6SUNZZ2UzMHBYRzRnSUNBZ0x5OGdhVzUwY21sdWMybGpSV3hsYldWdWRITWdZV3gzWVhseklISmxjMjlzZG1VZ1lYTWdSa05jYmlBZ0lDQXZMeUJ6YnlCM1pTQmpZVzRuZENCdVlYSnliM2NnYVhRZ1pHOTNiaXdnWVc1a0lHbHVJSE52YldVZ1kyRnpaWE5jYmlBZ0lDQXZMeUIwYUdVZ2MyVjBkWEFnWm5WdVkzUnBiMjRnYVhNZ2RIbHdaV1FnWVhNZ1lTQjFibWx2YmlCdlppQlBZbXBsWTNRZ1lXNWtJR0ZqZEhWaGJDQjBlWEJsWEc0Z0lDQWdMeThnWVhNZ1lTQm1hWGdnZFhObGNuTWdZMkZ1SUdGdVpDQnphRzkxYkdRZ2RYTmxJRVpEVUhKdmNITmNiaUFnSUNBNklFTWdaWGgwWlc1a2N5QkdReUEvSUZCeWIzQnpJQ1lnVDIxcGREeEdRMUJ5YjNCelBGSmxkSFZ5YmxSNWNHVThRejRzSUZCeWIzQnpQaXdnWENJa1hDSStYRzRnSUNBZ09pQkRJR1Y0ZEdWdVpITWdRME1nUHlCRFExQnliM0J6UEVsdWMzUmhibU5sVkhsd1pUeERQaXdnVUhKdmNITStYRzRnSUNBZ09pQnVaWFpsY2x4dVhHNW1kVzVqZEdsdmJpQnBjMGRQWW1wbFkzUkRkRzl5S0dOMGIzSTZJR0Z1ZVNrNklHTjBiM0lnYVhNZ1EwTWdlMXh1SUNBZ0lISmxkSFZ5YmlCamRHOXlMbkJ5YjNSdmRIbHdaU0JwYm5OMFlXNWpaVzltSUVkUFltcGxZM1F1VDJKcVpXTjBYRzU5WEc1Y2JtWjFibU4wYVc5dUlHbHpSblZ1WTNScGIyNURkRzl5S0dOMGIzSTZJR0Z1ZVNrNklHTjBiM0lnYVhNZ1JrTWdlMXh1SUNBZ0lISmxkSFZ5YmlCMGVYQmxiMllnWTNSdmNpQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUlDWW1JQ0ZwYzBkUFltcGxZM1JEZEc5eUtHTjBiM0lwWEc1OVhHNWNiaThxS2lCQWFXNTBaWEp1WVd3Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnpaWFJVZVhCbEtHOWlhbVZqZERvZ2IySnFaV04wTENCMGVYQmxPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQnBaaUFvWjNSclZIbHdaU0JwYmlCdlltcGxZM1FnSmlZZ2IySnFaV04wVzJkMGExUjVjR1ZkSUNFOVBTQmNJbHdpS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWhnZEhsd1pTQnZkbVZ5Y21sa1pXNGdabkp2YlNBa2UyOWlhbVZqZEZ0bmRHdFVlWEJsWFgwZ2RHOGdKSHQwZVhCbGZTQnZiaUFrZTI5aWFtVmpkSDFnS1Z4dUlDQWdJSDFjYmx4dUlDQWdJRTlpYW1WamRDNWhjM05wWjI0b2IySnFaV04wTENCN0lGdG5kR3RVZVhCbFhUb2dkSGx3WlNCOUtWeHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYW5ONFBGUWdaWGgwWlc1a2N5QW9jSEp2Y0hNNklHRnVlU2tnUFQ0Z1IwOWlhbVZqZEM1UFltcGxZM1ErS0Z4dUlDQWdJR04wYjNJNklGUXNYRzRnSUNBZ2NISnZjSE02SUVwemVGQnliM0J6UEZRc0lGQmhjbUZ0WlhSbGNuTThWRDViTUYwK0xGeHVLVG9nVW1WMGRYSnVWSGx3WlR4VVBseHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdhbk40UEZRZ1pYaDBaVzVrY3lCdVpYY2dLSEJ5YjNCek9pQmhibmtwSUQwK0lFZFBZbXBsWTNRdVQySnFaV04wUGloY2JpQWdJQ0JqZEc5eU9pQlVMRnh1SUNBZ0lIQnliM0J6T2lCS2MzaFFjbTl3Y3p4VUxDQkRiMjV6ZEhKMVkzUnZjbEJoY21GdFpYUmxjbk04VkQ1Yk1GMCtMRnh1S1RvZ1NXNXpkR0Z1WTJWVWVYQmxQRlErWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCcWMzZzhWQ0JsZUhSbGJtUnpJRWRQWW1wbFkzUXVUMkpxWldOMFBpaGNiaUFnSUNCamRHOXlPaUJyWlhsdlppQW9kSGx3Wlc5bUlHVnVkaWxiWENKcGJuUnlhVzV6YVdORmJHVnRaVzUwYzF3aVhTQjhJQ2h1WlhjZ0tIQnliM0J6T2lCaGJua3BJRDArSUZRcElId2dLQ2h3Y205d2N6b2dZVzU1S1NBOVBpQlVLU3hjYmlBZ0lDQnBibkJ5YjNCek9pQmhibmtzWEc0Z0lDQWdMeThnYTJWNUlHbHpJR0VnYzNCbFkybGhiQ0J3Y205d0lHbHVJR3B6ZUNCM2FHbGphQ0JwY3lCd1lYTnpaV1FnWVhNZ1lTQjBhR2x5WkNCaGNtZDFiV1Z1ZENCaGJtUWdibTkwSUdsdUlIQnliM0J6WEc0Z0lDQWdhMlY1UHpvZ2MzUnlhVzVuTEZ4dUtUb2dWQ0I3WEc0Z0lDQWdZMjl1YzNRZ2V5QWtMQ0FrZEhsd1pTd2dKR052Ym5OMGNuVmpkRzl5TENCamFHbHNaSEpsYml3Z0xpNHVjbVZ6ZENCOUlEMGdhVzV3Y205d2N5QmhjeUJEUTFCeWIzQnpQRlFzSUdGdWVUNWNiaUFnSUNCamIyNXpkQ0J3Y205d2N5QTlJSEpsYzNRZ1lYTWdVbVZqYjNKa1BITjBjbWx1Wnl3Z1lXNTVQbHh1WEc0Z0lDQWdhV1lnS0d0bGVTa2dUMkpxWldOMExtRnpjMmxuYmlod2NtOXdjeXdnZXlCclpYa2dmU2xjYmlBZ0lDQmxibll1YVc1cGRGQnliM0J6S0hCeWIzQnpLVnh1WEc0Z0lDQWdabTl5SUNoamIyNXpkQ0JiYTJWNUxDQjJZV3gxWlYwZ2IyWWdUMkpxWldOMExtVnVkSEpwWlhNb2NISnZjSE1wS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTQTlQVDBnZFc1a1pXWnBibVZrS1NCa1pXeGxkR1VnY0hKdmNITmJhMlY1WFZ4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnWTNSdmNpQTlQVDBnWENKemRISnBibWRjSWlrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWTNSdmNpQnBiaUJsYm5ZdWFXNTBjbWx1YzJsalJXeGxiV1Z1ZEhNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOMGIzSWdQU0JsYm5ZdWFXNTBjbWx1YzJsalJXeGxiV1Z1ZEhOYlkzUnZjbDBnWVhNZ1JrTThWRDRnZkNCRFF6eFVQbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnUlhKeWIzSW9ZSFZ1YTI1dmQyNGdhVzUwY21sdWMybGpJR1ZzWlcxbGJuUWdYQ0lrZTJOMGIzSjlYQ0pnS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHbHpSblZ1WTNScGIyNURkRzl5S0dOMGIzSXBLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRzlpYW1WamRDQTlJR04wYjNJb2V5QmphR2xzWkhKbGJpd2dMaTR1Y0hKdmNITWdmU2xjYmlBZ0lDQWdJQ0FnYVdZZ0tDUjBlWEJsS1NCelpYUlVlWEJsS0c5aWFtVmpkQ3dnSkhSNWNHVXBYRzRnSUNBZ0lDQWdJQ1EvTGlodlltcGxZM1FwWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ2WW1wbFkzUmNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QmpiMnhzWldOMElHTnpjeUJoYm1RZ1kyeGhjM05PWVcxbFhHNGdJQ0FnWTI5dWMzUWdleUJqYzNNc0lHTnNZWE56T2lCamJHRnpjMDVoYldVZ2ZTQTlJSEJ5YjNCelhHNGdJQ0FnWkdWc1pYUmxJSEJ5YjNCekxtTnpjMXh1SUNBZ0lHUmxiR1YwWlNCd2NtOXdjeTVqYkdGemMxeHVYRzRnSUNBZ1kyOXVjM1FnYzJsbmJtRnNjem9nUVhKeVlYazhXM04wY21sdVp5d2dLQzR1TG5CeWIzQnpPaUIxYm10dWIzZHVXMTBwSUQwK0lIVnVhMjV2ZDI1ZFBpQTlJRnRkWEc0Z0lDQWdZMjl1YzNRZ1ltbHVaR2x1WjNNNklFRnljbUY1UEZ0emRISnBibWNzSUVGalkyVnpjMjl5UEhWdWEyNXZkMjQrWFQ0Z1BTQmJYVnh1WEc0Z0lDQWdMeThnWTI5c2JHVmpkQ0J6YVdkdVlXeHpJR0Z1WkNCaWFXNWthVzVuYzF4dUlDQWdJR1p2Y2lBb1kyOXVjM1FnVzJ0bGVTd2dkbUZzZFdWZElHOW1JRTlpYW1WamRDNWxiblJ5YVdWektIQnliM0J6S1NrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvYTJWNUxuTjBZWEowYzFkcGRHZ29YQ0p2Ymx3aUtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MybG5ibUZzY3k1d2RYTm9LRnRyWlhrdWMyeHBZMlVvTWlrc0lIWmhiSFZsSUdGeklDZ3BJRDArSUhWdWEyNXZkMjVkS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElIQnliM0J6VzJ0bGVWMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnYVc1emRHRnVZMlZ2WmlCQlkyTmxjM052Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWW1sdVpHbHVaM011Y0hWemFDaGJhMlY1TENCMllXeDFaVjBwWEc0Z0lDQWdJQ0FnSUNBZ0lDQndjbTl3YzF0clpYbGRJRDBnZG1Gc2RXVXVaMlYwS0NsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklHTnZibk4wY25WamRGeHVJQ0FnSUdOdmJuTjBJRzlpYW1WamRDQTlJQ1JqYjI1emRISjFZM1J2Y2lBL0lDUmpiMjV6ZEhKMVkzUnZjaWh3Y205d2N5a2dPaUJ1WlhjZ0tHTjBiM0lnWVhNZ1EwTThWRDRwS0hCeWIzQnpLVnh1SUNBZ0lHbG1JQ2drWTI5dWMzUnlkV04wYjNJcElFOWlhbVZqZEM1aGMzTnBaMjRvYjJKcVpXTjBMQ0J3Y205d2N5bGNiaUFnSUNCcFppQW9KSFI1Y0dVcElITmxkRlI1Y0dVb2IySnFaV04wTENBa2RIbHdaU2xjYmx4dUlDQWdJR2xtSUNoamMzTXBJR1Z1ZGk1elpYUkRjM01vYjJKcVpXTjBMQ0JqYzNNcFhHNGdJQ0FnYVdZZ0tHTnNZWE56VG1GdFpTa2daVzUyTG5ObGRFTnNZWE56S0c5aWFtVmpkQ3dnWTJ4aGMzTk9ZVzFsS1Z4dVhHNGdJQ0FnTHk4Z1lXUmtJR05vYVd4a2NtVnVYRzRnSUNBZ1ptOXlJQ2hqYjI1emRDQmphR2xzWkNCdlppQkJjbkpoZVM1cGMwRnljbUY1S0dOb2FXeGtjbVZ1S1NBL0lHTm9hV3hrY21WdUlEb2dXMk5vYVd4a2NtVnVYU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9ZMmhwYkdRZ1BUMDlJSFJ5ZFdVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpaGNJbFJ5ZVdsdVp5QjBieUJoWkdRZ1ltOXZiR1ZoYmlCMllXeDFaU0J2WmlCZ2RISjFaV0FnWVhNZ1lTQmphR2xzWkM1Y0lpbGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGphR2xzWkNrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ1kyZ2diMllnWTJocGJHUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5ZdVlXUmtRMmhwYkdRb2IySnFaV04wTENCamFDd2dMVEVwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWTJocGJHUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnVkaTVoWkdSRGFHbHNaQ2h2WW1wbFkzUXNJR05vYVd4a0xDQXRNU2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUdoaGJtUnNaU0J6YVdkdVlXeHpYRzRnSUNBZ1kyOXVjM1FnWkdsemNHOXpaVWhoYm1Sc1pYSnpJRDBnYzJsbmJtRnNjeTV0WVhBb0tGdHphV2NzSUdoaGJtUnNaWEpkS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHNWhiV1VnUFNCclpXSmhZbWxtZVNoemFXY3BYRzRnSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnYm1GdFpTNXpkR0Z5ZEhOWGFYUm9LRndpYm05MGFXWjVMVndpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdQeUJ2WW1wbFkzUXVZMjl1Ym1WamRDaGdibTkwYVdaNU9qb2tlMjVoYldVdWMyeHBZMlVvTnlsOVlDd2dhR0Z1Wkd4bGNpbGNiaUFnSUNBZ0lDQWdJQ0FnSURvZ2IySnFaV04wTG1OdmJtNWxZM1FvYTJWaVlXSnBabmtvYzJsbktTd2dhR0Z1Wkd4bGNpbGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLQ2tnUFQ0Z2IySnFaV04wTG1ScGMyTnZibTVsWTNRb2FXUXBYRzRnSUNBZ2ZTbGNibHh1SUNBZ0lDOHZJR2hoYm1Sc1pTQmlhVzVrYVc1bmMxeHVJQ0FnSUdOdmJuTjBJR1JwYzNCdmMyVkNhVzVrYVc1bmN5QTlJR0pwYm1ScGJtZHpMbTFoY0Nnb1czQnliM0FzSUdKcGJtUnBibWRkS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHUnBjM0J2YzJVZ1BTQmlhVzVrYVc1bkxuTjFZbk5qY21saVpTZ29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6WlhRb2IySnFaV04wTENCd2NtOXdMQ0JpYVc1a2FXNW5MbWRsZENncEtWeHVJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0J6WlhRb2IySnFaV04wTENCd2NtOXdMQ0JpYVc1a2FXNW5MbWRsZENncEtWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1pHbHpjRzl6WlZ4dUlDQWdJSDBwWEc1Y2JpQWdJQ0F2THlCamJHVmhiblZ3WEc0Z0lDQWdhV1lnS0dScGMzQnZjMlZDYVc1a2FXNW5jeTVzWlc1bmRHZ2dQaUF3SUh4OElHUnBjM0J2YzJWSVlXNWtiR1Z5Y3k1c1pXNW5kR2dnUGlBd0tTQjdYRzRnSUNBZ0lDQWdJRzl1UTJ4bFlXNTFjQ2dvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiM05sU0dGdVpHeGxjbk11Wm05eVJXRmphQ2dvWTJJcElEMCtJR05pS0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2IzTmxRbWx1WkdsdVozTXVabTl5UldGamFDZ29ZMklwSUQwK0lHTmlLQ2twWEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSkQ4dUtHOWlhbVZqZENsY2JpQWdJQ0J5WlhSMWNtNGdiMkpxWldOMFhHNTlYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnFjM2h6SUQwZ2FuTjRYRzVjYm1SbFkyeGhjbVVnWjJ4dlltRnNJSHRjYmlBZ0lDQXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdRSFI1Y0dWelkzSnBjSFF0WlhOc2FXNTBMMjV2TFc1aGJXVnpjR0ZqWlZ4dUlDQWdJRzVoYldWemNHRmpaU0JLVTFnZ2UxeHVJQ0FnSUNBZ0lDQjBlWEJsSUVWc1pXMWxiblJVZVhCbElEMGdhMlY1YjJZZ1NXNTBjbWx1YzJsalJXeGxiV1Z1ZEhNZ2ZDQkdReUI4SUVORFhHNGdJQ0FnSUNBZ0lIUjVjR1VnUld4bGJXVnVkQ0E5SUVkUFltcGxZM1F1VDJKcVpXTjBYRzRnSUNBZ0lDQWdJSFI1Y0dVZ1JXeGxiV1Z1ZEVOc1lYTnpJRDBnUjA5aWFtVmpkQzVQWW1wbFkzUmNibHh1SUNBZ0lDQWdJQ0IwZVhCbElFeHBZbkpoY25sTllXNWhaMlZrUVhSMGNtbGlkWFJsY3p4RExDQlFjbTl3Y3o0Z1BTQktjM2hRY205d2N6eERMQ0JRY205d2N6NGdKaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJHU1ZoTlJUb2dkMmg1SUdSdlpYTWdZVzRnYVc1MGNtbHVjMmxqSUdWc1pXMWxiblFnWVd4M1lYbHpJSEpsYzI5c2RtVWdZWE1nUmtNL1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCZlgzUjVjR1UvT2lCRElHVjRkR1Z1WkhNZ1EwTWdQeUJjSWtORFhDSWdPaUJESUdWNGRHVnVaSE1nUmtNZ1B5QmNJa1pEWENJZ09pQnVaWFpsY2x4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJRUIwZVhCbGMyTnlhWEIwTFdWemJHbHVkQzl1YnkxbGJYQjBlUzF2WW1wbFkzUXRkSGx3WlZ4dUlDQWdJQ0FnSUNCcGJuUmxjbVpoWTJVZ1NXNTBjbWx1YzJsalJXeGxiV1Z1ZEhNZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1kyTTZJRU5EVUhKdmNITThSM1JyTGtKdmVDd2dSM1JyTGtKdmVDNURiMjV6ZEhKMVkzUnZjbEJ5YjNCekxDQkhkR3N1UW05NExsTnBaMjVoYkZOcFoyNWhkSFZ5WlhNK1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCbVl6b2dSa05RY205d2N6eEhkR3N1VjJsa1oyVjBMQ0JHYmxCeWIzQnpQbHh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXNTBaWEptWVdObElFVnNaVzFsYm5SRGFHbHNaSEpsYmtGMGRISnBZblYwWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnUUhSNWNHVnpZM0pwY0hRdFpYTnNhVzUwTDI1dkxXVnRjSFI1TFc5aWFtVmpkQzEwZVhCbFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYUdsc1pISmxiam9nZTMxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNiaUlzSUNKcGJYQnZjblFnUjA5aWFtVmpkQ0JtY205dElGd2laMms2THk5SFQySnFaV04wWENKY2JtbHRjRzl5ZENCSGFXOGdabkp2YlNCY0ltZHBPaTh2UjJsdlhDSmNibWx0Y0c5eWRDQkhUR2xpSUdaeWIyMGdYQ0puYVRvdkwwZE1hV0pjSWx4dWFXMXdiM0owSUhzZ2RIbHdaU0JRWVhOallXeHBabmtzSUdOaGJXVnNhV1o1TENCclpXSmhZbWxtZVNCOUlHWnliMjBnWENJdUxpOTFkR2xzTG1welhDSmNibWx0Y0c5eWRDQjBlWEJsSUhzZ1JHVmxjRWx1Wm1WeUxDQlNaV04xY25OcGRtVkpibVpsY2lCOUlHWnliMjBnWENJdUxpOTJZWEpwWVc1MExtcHpYQ0pjYmx4dWRIbHdaU0JUZFdKelkzSnBZbVZEWVd4c1ltRmpheUE5SUNncElEMCtJSFp2YVdSY2JuUjVjR1VnUkdsemNHOXpaVVoxYm1OMGFXOXVJRDBnS0NrZ1BUNGdkbTlwWkZ4dWRIbHdaU0JUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXpvZ1UzVmljMk55YVdKbFEyRnNiR0poWTJzcElEMCtJRVJwYzNCdmMyVkdkVzVqZEdsdmJseHVYRzVsZUhCdmNuUWdkSGx3WlNCQlkyTmxjM05sWkR4VVBpQTlJRlFnWlhoMFpXNWtjeUJCWTJObGMzTnZjanhwYm1abGNpQldQaUEvSUZZZ09pQnVaWFpsY2x4dVhHNHZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdRSFI1Y0dWelkzSnBjSFF0WlhOc2FXNTBMMjV2TFhWdWMyRm1aUzFrWldOc1lYSmhkR2x2YmkxdFpYSm5hVzVuWEc1bGVIQnZjblFnWTJ4aGMzTWdRV05qWlhOemIzSThWQ0E5SUhWdWEyNXZkMjQrSUdWNGRHVnVaSE1nUm5WdVkzUnBiMjRnZTF4dUlDQWdJSE4wWVhScFl5QWtaM1I1Y0dVZ1BTQkhUMkpxWldOMExsUlpVRVZmU2xOUFFrcEZRMVFnWVhNZ2RXNXJibTkzYmlCaGN5QkhUMkpxWldOMExrZFVlWEJsUEVGalkyVnpjMjl5UGx4dVhHNGdJQ0FnSTJkbGREb2dLQ2tnUFQ0Z1ZGeHVJQ0FnSUNOemRXSnpZM0pwWW1VNklGTjFZbk5qY21saVpVWjFibU4wYVc5dVhHNWNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaG5aWFE2SUNncElEMCtJRlFzSUhOMVluTmpjbWxpWlQ4NklGTjFZbk5qY21saVpVWjFibU4wYVc5dUtTQjdYRzRnSUNBZ0lDQWdJSE4xY0dWeUtGd2ljbVYwZFhKdUlHRnlaM1Z0Wlc1MGN5NWpZV3hzWldVdVgyTmhiR3d1WVhCd2JIa29ZWEpuZFcxbGJuUnpMbU5oYkd4bFpTd2dZWEpuZFcxbGJuUnpLVndpS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMaU56ZFdKelkzSnBZbVVnUFNCemRXSnpZM0pwWW1VZ1B6OGdLQ2dwSUQwK0lDZ3BJRDArSUhadmFXUWdNQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NGpaMlYwSUQwZ1oyVjBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dVM1ZpYzJOeWFXSmxJR1p2Y2lCMllXeDFaU0JqYUdGdVoyVnpMbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQmpZV3hzWW1GamF5QlVhR1VnWm5WdVkzUnBiMjRnZEc4Z2NuVnVJSGRvWlc0Z2RHaGxJR04xY25KbGJuUWdkbUZzZFdVZ1kyaGhibWRsY3k1Y2JpQWdJQ0FnS2lCQWNtVjBkWEp1Y3lCVmJuTjFZbk5qY21saVpTQm1kVzVqZEdsdmJpNWNiaUFnSUNBZ0tpOWNiaUFnSUNCemRXSnpZM0pwWW1Vb1kyRnNiR0poWTJzNklGTjFZbk5qY21saVpVTmhiR3hpWVdOcktUb2dSR2x6Y0c5elpVWjFibU4wYVc5dUlIdGNiaUFnSUNBZ0lDQWdMeThnVkU5RVR6b2dZWFYwYnlCMWJuTjFZaUIzYUdWdUlHRWdjMk52Y0dVZ2FYTWdZWFpoYVd4aFlteGxQMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k0amMzVmljMk55YVdKbEtHTmhiR3hpWVdOcktWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFQnlaWFIxY201eklGUm9aU0JqZFhKeVpXNTBJSFpoYkhWbExseHVJQ0FnSUNBcUwxeHVJQ0FnSUdkbGRDZ3BPaUJVSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVJMmRsZENncFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1EzSmxZWFJsSUdFZ2JtVjNJR0JCWTJObGMzTnZjbUFnZEdoaGRDQmhjSEJzYVdWeklHRWdkSEpoYm5ObWIzSnRZWFJwYjI0Z2IyNGdhWFJ6SUhaaGJIVmxMbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjBjbUZ1YzJadmNtMGdWR2hsSUhSeVlXNXpabTl5YldGMGFXOXVJSFJ2SUdGd2NHeDVMaUJUYUc5MWJHUWdZbVVnWVNCd2RYSmxJR1oxYm1OMGFXOXVMbHh1SUNBZ0lDQXFMMXh1SUNBZ0lHRnpQRklnUFNCVVBpaDBjbUZ1YzJadmNtMDZJQ2gyWVd4MVpUb2dWQ2tnUFQ0Z1VpazZJRUZqWTJWemMyOXlQRkkrSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkJZMk5sYzNOdmNpZ29LU0E5UGlCMGNtRnVjMlp2Y20wb2RHaHBjeTRqWjJWMEtDa3BMQ0IwYUdsekxpTnpkV0p6WTNKcFltVXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NISnZkR1ZqZEdWa0lGOWpZV3hzUEZJZ1BTQlVQaWgwY21GdWMyWnZjbTA2SUNoMllXeDFaVG9nVkNrZ1BUNGdVaWs2SUVGalkyVnpjMjl5UEZJK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhNb2RISmhibk5tYjNKdEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUhSdlUzUnlhVzVuS0NrNklITjBjbWx1WnlCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCZ1FXTmpaWE56YjNJOEpIdDBhR2x6TG1kbGRDZ3BmVDVnWEc0Z0lDQWdmVnh1WEc0Z0lDQWdXMU41YldKdmJDNTBiMUJ5YVcxcGRHbDJaVjBvS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWhjSWtGalkyVnpjMjl5SUdsdGNHeHBZMmwwYkhrZ1kyOXVkbVZ5ZEdWa0lIUnZJR0VnY0hKcGJXbDBhWFpsSUhaaGJIVmxMbHdpS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBiMU4wY21sdVp5Z3BYRzRnSUNBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUVGalkyVnpjMjl5UEZRK0lIdGNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkRjbVZoZEdVZ1lTQnVaWGNnWUVGalkyVnpjMjl5WUNCMGFHRjBJR0Z3Y0d4cFpYTWdZU0IwY21GdWMyWnZjbTFoZEdsdmJpQnZiaUJwZEhNZ2RtRnNkV1V1WEc0Z0lDQWdJQ29nUUhCaGNtRnRJSFJ5WVc1elptOXliU0JVYUdVZ2RISmhibk5tYjNKdFlYUnBiMjRnZEc4Z1lYQndiSGt1SUZOb2IzVnNaQ0JpWlNCaElIQjFjbVVnWm5WdVkzUnBiMjR1WEc0Z0lDQWdJQ292WEc0Z0lDQWdQRklnUFNCVVBpaDBjbUZ1YzJadmNtMDZJQ2gyWVd4MVpUb2dWQ2tnUFQ0Z1VpazZJRUZqWTJWemMyOXlQRkkrWEc1OVhHNWNibVY0Y0c5eWRDQjBlWEJsSUZObGRIUmxjanhVUGlBOUlIdGNiaUFnSUNBb2RtRnNkV1U2SUZRcE9pQjJiMmxrWEc0Z0lDQWdLSFpoYkhWbE9pQW9jSEpsZGpvZ1ZDa2dQVDRnVkNrNklIWnZhV1JjYm4xY2JseHVaWGh3YjNKMElIUjVjR1VnVTNSaGRHVThWRDRnUFNCYlFXTmpaWE56YjNJOFZENHNJRk5sZEhSbGNqeFVQbDFjYmx4dUx5b3FYRzRnS2lCRGNtVmhkR1VnWVNCM2NtbDBZV0pzWlNCemFXZHVZV3d1WEc0Z0tseHVJQ29nUUhCaGNtRnRJR2x1YVhRZ1ZHaGxJR2x1ZEdsaGJDQjJZV3gxWlNCdlppQjBhR1VnYzJsbmJtRnNYRzRnS2lCQWNtVjBkWEp1Y3lCQmJpQmdRV05qWlhOemIzSmdJR0Z1WkNCaElITmxkSFJsY2lCbWRXNWpkR2x2Ymx4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZM0psWVhSbFUzUmhkR1U4VkQ0b2FXNXBkRG9nVkNrNklGTjBZWFJsUEZRK0lIdGNiaUFnSUNCc1pYUWdZM1Z5Y21WdWRGWmhiSFZsSUQwZ2FXNXBkRnh1SUNBZ0lHTnZibk4wSUhOMVluTmpjbWxpWlhKeklEMGdibVYzSUZObGREeFRkV0p6WTNKcFltVkRZV3hzWW1GamF6NG9LVnh1WEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbE9pQlRkV0p6WTNKcFltVkdkVzVqZEdsdmJpQTlJQ2hqWVd4c1ltRmpheWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVoWkdRb1kyRnNiR0poWTJzcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBb0tTQTlQaUJ6ZFdKelkzSnBZbVZ5Y3k1a1pXeGxkR1VvWTJGc2JHSmhZMnNwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ2MyVjBJRDBnS0c1bGQxWmhiSFZsT2lCMWJtdHViM2R1S1NBOVBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIWmhiSFZsT2lCVUlEMGdkSGx3Wlc5bUlHNWxkMVpoYkhWbElEMDlQU0JjSW1aMWJtTjBhVzl1WENJZ1B5QnVaWGRXWVd4MVpTaGpkWEp5Wlc1MFZtRnNkV1VwSURvZ2JtVjNWbUZzZFdWY2JpQWdJQ0FnSUNBZ2FXWWdLR04xY25KbGJuUldZV3gxWlNBaFBUMGdkbUZzZFdVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJXWVd4MVpTQTlJSFpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCeWRXNXVhVzVuSUdOaGJHeGlZV05yY3lCdGFXZG9kQ0J0ZFhSaGRHVWdjM1ZpYzJOeWFXSmxjbk5jYmlBZ0lDQWdJQ0FnSUNBZ0lFRnljbUY1TG1aeWIyMG9jM1ZpYzJOeWFXSmxjbk1wTG1admNrVmhZMmdvS0dOaUtTQTlQaUJqWWlncEtWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUZ0dVpYY2dRV05qWlhOemIzSW9LQ2tnUFQ0Z1kzVnljbVZ1ZEZaaGJIVmxMQ0J6ZFdKelkzSnBZbVVwTENCelpYUWdZWE1nVTJWMGRHVnlQRlErWFZ4dWZWeHVYRzR2S2lwY2JpQXFJRU55WldGMFpTQmhiaUJnUVdOalpYTnpiM0pnSUhkb2FXTm9JR2x6SUdOdmJYQjFkR1ZrSUdaeWIyMGdZU0JzYVhOMElHOW1JR0JCWTJObGMzTnZjbUJ6TGx4dUlDcGNiaUFxSUdCZ1lIUnpJRVY0WVcxd2JHVmNiaUFxSUd4bGRDQmhPaUJCWTJObGMzTnZjanh1ZFcxaVpYSStYRzRnS2lCc1pYUWdZam9nUVdOalpYTnpiM0k4YzNSeWFXNW5QbHh1SUNvZ1kyOXVjM1FnWXpvZ1FXTmpaWE56YjNJOFcyNTFiV0psY2l3Z2MzUnlhVzVuWFQ0Z1BTQmpjbVZoZEdWRGIyMXdkWFJsWkNoYllTd2dZbDBwWEc0Z0tpQmpiMjV6ZENCa09pQkJZMk5sYzNOdmNqeHpkSEpwYm1jK0lEMGdZM0psWVhSbFEyOXRjSFYwWldRb1cyRXNJR0pkTENBb1lUb2diblZ0WW1WeUxDQmlPaUJ6ZEhKcGJtY3BJRDArSUdBa2UyRjlJQ1I3WW4xZ0tWeHVJQ29nWUdCZ1hHNGdLbHh1SUNvZ1FIQmhjbUZ0SUdSbGNITWdUR2x6ZENCdlppQmdRV05qWlhOemIzSnpZQzVjYmlBcUlFQndZWEpoYlNCMGNtRnVjMlp2Y20wZ1FXNGdiM0IwYVc5dVlXd2dkSEpoYm5ObWIzSnRJR1oxYm1OMGFXOXVMbHh1SUNvZ1FISmxkSFZ5Ym5NZ1ZHaGxJR052YlhCMWRHVmtJR0JCWTJObGMzTnZjbUF1WEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWRGIyMXdkWFJsWkR4Y2JpQWdJQ0JqYjI1emRDQkVaWEJ6SUdWNGRHVnVaSE1nUVhKeVlYazhRV05qWlhOemIzSThZVzU1UGo0c1hHNGdJQ0FnUVhKbmN5QmxlSFJsYm1SeklIc2dXMHNnYVc0Z2EyVjViMllnUkdWd2MxMDZJRUZqWTJWemMyVmtQRVJsY0hOYlMxMCtJSDBzWEc0Z0lDQWdWaUE5SUVGeVozTXNYRzQrS0dSbGNITTZJRVJsY0hNc0lIUnlZVzV6Wm05eWJUODZJQ2d1TGk1aGNtZHpPaUJCY21kektTQTlQaUJXS1RvZ1FXTmpaWE56YjNJOFZqNGdlMXh1SUNBZ0lHeGxkQ0JrYVhOd2IzTmxPaUJCY25KaGVUeEVhWE53YjNObFJuVnVZM1JwYjI0K1hHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxjbk1nUFNCdVpYY2dVMlYwUEZOMVluTmpjbWxpWlVOaGJHeGlZV05yUGlncFhHNGdJQ0FnWTI5dWMzUWdZMkZqYUdVZ1BTQnVaWGNnUVhKeVlYazhkVzVyYm05M2JqNG9aR1Z3Y3k1c1pXNW5kR2dwWEc1Y2JpQWdJQ0JqYjI1emRDQnpkV0p6WTNKcFltVTZJRk4xWW5OamNtbGlaVVoxYm1OMGFXOXVJRDBnS0dOaGJHeGlZV05yS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR2xtSUNoemRXSnpZM0pwWW1WeWN5NXphWHBsSUQwOVBTQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YjNObElEMGdaR1Z3Y3k1dFlYQW9LR1JsY0N3Z2FTa2dQVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWlhBdWMzVmljMk55YVdKbEtDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RtRnNkV1VnUFNCa1pYQXVaMlYwS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOaFkyaGxXMmxkSUNFOVBTQjJZV3gxWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRmphR1ZiYVYwZ1BTQmtaWEF1WjJWMEtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRnljbUY1TG1aeWIyMG9jM1ZpYzJOeWFXSmxjbk1wTG1admNrVmhZMmdvS0dOaUtTQTlQaUJqWWlncEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVoWkdRb1kyRnNiR0poWTJzcFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1SbGJHVjBaU2hqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6ZFdKelkzSnBZbVZ5Y3k1emFYcGxJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTNXRZWEFvS0dOaUtTQTlQaUJqWWlncEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0J2YzJVdWJHVnVaM1JvSUQwZ01GeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhZMmhsTG14bGJtZDBhQ0E5SURCY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym5OMElHZGxkQ0E5SUNncE9pQldJRDArSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWVhKbmN5QTlJR1JsY0hNdWJXRndLQ2hrWlhBc0lHa3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFkyRmphR1ZiYVYwcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZV05vWlZ0cFhTQTlJR1JsY0M1blpYUW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTJGamFHVmJhVjFjYmlBZ0lDQWdJQ0FnZlNsY2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISmhibk5tYjNKdElEOGdkSEpoYm5ObWIzSnRLQzR1TGloaGNtZHpJR0Z6SUVGeVozTXBLU0E2SUNoaGNtZHpJR0Z6SUZZcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRzVsZHlCQlkyTmxjM052Y2loblpYUXNJSE4xWW5OamNtbGlaU2xjYm4xY2JseHVMeW9xWEc0Z0tpQkRjbVZoZEdVZ1lXNGdZRUZqWTJWemMyOXlZQ0J2YmlCaElHQkhUMkpxWldOMExrOWlhbVZqZEdBbmN5QmdjSEp2Y0dWeWRIbGdMbHh1SUNwY2JpQXFJRUJ3WVhKaGJTQnZZbXBsWTNRZ1ZHaGxJR0JIVDJKcVpXTjBMazlpYW1WamRHQWdkRzhnWTNKbFlYUmxJSFJvWlNCZ1FXTmpaWE56YjNKZ0lHOXVMbHh1SUNvZ1FIQmhjbUZ0SUhCeWIzQmxjblI1SUU5dVpTQnZaaUJwZEhNZ2NtVm5hWE4wWlhKbFpDQndjbTl3WlhKMGFXVnpMbHh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUW1sdVpHbHVaenhVSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUXNJRkFnWlhoMFpXNWtjeUJyWlhsdlppQlVQaWhjYmlBZ0lDQnZZbXBsWTNRNklGUXNYRzRnSUNBZ2NISnZjR1Z5ZEhrNklFVjRkSEpoWTNROFVDd2djM1J5YVc1blBpeGNiaWs2SUVGalkyVnpjMjl5UEZSYlVGMCtYRzVjYmk4dklGUlBSRTg2SUhOMWNIQnZjblFnYm1WemRHVmtJR0pwYm1ScGJtZHpYRzR2THlCbGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxRbWx1WkdsdVp6eGNiaTh2SUNBZ0lDQlVJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNHZMeUFnSUNBZ1VERWdaWGgwWlc1a2N5QnJaWGx2WmlCVUxGeHVMeThnSUNBZ0lGQXlJR1Y0ZEdWdVpITWdhMlY1YjJZZ1RtOXVUblZzYkdGaWJHVThWRnRRTVYwK0xGeHVMeThnUGloY2JpOHZJQ0FnSUNCdlltcGxZM1E2SUZRc1hHNHZMeUFnSUNBZ2NISnZjR1Z5ZEhreE9pQkZlSFJ5WVdOMFBGQXhMQ0J6ZEhKcGJtYytMRnh1THk4Z0lDQWdJSEJ5YjNCbGNuUjVNam9nUlhoMGNtRmpkRHhRTWl3Z2MzUnlhVzVuUGl4Y2JpOHZJQ2s2SUVGalkyVnpjMjl5UEU1dmJrNTFiR3hoWW14bFBGUmJVREZkUGx0UU1sMCtYRzVjYmk4cUtseHVJQ29nUTNKbFlYUmxJR0Z1SUdCQlkyTmxjM052Y21BZ2IyNGdZU0JnUjJsdkxsTmxkSFJwYm1kellDZHpJR0JyWlhsZ0xseHVJQ29nVm1Gc2RXVnpJR0Z5WlNCeVpXTjFjbk5wZG1Wc2VTQjFibkJoWTJ0bFpDNWNiaUFxWEc0Z0tpQkFaR1Z3Y21WallYUmxaQ0J3Y21WbVpYSWdkWE5wYm1jZ2UwQnNhVzVySUdOeVpXRjBaVk5sZEhScGJtZHpmUzVjYmlBcUlFQndZWEpoYlNCdlltcGxZM1FnVkdobElHQkhhVzh1VTJWMGRHbHVaM05nSUhSdklHTnlaV0YwWlNCMGFHVWdZRUZqWTJWemMyOXlZQ0J2Ymk1Y2JpQXFJRUJ3WVhKaGJTQnJaWGtnVkdobElITmxkSFJwYm1keklHdGxlVnh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUW1sdVpHbHVaenhVUGloelpYUjBhVzVuY3pvZ1IybHZMbE5sZEhScGJtZHpMQ0JyWlhrNklITjBjbWx1WnlrNklFRmpZMlZ6YzI5eVBGUStYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVkNhVzVrYVc1blBGUStLRzlpYW1WamREb2dSMDlpYW1WamRDNVBZbXBsWTNRZ2ZDQkhhVzh1VTJWMGRHbHVaM01zSUd0bGVUb2djM1J5YVc1bktUb2dRV05qWlhOemIzSThWRDRnZTF4dUlDQWdJR052Ym5OMElIQnliM0FnUFNCclpXSmhZbWxtZVNoclpYa3BJR0Z6SUd0bGVXOW1JSFI1Y0dWdlppQnZZbXBsWTNSY2JseHVJQ0FnSUdOdmJuTjBJSE4xWW5OamNtbGlaVG9nVTNWaWMyTnlhV0psUm5WdVkzUnBiMjRnUFNBb1kyRnNiR0poWTJzcElEMCtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjMmxuSUQwZ2IySnFaV04wSUdsdWMzUmhibU5sYjJZZ1IybHZMbE5sZEhScGJtZHpJRDhnWENKamFHRnVaMlZrWENJZ09pQmNJbTV2ZEdsbWVWd2lYRzRnSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnYjJKcVpXTjBMbU52Ym01bFkzUW9ZQ1I3YzJsbmZUbzZKSHR3Y205d2ZXQXNJQ2dwSUQwK0lHTmhiR3hpWVdOcktDa3BYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQW9LU0E5UGlCdlltcGxZM1F1WkdselkyOXVibVZqZENocFpDbGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JuWlhRZ1BTQW9LVG9nVkNBOVBpQjdYRzRnSUNBZ0lDQWdJR2xtSUNodlltcGxZM1FnYVc1emRHRnVZMlZ2WmlCSGFXOHVVMlYwZEdsdVozTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdlltcGxZM1F1WjJWMFgzWmhiSFZsS0d0bGVTa3VjbVZqZFhKemFYWmxWVzV3WVdOcktDa2dZWE1nVkZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1oyVjBkR1Z5SUQwZ1lHZGxkRjhrZTNCeWIzQXVjbVZ3YkdGalpVRnNiQ2hjSWkxY0lpd2dYQ0pmWENJcGZXQWdZWE1nYTJWNWIyWWdkSGx3Wlc5bUlHOWlhbVZqZEZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1oyVjBkR1Z5SUdsdUlHOWlhbVZqZENBbUppQjBlWEJsYjJZZ2IySnFaV04wVzJkbGRIUmxjbDBnUFQwOUlGd2lablZ1WTNScGIyNWNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUFvYjJKcVpXTjBXMmRsZEhSbGNsMGdZWE1nS0NrZ1BUNGdkVzVyYm05M2Jpa29LU0JoY3lCVVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod2NtOXdJR2x1SUc5aWFtVmpkQ2tnY21WMGRYSnVJRzlpYW1WamRGdHdjbTl3WFNCaGN5QlVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hMlY1SUdsdUlHOWlhbVZqZENrZ2NtVjBkWEp1SUc5aWFtVmpkRnRyWlhrZ1lYTWdhMlY1YjJZZ2RIbHdaVzltSUc5aWFtVmpkRjBnWVhNZ1ZGeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJGY25KdmNpaGdZMkZ1Ym05MElHZGxkQ0J3Y205d1pYSjBlU0FrZTJ0bGVYMWdLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJCWTJObGMzTnZjaWhuWlhRc0lITjFZbk5qY21saVpTbGNibjFjYmx4dWRIbHdaU0JEYjI1dVpXTjBhVzl1U0dGdVpHeGxjanhjYmlBZ0lDQlBJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXlCbGVIUmxibVJ6SUd0bGVXOW1JRTliWENJa2MybG5ibUZzYzF3aVhTeGNiaUFnSUNCVUxGeHVQaUE5SUU5YlhDSWtjMmxuYm1Gc2Mxd2lYVnRUWFNCbGVIUmxibVJ6SUNndUxpNWhjbWR6T2lCaGJubGJYU2tnUFQ0Z2FXNW1aWElnVWx4dUlDQWdJRDhnZG05cFpDQmxlSFJsYm1SeklGSmNiaUFnSUNBZ0lDQWdQeUFvTGk0dVlYSm5jem9nV3k0dUxsQmhjbUZ0WlhSbGNuTThUMXRjSWlSemFXZHVZV3h6WENKZFcxTmRQaXdnWTNWeWNtVnVkRlpoYkhWbE9pQlVYU2tnUFQ0Z1ZGeHVJQ0FnSUNBZ0lDQTZJRzVsZG1WeVhHNGdJQ0FnT2lCdVpYWmxjbHh1WEc0dktpcGNiaUFxSUVOeVpXRjBaU0JoYmlCZ1FXTmpaWE56YjNKZ0lIZG9hV05vSUhObGRITWdkWEFnWVNCc2FYTjBJRzltSUdCSFQySnFaV04wTGs5aWFtVmpkR0FnYzJsbmJtRnNJR052Ym01bFkzUnBiMjV6TGx4dUlDcGNiaUFxSUdCZ1lIUnpJRVY0WVcxd2JHVmNiaUFxSUdOdmJuTjBJSFpoYkhWbE9pQkJZMk5sYzNOdmNqeHpkSEpwYm1jK0lEMGdZM0psWVhSbFEyOXVibVZqZEdsdmJpaGNiaUFxSUNBZ1hDSnBibWwwYVdGc0lIWmhiSFZsWENJc1hHNGdLaUFnSUZ0dlltb3hMQ0JjSW5OcFp5MXVZVzFsWENJc0lDZ3VMaTVoY21kektTQTlQaUJjSW5OMGNsd2lYU3hjYmlBcUlDQWdXMjlpYWpJc0lGd2ljMmxuTFc1aGJXVmNJaXdnS0M0dUxtRnlaM01wSUQwK0lGd2ljM1J5WENKZFhHNGdLaUFwWEc0Z0tpQmdZR0JjYmlBcVhHNGdLaUJBY0dGeVlXMGdhVzVwZENCVWFHVWdhVzVwZEdsaGJDQjJZV3gxWlZ4dUlDb2dRSEJoY21GdElITnBaMjVoYkhNZ1FTQnNhWE4wSUc5bUlHQkhUMkpxWldOMExrOWlhbVZqZEdBc0lITnBaMjVoYkNCdVlXMWxJR0Z1WkNCallXeHNZbUZqYXlCd1lXbHljeUIwYnlCamIyNXVaV04wTGx4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZM0psWVhSbFEyOXVibVZqZEdsdmJqeGNiaUFnSUNCVUxGeHVJQ0FnSUU4eElHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVekVnWlhoMFpXNWtjeUJyWlhsdlppQlBNVnRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4eUlHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVeklnWlhoMFpXNWtjeUJyWlhsdlppQlBNbHRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4eklHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVek1nWlhoMFpXNWtjeUJyWlhsdlppQlBNMXRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4MElHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVelFnWlhoMFpXNWtjeUJyWlhsdlppQlBORnRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4MUlHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVelVnWlhoMFpXNWtjeUJyWlhsdlppQlBOVnRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4MklHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVellnWlhoMFpXNWtjeUJyWlhsdlppQlBObHRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4M0lHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVemNnWlhoMFpXNWtjeUJyWlhsdlppQlBOMXRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4NElHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVemdnWlhoMFpXNWtjeUJyWlhsdlppQlBPRnRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUU4NUlHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FzWEc0Z0lDQWdVemtnWlhoMFpXNWtjeUJyWlhsdlppQlBPVnRjSWlSemFXZHVZV3h6WENKZExGeHVQaWhjYmlBZ0lDQnBibWwwT2lCVUxGeHVJQ0FnSUdneE9pQmJUekVzSUZNeExDQkRiMjV1WldOMGFXOXVTR0Z1Wkd4bGNqeFBNU3dnVXpFc0lGUStYU3hjYmlBZ0lDQm9Najg2SUZ0UE1pd2dVeklzSUVOdmJtNWxZM1JwYjI1SVlXNWtiR1Z5UEU4eUxDQlRNaXdnVkQ1ZExGeHVJQ0FnSUdnelB6b2dXMDh6TENCVE15d2dRMjl1Ym1WamRHbHZia2hoYm1Sc1pYSThUek1zSUZNekxDQlVQbDBzWEc0Z0lDQWdhRFEvT2lCYlR6UXNJRk0wTENCRGIyNXVaV04wYVc5dVNHRnVaR3hsY2p4UE5Dd2dVelFzSUZRK1hTeGNiaUFnSUNCb05UODZJRnRQTlN3Z1V6VXNJRU52Ym01bFkzUnBiMjVJWVc1a2JHVnlQRTgxTENCVE5Td2dWRDVkTEZ4dUlDQWdJR2cyUHpvZ1cwODJMQ0JUTml3Z1EyOXVibVZqZEdsdmJraGhibVJzWlhJOFR6WXNJRk0yTENCVVBsMHNYRzRnSUNBZ2FEYy9PaUJiVHpjc0lGTTNMQ0JEYjI1dVpXTjBhVzl1U0dGdVpHeGxjanhQTnl3Z1V6Y3NJRlErWFN4Y2JpQWdJQ0JvT0Q4NklGdFBPQ3dnVXpnc0lFTnZibTVsWTNScGIyNUlZVzVrYkdWeVBFODRMQ0JUT0N3Z1ZENWRMRnh1SUNBZ0lHZzVQem9nVzA4NUxDQlRPU3dnUTI5dWJtVmpkR2x2YmtoaGJtUnNaWEk4VHprc0lGTTVMQ0JVUGwwc1hHNHBJSHRjYmlBZ0lDQnNaWFFnZG1Gc2RXVWdQU0JwYm1sMFhHNGdJQ0FnYkdWMElHUnBjM0J2YzJVNklFRnljbUY1UEVScGMzQnZjMlZHZFc1amRHbHZiajVjYmlBZ0lDQmpiMjV6ZENCemRXSnpZM0pwWW1WeWN5QTlJRzVsZHlCVFpYUThVM1ZpYzJOeWFXSmxRMkZzYkdKaFkycytLQ2xjYmlBZ0lDQmpiMjV6ZENCemFXZHVZV3h6SUQwZ1cyZ3hMQ0JvTWl3Z2FETXNJR2cwTENCb05Td2dhRFlzSUdnM0xDQm9PQ3dnYURsZExtWnBiSFJsY2lnb2FDa2dQVDRnYUNBaFBUMGdkVzVrWldacGJtVmtLVnh1WEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbE9pQlRkV0p6WTNKcFltVkdkVzVqZEdsdmJpQTlJQ2hqWVd4c1ltRmpheWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnBaaUFvYzNWaWMyTnlhV0psY25NdWMybDZaU0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjRzl6WlNBOUlITnBaMjVoYkhNdWJXRndLQ2hiYjJKcVpXTjBMQ0J6YVdkdVlXd3NJR05oYkd4aVlXTnJYU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdsa0lEMGdSMDlpYW1WamRDNVBZbXBsWTNRdWNISnZkRzkwZVhCbExtTnZibTVsWTNRdVkyRnNiQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IySnFaV04wTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphV2R1WVd3Z1lYTWdjM1J5YVc1bkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvWHl3Z0xpNHVZWEpuY3lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNWbUZzZFdVZ1BTQmpZV3hzWW1GamF5Z3VMaTVoY21kekxDQjJZV3gxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDJZV3gxWlNBaFBUMGdibVYzVm1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaU0E5SUc1bGQxWmhiSFZsWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FYSnlZWGt1Wm5KdmJTaHpkV0p6WTNKcFltVnljeWt1Wm05eVJXRmphQ2dvWTJJcElEMCtJR05pS0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJRWRQWW1wbFkzUXVUMkpxWldOMExuQnliM1J2ZEhsd1pTNWthWE5qYjI1dVpXTjBMbU5oYkd3b2IySnFaV04wTENCcFpDbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J6ZFdKelkzSnBZbVZ5Y3k1aFpHUW9ZMkZzYkdKaFkyc3BYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOMVluTmpjbWxpWlhKekxtUmxiR1YwWlNoallXeHNZbUZqYXlsY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemRXSnpZM0pwWW1WeWN5NXphWHBsSUQwOVBTQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHOXpaUzV0WVhBb0tHTmlLU0E5UGlCallpZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCdmMyVXViR1Z1WjNSb0lEMGdNRnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QkJZMk5sYzNOdmNpZ29LU0E5UGlCMllXeDFaU3dnYzNWaWMyTnlhV0psS1Z4dWZWeHVYRzR2S2lwY2JpQXFJRU55WldGMFpTQmhJSE5wWjI1aGJDQm1jbTl0SUdFZ2NISnZkbWxsY2lCbWRXNWpkR2x2Ymk1Y2JpQXFJRlJvWlNCd2NtOTJhV1JsY2lCcGN5QmpZV3hzWldRZ2QyaGxiaUIwYUdVZ1ptbHljM1FnYzNWaWMyTnlhV0psY2lCaGNIQmxZWEp6SUdGdVpDQjBhR1VnY21WMGRYSnVaV1FnWkdsemNHOXpaVnh1SUNvZ1puVnVZM1JwYjI0Z1puSnZiU0IwYUdVZ2NISnZkbWxrWlhJZ2QybHNiQ0JpWlNCallXeHNaV1FnZDJobGJpQjBhR1VnYm5WdFltVnlJRzltSUhOMVluTmpjbWxpWlhKeklHUnliM0FnZEc4Z2VtVnlieTVjYmlBcVhHNGdLaUJGZUdGdGNHeGxPbHh1SUNwY2JpQXFJR0JnWUhSelhHNGdLaUJqYjI1emRDQjJZV3gxWlNBOUlHTnlaV0YwWlVWNGRHVnlibUZzS0RBc0lDaHpaWFFwSUQwK0lIdGNiaUFxSUNBZ1kyOXVjM1FnYVc1MFpYSjJZV3dnUFNCelpYUkpiblJsY25aaGJDZ29LU0E5UGlCelpYUW9LSFlwSUQwK0lIWWdLeUF4S1NsY2JpQXFJQ0FnY21WMGRYSnVJQ2dwSUQwK0lHTnNaV0Z5U1c1MFpYSjJZV3dvYVc1MFpYSjJZV3dwWEc0Z0tpQjlLVnh1SUNvZ1lHQmdYRzRnS2x4dUlDb2dRSEJoY21GdElHbHVhWFFnVkdobElHbHVhWFJwWVd3Z2RtRnNkV1ZjYmlBcUlFQndZWEpoYlNCd2NtOWtkV05sY2lCVWFHVWdjSEp2WkhWalpYSWdablZ1WTNScGIyNGdkMmhwWTJnZ2MyaHZkV3hrSUhKbGRIVnliaUJoSUdOc1pXRnVkWEFnWm5WdVkzUnBiMjVjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlVWNGRHVnlibUZzUEZRK0tGeHVJQ0FnSUdsdWFYUTZJRlFzWEc0Z0lDQWdjSEp2WkhWalpYSTZJQ2h6WlhRNklGTmxkSFJsY2p4VVBpa2dQVDRnUkdsemNHOXpaVVoxYm1OMGFXOXVMRnh1S1RvZ1FXTmpaWE56YjNJOFZENGdlMXh1SUNBZ0lHeGxkQ0JqZFhKeVpXNTBWbUZzZFdVZ1BTQnBibWwwWEc0Z0lDQWdiR1YwSUdScGMzQnZjMlU2SUVScGMzQnZjMlZHZFc1amRHbHZibHh1SUNBZ0lHTnZibk4wSUhOMVluTmpjbWxpWlhKeklEMGdibVYzSUZObGREeFRkV0p6WTNKcFltVkRZV3hzWW1GamF6NG9LVnh1WEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbE9pQlRkV0p6WTNKcFltVkdkVzVqZEdsdmJpQTlJQ2hqWVd4c1ltRmpheWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnBaaUFvYzNWaWMyTnlhV0psY25NdWMybDZaU0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjRzl6WlNBOUlIQnliMlIxWTJWeUtDaDJPaUIxYm10dWIzZHVLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYm1WM1ZtRnNkV1U2SUZRZ1BTQjBlWEJsYjJZZ2RpQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUlEOGdkaWhqZFhKeVpXNTBWbUZzZFdVcElEb2dkbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodVpYZFdZV3gxWlNBaFBUMGdZM1Z5Y21WdWRGWmhiSFZsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04xY25KbGJuUldZV3gxWlNBOUlHNWxkMVpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUZ5Y21GNUxtWnliMjBvYzNWaWMyTnlhV0psY25NcExtWnZja1ZoWTJnb0tHTmlLU0E5UGlCallpZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCemRXSnpZM0pwWW1WeWN5NWhaR1FvWTJGc2JHSmhZMnNwWEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITjFZbk5qY21saVpYSnpMbVJsYkdWMFpTaGpZV3hzWW1GamF5bGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjRzl6WlNncFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUVGalkyVnpjMjl5S0NncElEMCtJR04xY25KbGJuUldZV3gxWlN3Z2MzVmljMk55YVdKbEtWeHVmVnh1WEc0dktpb2dRR1Y0Y0dWeWFXMWxiblJoYkNBcUwxeHVkSGx3WlNCVFpYUjBhVzVuY3p4VUlHVjRkR1Z1WkhNZ1VtVmpiM0prUEhOMGNtbHVaeXdnYzNSeWFXNW5QajRnUFNCN1hHNGdJQ0FnVzBzZ2FXNGdhMlY1YjJZZ1ZDQmhjeUJWYm1OaGNHbDBZV3hwZW1VOFVHRnpZMkZzYVdaNVBFcytQbDA2SUVGalkyVnpjMjl5UEZKbFkzVnljMmwyWlVsdVptVnlQRlJiUzEwK1BseHVmU0FtSUh0Y2JpQWdJQ0JiU3lCcGJpQnJaWGx2WmlCVUlHRnpJR0J6WlhRa2UxQmhjMk5oYkdsbWVUeExQbjFnWFRvZ1UyVjBkR1Z5UEVSbFpYQkpibVpsY2p4VVcwdGRQajVjYm4xY2JseHVMeW9xWEc0Z0tpQkFaWGh3WlhKcGJXVnVkR0ZzWEc0Z0tseHVJQ29nVjNKaGNDQmhJSHRBYkdsdWF5QkhhVzh1VTJWMGRHbHVaM045SUdsdWRHOGdZU0JqYjJ4c1pXTjBhVzl1SUc5bUlITmxkSFJsY25NZ1lXNWtJR0ZqWTJWemMyOXljeTVjYmlBcVhHNGdLaUJGZUdGdGNHeGxPbHh1SUNwY2JpQXFJR0JnWUhSelhHNGdLaUJqYjI1emRDQnpJRDBnWTNKbFlYUmxVMlYwZEdsdVozTW9jMlYwZEdsdVozTXNJSHRjYmlBcUlDQWdYQ0pqYjIxd2JHVjRMV3RsZVZ3aU9pQmNJbUY3YzJGN2MzTjlmVndpTEZ4dUlDb2dJQ0JjSW5OcGJYQnNaUzFyWlhsY0lqb2dYQ0p6WENJc1hHNGdLaUI5S1Z4dUlDcGNiaUFxSUhNdVkyOXRjR3hsZUV0bGVTNXpkV0p6WTNKcFltVW9LQ2tnUFQ0Z2UxeHVJQ29nSUNCd2NtbHVkQ2h6TG1OdmJYQnNaWGhMWlhrdVoyVjBLQ2twWEc0Z0tpQjlLVnh1SUNwY2JpQXFJSE11YzJWMFEyOXRjR3hsZUV0bGVTZ29jSEpsZGlrZ1BUNGdLSHRjYmlBcUlDQWdMaTR1Y0hKbGRpeGNiaUFxSUNBZ2EyVjVPaUI3SUc1bGMzUmxaRG9nWENKY0lpQjlMRnh1SUNvZ2ZTa3BYRzRnS2lCZ1lHQmNiaUFxTDF4dUx5OGdWRTlFVHpvZ1kyOXRaU0IxY0NCM2FYUm9JR0Z1SUVGUVNWeHVMeThnTFNCMGJ5QnRZVzUxWVd4c2VTQmhibTV2ZEdGMFpTQldZWEpwWVc1MElIUjVjR1ZrSUhObGRIUmxjbk12WjJWMGRHVnljMXh1THk4Z0xTQjBieUJ6WlhRZ2NtVmpkWEp6YVhabElIWnpJR1JsWlhBZ2RXNXdZV05ySUhCbGNpQnJaWGxjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVlRaWFIwYVc1bmN6eGpiMjV6ZENCVUlHVjRkR1Z1WkhNZ1VtVmpiM0prUEhOMGNtbHVaeXdnYzNSeWFXNW5QajRvWEc0Z0lDQWdjMlYwZEdsdVozTTZJRWRwYnk1VFpYUjBhVzVuY3l4Y2JpQWdJQ0JyWlhsek9pQlVMRnh1S1RvZ1UyVjBkR2x1WjNNOFZENGdlMXh1SUNBZ0lISmxkSFZ5YmlCUFltcGxZM1F1Wm5KdmJVVnVkSEpwWlhNb1hHNGdJQ0FnSUNBZ0lFOWlhbVZqZEM1bGJuUnlhV1Z6S0d0bGVYTXBMbVpzWVhSTllYQW9LRnRyWlhrc0lIUjVjR1ZkS1NBOVBpQmJYRzRnSUNBZ0lDQWdJQ0FnSUNCYlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnRaV3hwWm5rb2EyVjVLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1FXTmpaWE56YjNJb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2dwSUQwK0lITmxkSFJwYm1kekxtZGxkRjkyWVd4MVpTaHJaWGtwTG5KbFkzVnljMmwyWlZWdWNHRmpheWdwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW9ZMkZzYkdKaFkyc3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR2xrSUQwZ2MyVjBkR2x1WjNNdVkyOXVibVZqZENoZ1kyaGhibWRsWkRvNkpIdHJaWGw5WUN3Z1kyRnNiR0poWTJzcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnS0NrZ1BUNGdjMlYwZEdsdVozTXVaR2x6WTI5dWJtVmpkQ2hwWkNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdYU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lGdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmdjMlYwSkh0clpYbGJNRjB1ZEc5VmNIQmxja05oYzJVb0tTQXJJR05oYldWc2FXWjVLR3RsZVNrdWMyeHBZMlVvTVNsOVlDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW9kam9nZFc1cmJtOTNiaWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WlhSMGFXNW5jeTV6WlhSZmRtRnNkV1VvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JyWlhrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYY2dSMHhwWWk1V1lYSnBZVzUwS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVzltSUhZZ1BUMDlJRndpWm5WdVkzUnBiMjVjSWlBL0lIWW9jMlYwZEdsdVozTXVaMlYwWDNaaGJIVmxLR3RsZVNrdVpHVmxjRlZ1Y0dGamF5Z3BLU0E2SUhZc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJRjBzWEc0Z0lDQWdJQ0FnSUYwcExGeHVJQ0FnSUNsY2JuMWNiaUlzSUNKcGJYQnZjblFnZEhsd1pTQkhUMkpxWldOMElHWnliMjBnWENKbmFUb3ZMMGRQWW1wbFkzUmNJbHh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYTJWaVlXSnBabmtvYzNSeU9pQnpkSEpwYm1jcElIdGNiaUFnSUNCeVpYUjFjbTRnYzNSeVhHNGdJQ0FnSUNBZ0lDNXlaWEJzWVdObEtDOG9XMkV0ZWwwcEtGdEJMVnBkS1M5bkxDQmNJaVF4TFNReVhDSXBYRzRnSUNBZ0lDQWdJQzV5WlhCc1lXTmxRV3hzS0Z3aVgxd2lMQ0JjSWkxY0lpbGNiaUFnSUNBZ0lDQWdMblJ2VEc5M1pYSkRZWE5sS0NsY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE51WVd0bGFXWjVLSE4wY2pvZ2MzUnlhVzVuS1NCN1hHNGdJQ0FnY21WMGRYSnVJSE4wY2x4dUlDQWdJQ0FnSUNBdWNtVndiR0ZqWlNndktGdGhMWHBkS1NoYlFTMWFYU2t2Wnl3Z1hDSWtNUzBrTWx3aUtWeHVJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpVRnNiQ2hjSWkxY0lpd2dYQ0pmWENJcFhHNGdJQ0FnSUNBZ0lDNTBiMHh2ZDJWeVEyRnpaU2dwWEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpZVzFsYkdsbWVTaHpkSEk2SUhOMGNtbHVaeWtnZTF4dUlDQWdJSEpsZEhWeWJpQnpkSEl1Y21Wd2JHRmpaU2d2V3kxZlhTZ3VLUzluTENBb1h5d2dZMmhoY2lrZ1BUNGdZMmhoY2k1MGIxVndjR1Z5UTJGelpTZ3BLVnh1ZlZ4dVhHNWxlSEJ2Y25RZ2RIbHdaU0JRWVhOallXeHBabms4VXo0Z1BTQlRJR1Y0ZEdWdVpITWdZQ1I3YVc1bVpYSWdTR1ZoWkgwa2Uxd2lMVndpSUh3Z1hDSmZYQ0o5Skh0cGJtWmxjaUJVWVdsc2ZXQmNiaUFnSUNBL0lHQWtlME5oY0dsMFlXeHBlbVU4U0dWaFpENTlKSHRRWVhOallXeHBabms4VkdGcGJENTlZRnh1SUNBZ0lEb2dVeUJsZUhSbGJtUnpJSE4wY21sdVoxeHVJQ0FnSUNBZ1B5QkRZWEJwZEdGc2FYcGxQRk0rWEc0Z0lDQWdJQ0E2SUc1bGRtVnlYRzVjYm1WNGNHOXlkQ0IwZVhCbElGaHRiRTV2WkdVZ1BTQjdYRzRnSUNBZ2JtRnRaVG9nYzNSeWFXNW5YRzRnSUNBZ1lYUjBjbWxpZFhSbGN6ODZJRkpsWTI5eVpEeHpkSEpwYm1jc0lITjBjbWx1Wno1Y2JpQWdJQ0JqYUdsc1pISmxiajg2SUVGeWNtRjVQRmh0YkU1dlpHVStYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCNGJXd29leUJ1WVcxbExDQmhkSFJ5YVdKMWRHVnpMQ0JqYUdsc1pISmxiaUI5T2lCWWJXeE9iMlJsS1NCN1hHNGdJQ0FnYkdWMElHSjFhV3hrWlhJZ1BTQmdQQ1I3Ym1GdFpYMWdYRzVjYmlBZ0lDQmpiMjV6ZENCaGRIUnljeUE5SUU5aWFtVmpkQzVsYm5SeWFXVnpLR0YwZEhKcFluVjBaWE1nUHo4Z1cxMHBYRzVjYmlBZ0lDQnBaaUFvWVhSMGNuTXViR1Z1WjNSb0lENGdNQ2tnZTF4dUlDQWdJQ0FnSUNCbWIzSWdLR052Ym5OMElGdHJaWGtzSUhaaGJIVmxYU0J2WmlCaGRIUnljeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZblZwYkdSbGNpQXJQU0JnSUNSN2EyVjVmVDFjSWlSN2RtRnNkV1Y5WENKZ1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9ZMmhwYkdSeVpXNGdKaVlnWTJocGJHUnlaVzR1YkdWdVozUm9JRDRnTUNrZ2UxeHVJQ0FnSUNBZ0lDQmlkV2xzWkdWeUlDczlJRndpUGx3aVhHNGdJQ0FnSUNBZ0lHWnZjaUFvWTI5dWMzUWdibTlrWlNCdlppQmphR2xzWkhKbGJpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1luVnBiR1JsY2lBclBTQjRiV3dvYm05a1pTbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JpZFdsc1pHVnlJQ3M5SUdBOEx5UjdibUZ0WlgwK1lGeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUdKMWFXeGtaWElnS3owZ1hDSWdMejVjSWx4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQmlkV2xzWkdWeVhHNTlYRzVjYmk4dklFSnBibVJwYm1keklIZHZjbXNnYjNabGNpQndjbTl3WlhKMGFXVnpJR2x1SUd0bFltRmlMV05oYzJVZ1ltVmpZWFZ6WlNCMGFHRjBjeUIwYUdVZ1kyOXVkbVZ1ZEdsdmJpQnZaaUJuYjJKcVpXTjBYRzR2THlCb2IzZGxkbVZ5SUdsdUlHcHpJR2wwY3lCbGFYUm9aWElnYzI1aGEyVmZZMkZ6WlNCdmNpQmpZVzFsYkVOaGMyVmNiaTh2SUdGc2MyOGdiMjRnUkVKMWN5QnBiblJsY21aaFkyVnpJR2wwY3lCUVlYTmpZV3hEWVhObElHSjVJR052Ym5abGJuUnBiMjVjYmk4dklITnZJR0Z6SUdFZ2QyOXlhMkZ5YjNWdVpDQjNaU0IxYzJVZ1oyVjBYM0J5YjNCbGNuUjVYMjVoYldVZ1lXNWtJRzl1YkhrZ2RYTmxJSFJvWlNCd2NtOXdaWEowZVNCbWFXVnNaQ0JoY3lCaElHWmhiR3hpWVdOclhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1pHVm1hVzVsVUhKdmNHVnlkSGxIWlhSMFpYSThWQ0JsZUhSbGJtUnpJRzlpYW1WamRENG9iMkpxWldOME9pQlVMQ0J3Y205d09pQkZlSFJ5WVdOMFBHdGxlVzltSUZRc0lITjBjbWx1Wno0cElIdGNiaUFnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29iMkpxWldOMExDQmdaMlYwWHlSN2EyVmlZV0pwWm5rb2NISnZjQ2t1Y21Wd2JHRmpaVUZzYkNoY0lpMWNJaXdnWENKZlhDSXBmV0FzSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVabWxuZFhKaFlteGxPaUJtWVd4elpTeGNiaUFnSUNBZ0lDQWdaVzUxYldWeVlXSnNaVG9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdkbUZzZFdVNklDZ3BJRDArSUc5aWFtVmpkRnR3Y205d1hTeGNiaUFnSUNCOUtWeHVmVnh1WEc0dkx5QmhkSFJsYlhCMElITmxkSFJwYm1jZ1lTQndjbTl3WlhKMGVTQnZaaUJIVDJKcVpXTjBMazlpYW1WamRGeHVaWGh3YjNKMElHWjFibU4wYVc5dUlITmxkQ2h2WW1vNklFZFBZbXBsWTNRdVQySnFaV04wTENCd2NtOXdPaUJ6ZEhKcGJtY3NJSFpoYkhWbE9pQmhibmtwSUh0Y2JpQWdJQ0JqYjI1emRDQnJaWGtnUFNCemJtRnJaV2xtZVNod2NtOXdLVnh1SUNBZ0lHTnZibk4wSUdkbGRIUmxjaUE5SUdCblpYUmZKSHRyWlhsOVlDQmhjeUJyWlhsdlppQjBlWEJsYjJZZ2IySnFYRzRnSUNBZ1kyOXVjM1FnYzJWMGRHVnlJRDBnWUhObGRGOGtlMnRsZVgxZ0lHRnpJR3RsZVc5bUlIUjVjR1Z2WmlCdlltcGNibHh1SUNBZ0lHeGxkQ0JqZFhKeVpXNTBPaUIxYm10dWIzZHVYRzVjYmlBZ0lDQnBaaUFvWjJWMGRHVnlJR2x1SUc5aWFpQW1KaUIwZVhCbGIyWWdiMkpxVzJkbGRIUmxjbDBnUFQwOUlGd2lablZ1WTNScGIyNWNJaWtnZTF4dUlDQWdJQ0FnSUNCamRYSnlaVzUwSUQwZ0tHOWlhbHRuWlhSMFpYSmRJR0Z6SUNncElEMCtJSFZ1YTI1dmQyNHBLQ2xjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQmpkWEp5Wlc1MElEMGdiMkpxVzNCeWIzQWdZWE1nYTJWNWIyWWdkSGx3Wlc5bUlHOWlhbDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWTNWeWNtVnVkQ0FoUFQwZ2RtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSE5sZEhSbGNpQnBiaUJ2WW1vZ0ppWWdkSGx3Wlc5bUlHOWlhbHR6WlhSMFpYSmRJRDA5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lEc29iMkpxVzNObGRIUmxjbDBnWVhNZ0tIWTZJR0Z1ZVNrZ1BUNGdkbTlwWkNrb2RtRnNkV1VwWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVlYTnphV2R1S0c5aWFpd2dleUJiY0hKdmNGMDZJSFpoYkhWbElIMHBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc0aUxDQWlhVzF3YjNKMElIUjVjR1VnUjA5aWFtVmpkQ0JtY205dElGd2laMms2THk5SFQySnFaV04wWENKY2JtbHRjRzl5ZENCN0lIUjVjR1VnUVdOalpYTnpiM0lnZlNCbWNtOXRJRndpTGk5emRHRjBaUzVxYzF3aVhHNWNiblI1Y0dVZ1IwOWlhaUE5SUVkUFltcGxZM1F1VDJKcVpXTjBYRzVsZUhCdmNuUWdkSGx3WlNCRFF6eFVJR1Y0ZEdWdVpITWdSMDlpYWlBOUlFZFBZbW8rSUQwZ2V5QnVaWGNnS0hCeWIzQnpPaUJoYm5rcE9pQlVJSDFjYm1WNGNHOXlkQ0IwZVhCbElFWkRQRlFnWlhoMFpXNWtjeUJIVDJKcUlEMGdSMDlpYWo0Z1BTQW9jSEp2Y0hNNklHRnVlU2tnUFQ0Z1ZGeHVYRzUwZVhCbElFTnpjMU5sZEhSbGNpQTlJQ2h2WW1wbFkzUTZJRWRQWW1vc0lHTnpjem9nYzNSeWFXNW5JSHdnUVdOalpYTnpiM0k4YzNSeWFXNW5QaWtnUFQ0Z2RtOXBaRnh1ZEhsd1pTQkRhR2xzWkVadUlEMGdLSEJoY21WdWREb2dSMDlpYWl3Z1kyaHBiR1E2SUVkUFltb2dmQ0J1ZFcxaVpYSWdmQ0J6ZEhKcGJtY3NJR2x1WkdWNFB6b2diblZ0WW1WeUtTQTlQaUIyYjJsa1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpiMjVtYVdkMVpTaGpiMjVtT2lCUVlYSjBhV0ZzUEVwemVFVnVkajRwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdUMkpxWldOMExtRnpjMmxuYmlobGJuWXNJR052Ym1ZcFhHNTlYRzVjYm5SNWNHVWdTbk40Ulc1MklEMGdlMXh1SUNBZ0lHbHVkSEpwYm5OcFkwVnNaVzFsYm5Sek9pQlNaV052Y21ROGMzUnlhVzVuTENCRFF5QjhJRVpEUGx4dUlDQWdJR0ZrWkVOb2FXeGtPaUJEYUdsc1pFWnVYRzRnSUNBZ2MyVjBRM056T2lCRGMzTlRaWFIwWlhKY2JpQWdJQ0J6WlhSRGJHRnpjem9nUTNOelUyVjBkR1Z5WEc0Z0lDQWdhVzVwZEZCeWIzQnpPaUFvY0hKdmNITTZJR0Z1ZVNrZ1BUNGdkbTlwWkZ4dUlDQWdJR1JsWm1GMWJIUkRiR1ZoYm5Wd09pQW9iMkpxWldOME9pQkhUMkpxS1NBOVBpQjJiMmxrWEc1OVhHNWNibVoxYm1OMGFXOXVJRzFwYzNOcGJtZEpiWEJzS0NrZ2UxeHVJQ0FnSUhSb2NtOTNJRVZ5Y205eUtGd2liV2x6YzJsdVp5QnBiWEJzWENJcFhHNTlYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQmxiblk2SUVwemVFVnVkaUE5SUh0Y2JpQWdJQ0JwYm5SeWFXNXphV05GYkdWdFpXNTBjem9nZTMwc1hHNGdJQ0FnWVdSa1EyaHBiR1E2SUcxcGMzTnBibWRKYlhCc0xGeHVJQ0FnSUhObGRFTnpjem9nYldsemMybHVaMGx0Y0d3c1hHNGdJQ0FnYzJWMFEyeGhjM002SUcxcGMzTnBibWRKYlhCc0xGeHVJQ0FnSUdsdWFYUlFjbTl3Y3pvZ0tDa2dQVDRnZG05cFpDQXdMRnh1SUNBZ0lHUmxabUYxYkhSRGJHVmhiblZ3T2lBb0tTQTlQaUIyYjJsa0lEQXNYRzU5WEc0aUxDQWlaWGh3YjNKMElHTnNZWE56SUZOamIzQmxJSHRjYmlBZ0lDQnpkR0YwYVdNZ1kzVnljbVZ1ZEQ4NklGTmpiM0JsSUh3Z2JuVnNiRnh1WEc0Z0lDQWdjR0Z5Wlc1MFB6b2dVMk52Y0dVZ2ZDQnVkV3hzWEc0Z0lDQWdZMjl1ZEdWNGRITWdQU0J1WlhjZ1RXRndQRU52Ym5SbGVIUXNJSFZ1YTI1dmQyNCtLQ2xjYmx4dUlDQWdJSEJ5YVhaaGRHVWdZMnhsWVc1MWNITWdQU0J1WlhjZ1UyVjBQQ2dwSUQwK0lIWnZhV1ErS0NsY2JpQWdJQ0J3Y21sMllYUmxJRzF2ZFc1MGN5QTlJRzVsZHlCVFpYUThLQ2tnUFQ0Z2RtOXBaRDRvS1Z4dUlDQWdJSEJ5YVhaaGRHVWdiVzkxYm5SbFpDQTlJR1poYkhObFhHNWNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaHdZWEpsYm5RL09pQlRZMjl3WlNCOElHNTFiR3dwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV3WVhKbGJuUWdQU0J3WVhKbGJuUmNiaUFnSUNCOVhHNWNiaUFnSUNCdmJrTnNaV0Z1ZFhBb1kyRnNiR0poWTJzNklDZ3BJRDArSUhadmFXUXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiR1ZoYm5Wd2N6OHVZV1JrS0dOaGJHeGlZV05yS1Z4dUlDQWdJSDFjYmx4dUlDQWdJRzl1VFc5MWJuUW9ZMkZzYkdKaFkyczZJQ2dwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWNHRnlaVzUwSUNZbUlDRjBhR2x6TG5CaGNtVnVkQzV0YjNWdWRHVmtLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CaGNtVnVkQzV2YmsxdmRXNTBLR05oYkd4aVlXTnJLVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0YjNWdWRITXVZV1JrS0dOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY25WdVBGUStLR1p1T2lBb0tTQTlQaUJVS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhCeVpYWWdQU0JUWTI5d1pTNWpkWEp5Wlc1MFhHNGdJQ0FnSUNBZ0lGTmpiM0JsTG1OMWNuSmxiblFnUFNCMGFHbHpYRzVjYmlBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJtYmlncFhHNGdJQ0FnSUNBZ0lIMGdabWx1WVd4c2VTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2ZFc1MGN5NW1iM0pGWVdOb0tDaGpZaWtnUFQ0Z1kySW9LU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5MWJuUnpMbU5zWldGeUtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzkxYm5SbFpDQTlJSFJ5ZFdWY2JpQWdJQ0FnSUNBZ0lDQWdJRk5qYjNCbExtTjFjbkpsYm5RZ1BTQndjbVYyWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JrYVhOd2IzTmxLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbU5zWldGdWRYQnpMbVp2Y2tWaFkyZ29LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbU5zWldGdWRYQnpMbU5zWldGeUtDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1amIyNTBaWGgwY3k1amJHVmhjaWdwWEc0Z0lDQWdJQ0FnSUdSbGJHVjBaU0IwYUdsekxuQmhjbVZ1ZEZ4dUlDQWdJSDFjYm4xY2JseHVaWGh3YjNKMElIUjVjR1VnUTI5dWRHVjRkRHhVSUQwZ1lXNTVQaUE5SUh0Y2JpQWdJQ0IxYzJVb0tUb2dWRnh1SUNBZ0lIQnliM1pwWkdVOFVqNG9kbUZzZFdVNklGUXNJR1p1T2lBb0tTQTlQaUJTS1RvZ1VseHVJQ0FnSUNod2NtOXdjem9nZXlCMllXeDFaVG9nVkRzZ1kyaHBiR1J5Wlc0NklDZ3BJRDArSUVwVFdDNUZiR1Z0Wlc1MElIMHBPaUJLVTFndVJXeGxiV1Z1ZEZ4dWZWeHVYRzR2S2lwY2JpQXFJRVY0WVcxd2JHVWdWWE5oWjJVNlhHNGdLaUJnWUdCMGMzaGNiaUFxSUdOdmJuTjBJRTE1UTI5dWRHVjRkQ0E5SUdOeVpXRjBaVU52Ym5SbGVIUW9YQ0ptWVd4c1ltRmpheTEyWVd4MVpWd2lLVnh1SUNwY2JpQXFJR1oxYm1OMGFXOXVJRU52Ym5OMWJXVnlRMjl0Y0c5dVpXNTBLQ2tnZTF4dUlDb2dJQ0JqYjI1emRDQjJZV3gxWlNBOUlFMTVRMjl1ZEdWNGRDNTFjMlVvS1Z4dUlDcGNiaUFxSUNBZ2NtVjBkWEp1SUR4SGRHc3VUR0ZpWld3Z2JHRmlaV3c5ZTNaaGJIVmxmU0F2UGx4dUlDb2dmVnh1SUNwY2JpQXFJR1oxYm1OMGFXOXVJRkJ5YjNacFpHVnlRMjl0Y0c5dVpXNTBLQ2tnZTF4dUlDb2dJQ0J5WlhSMWNtNGdLRnh1SUNvZ0lDQWdJRHhIZEdzdVFtOTRQbHh1SUNvZ0lDQWdJQ0FnUEUxNVEyOXVkR1Y0ZENCMllXeDFaVDFjSW0xNUxYWmhiSFZsWENJK1hHNGdLaUFnSUNBZ0lDQWdJSHNvS1NBOVBpQThRMjl1YzNWdFpYSkRiMjF3YjI1bGJuUWdMejU5WEc0Z0tpQWdJQ0FnSUNBOEwwMTVRMjl1ZEdWNGRENWNiaUFxSUNBZ0lDQThMMGQwYXk1Q2IzZytYRzRnS2lBZ0lDbGNiaUFxSUgxY2JpQXFJR0JnWUZ4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZM0psWVhSbFEyOXVkR1Y0ZER4VVBpaGtaV1poZFd4MFZtRnNkV1U2SUZRcE9pQkRiMjUwWlhoMFBGUStJSHRjYmlBZ0lDQnNaWFFnWTNSNE9pQkRiMjUwWlhoMFBGUStYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQndjbTkyYVdSbFBGSStLSFpoYkhWbE9pQlVMQ0JtYmpvZ0tDa2dQVDRnVWlrNklGSWdlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnpZMjl3WlNBOUlHZGxkRk5qYjNCbEtDbGNiaUFnSUNBZ0lDQWdjMk52Y0dVdVkyOXVkR1Y0ZEhNdWMyVjBLR04wZUN3Z2RtRnNkV1VwWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6WTI5d1pTNXlkVzRvWm00cFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWm5WdVkzUnBiMjRnZFhObEtDazZJRlFnZTF4dUlDQWdJQ0FnSUNCc1pYUWdjMk52Y0dVZ1BTQlRZMjl3WlM1amRYSnlaVzUwWEc0Z0lDQWdJQ0FnSUhkb2FXeGxJQ2h6WTI5d1pTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZG1Gc2RXVWdQU0J6WTI5d1pTNWpiMjUwWlhoMGN5NW5aWFFvWTNSNEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIWmhiSFZsSUNFOVBTQjFibVJsWm1sdVpXUXBJSEpsZEhWeWJpQjJZV3gxWlNCaGN5QlVYRzRnSUNBZ0lDQWdJQ0FnSUNCelkyOXdaU0E5SUhOamIzQmxMbkJoY21WdWRGeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmtaV1poZFd4MFZtRnNkV1ZjYmlBZ0lDQjlYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQmpiMjUwWlhoMEtIc2dkbUZzZFdVc0lHTm9hV3hrY21WdUlIMDZJSHNnZG1Gc2RXVTZJRlE3SUdOb2FXeGtjbVZ1T2lBb0tTQTlQaUJLVTFndVJXeGxiV1Z1ZENCOUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQndjbTkyYVdSbEtIWmhiSFZsTENCamFHbHNaSEpsYmlsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdLR04wZUNBOUlFOWlhbVZqZEM1aGMzTnBaMjRvWTI5dWRHVjRkQ3dnZTF4dUlDQWdJQ0FnSUNCd2NtOTJhV1JsTEZ4dUlDQWdJQ0FnSUNCMWMyVXNYRzRnSUNBZ2ZTa3BYRzU5WEc1Y2JpOHFLbHh1SUNvZ1IyVjBjeUIwYUdVZ2MyTnZjR1VnZEdoaGRDQnZkMjV6SUhSb1pTQmpkWEp5Wlc1MGJIa2djblZ1Ym1sdVp5QmpiMlJsTGx4dUlDcGNiaUFxSUVWNFlXMXdiR1U2WEc0Z0tpQmdZR0IwYzF4dUlDb2dZMjl1YzNRZ2MyTnZjR1VnUFNCblpYUlRZMjl3WlNncFhHNGdLaUJ6WlhSVWFXMWxiM1YwS0NncElEMCtJSHRjYmlBcUlDQWdMeThnVkdocGN5QmpZV3hzWW1GamF5Qm5aWFJ6SUhKMWJpQjNhWFJvYjNWMElHRnVJRzkzYm1WeUlITmpiM0JsTGx4dUlDb2dJQ0F2THlCU1pYTjBiM0psSUc5M2JtVnlJSFpwWVNCelkyOXdaUzV5ZFc0NlhHNGdLaUFnSUhOamIzQmxMbkoxYmlnb0tTQTlQaUI3WEc0Z0tpQWdJQ0FnWTI5dWMzUWdabTl2SUQwZ1JtOXZRMjl1ZEdWNGRDNTFjMlVvS1Z4dUlDb2dJQ0FnSUc5dVEyeGxZVzUxY0Nnb0tTQTlQaUI3WEc0Z0tpQWdJQ0FnSUNCd2NtbHVkQ2hjSW5OdmJXVWdZMnhsWVc1MWNGd2lLVnh1SUNvZ0lDQWdJSDBwWEc0Z0tpQWdJSDBwWEc0Z0tpQjlMQ0F4TURBd0tWeHVJQ29nWUdCZ1hHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJuWlhSVFkyOXdaU2dwT2lCVFkyOXdaU0I3WEc0Z0lDQWdZMjl1YzNRZ2MyTnZjR1VnUFNCVFkyOXdaUzVqZFhKeVpXNTBYRzRnSUNBZ2FXWWdLQ0Z6WTI5d1pTa2dlMXh1SUNBZ0lDQWdJQ0IwYUhKdmR5QkZjbkp2Y2loY0ltTmhibTV2ZENCblpYUWdjMk52Y0dVNklHOTFkQ0J2WmlCMGNtRmphMmx1WnlCamIyNTBaWGgwWENJcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJSE5qYjNCbFhHNTlYRzVjYmk4cUtseHVJQ29nUVhSMFlXTm9JR0VnWTJ4bFlXNTFjQ0JqWVd4c1ltRmpheUIwYnlCMGFHVWdZM1Z5Y21WdWRDQjdRR3hwYm1zZ1UyTnZjR1Y5TGx4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdiMjVEYkdWaGJuVndLR05zWldGdWRYQTZJQ2dwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0JwWmlBb0lWTmpiM0JsTG1OMWNuSmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWhGY25KdmNpaGNJbTkxZENCdlppQjBjbUZqYTJsdVp5QmpiMjUwWlhoME9pQjNhV3hzSUc1dmRDQmlaU0JoWW14bElIUnZJR05zWldGdWRYQmNJaWtwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdVMk52Y0dVdVkzVnljbVZ1ZEQ4dWIyNURiR1ZoYm5Wd0tHTnNaV0Z1ZFhBcFhHNTlYRzVjYmk4cUtseHVJQ29nUVhSMFlXTm9JR0VnWTJGc2JHSmhZMnNnZEc4Z2NuVnVJSGRvWlc0Z2RHaGxJR04xY25KbGJuUnNlU0J5ZFc1dWFXNW5JSHRBYkdsdWF5QlRZMjl3WlgwZ2NtVjBkWEp1Y3k1Y2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJRzl1VFc5MWJuUW9ZMnhsWVc1MWNEb2dLQ2tnUFQ0Z2RtOXBaQ2tnZTF4dUlDQWdJR2xtSUNnaFUyTnZjR1V1WTNWeWNtVnVkQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLRVZ5Y205eUtGd2lZMkZ1Ym05MElHRjBkR0ZqYUNCdmJrMXZkVzUwT2lCdmRYUWdiMllnZEhKaFkydHBibWNnWTI5dWRHVjRkRndpS1NsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JUWTI5d1pTNWpkWEp5Wlc1MFB5NXZiazF2ZFc1MEtHTnNaV0Z1ZFhBcFhHNTlYRzVjYmk4cUtseHVJQ29nUTNKbFlYUmxjeUJoSUhKdmIzUWdlMEJzYVc1cklGTmpiM0JsZlNCMGFHRjBJSGRvWlc0Z1pHbHpjRzl6WldRZ2QybHNiQ0J5WlcxdmRtVmNiaUFxSUdGdWVTQmphR2xzWkNCemFXZHVZV3dnYUdGdVpHeGxjaUJ2Y2lCemRHRjBaU0J6ZFdKelkzSnBZbVZ5TGx4dUlDcGNiaUFxSUVWNFlXMXdiR1U2WEc0Z0tpQmdZR0IwYzNoY2JpQXFJR055WldGMFpWSnZiM1FvS0dScGMzQnZjMlVwSUQwK0lIdGNiaUFxSUNBZ2JHVjBJSEp2YjNRNklFZDBheTVYYVc1a2IzZGNiaUFxWEc0Z0tpQWdJR052Ym5OMElGdHpkR0YwWlYwZ1BTQmpjbVZoZEdWVGRHRjBaU2hjSW5aaGJIVmxYQ0lwWEc0Z0tseHVJQ29nSUNCamIyNXpkQ0J5WlcxdmRtVWdQU0FvS1NBOVBpQjdYRzRnS2lBZ0lDQWdjbTl2ZEM1a1pYTjBjbTk1S0NsY2JpQXFJQ0FnSUNCa2FYTndiM05sS0NsY2JpQXFJQ0FnZlZ4dUlDcGNiaUFxSUNBZ2NtVjBkWEp1SUNoY2JpQXFJQ0FnSUNBOFIzUnJMbGRwYm1SdmR5QWtQWHNvYzJWc1ppa2dQVDRnS0hKdmIzUWdQU0J6Wld4bUtYMCtYRzRnS2lBZ0lDQWdJQ0E4UjNSckxrSnZlRDVjYmlBcUlDQWdJQ0FnSUNBZ1BFZDBheTVNWVdKbGJDQnNZV0psYkQxN2MzUmhkR1Y5SUM4K1hHNGdLaUFnSUNBZ0lDQWdJRHhIZEdzdVFuVjBkRzl1SUNSamJHbGphMlZrUFh0eVpXMXZkbVY5SUM4K1hHNGdLaUFnSUNBZ0lDQThMMGQwYXk1Q2IzZytYRzRnS2lBZ0lDQWdQQzlIZEdzdVYybHVaRzkzUGx4dUlDb2dJQ0FwWEc0Z0tpQjlLVnh1SUNvZ1lHQmdYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZTYjI5MFBGUStLR1p1T2lBb1pHbHpjRzl6WlRvZ0tDa2dQVDRnZG05cFpDa2dQVDRnVkNrZ2UxeHVJQ0FnSUdOdmJuTjBJSE5qYjNCbElEMGdibVYzSUZOamIzQmxLRzUxYkd3cFhHNGdJQ0FnY21WMGRYSnVJSE5qYjNCbExuSjFiaWdvS1NBOVBpQm1iaWdvS1NBOVBpQnpZMjl3WlM1a2FYTndiM05sS0NrcEtWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCSFQySnFaV04wSUdaeWIyMGdYQ0puYVRvdkwwZFBZbXBsWTNSY0lseHVhVzF3YjNKMElIc2djbVZuYVhOMFpYSkVaWE4wY205NVlXSnNaVlI1Y0dVZ2ZTQm1jbTl0SUZ3aUxpNHZaMjV2YldVdmMybG5ibUZzVkhKaFkydGxjaTVxYzF3aVhHNWNiaTh2SUZSUFJFODZJRVp5WVdkdFpXNTBJSE5vYjNWc1pDQnBiWEJzWlcxbGJuUWdSMmx2TGt4cGMzUk5iMlJsYkZ4dVhHNWxlSEJ2Y25RZ1kyeGhjM01nUm5KaFoyMWxiblE4VkNBOUlHRnVlVDRnWlhoMFpXNWtjeUJIVDJKcVpXTjBMazlpYW1WamRDQjdYRzRnSUNBZ2MzUmhkR2xqSUZ0SFQySnFaV04wTG5OcFoyNWhiSE5kSUQwZ2UxeHVJQ0FnSUNBZ0lDQmNJbVJsYzNSeWIzbGNJam9nZTMwc1hHNWNiaUFnSUNBZ0lDQWdYQ0pqYUdsc1pDMWhaR1JsWkZ3aU9pQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lYSmhiVjkwZVhCbGN6b2dXMGRQWW1wbFkzUXVWRmxRUlY5UFFrcEZRMVFzSUVkUFltcGxZM1F1VkZsUVJWOVZTVTVVWFN4Y2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdYQ0pqYUdsc1pDMXlaVzF2ZG1Wa1hDSTZJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhjbUZ0WDNSNWNHVnpPaUJiUjA5aWFtVmpkQzVVV1ZCRlgwOUNTa1ZEVkN3Z1IwOWlhbVZqZEM1VVdWQkZYMVZKVGxSZExGeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWFJwWXlCYlIwOWlhbVZqZEM1d2NtOXdaWEowYVdWelhTQTlJSHRjYmlBZ0lDQWdJQ0FnWTJocGJHUnlaVzQ2SUVkUFltcGxZM1F1VUdGeVlXMVRjR1ZqTG1wemIySnFaV04wS0Z3aVkyaHBiR1J5Wlc1Y0lpd2dYQ0pjSWl3Z1hDSmNJaXdnUjA5aWFtVmpkQzVRWVhKaGJVWnNZV2R6TGxKRlFVUkJRa3hGS1N4Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdlMXh1SUNBZ0lDQWdJQ0JIVDJKcVpXTjBMbkpsWjJsemRHVnlRMnhoYzNNb2RHaHBjeWxjYmlBZ0lDQWdJQ0FnY21WbmFYTjBaWEpFWlhOMGNtOTVZV0pzWlZSNWNHVW9kR2hwY3lsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdibVYzUEZRK0tHTm9hV3hrY21WdU9pQkJjbkpoZVR4VVBpQTlJRnRkS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dSbkpoWjIxbGJuUW9leUJqYUdsc1pISmxiaUI5S1Z4dUlDQWdJSDFjYmx4dUlDQWdJSEJ5YVhaaGRHVWdZMjl1Ym1WamRHbHZia2xrY3lBOUlHNWxkeUJUWlhROGJuVnRZbVZ5UGlncFhHNGdJQ0FnY0hKcGRtRjBaU0JmWTJocGJHUnlaVzQ2SUVGeWNtRjVQRlErWEc1Y2JpQWdJQ0JuWlhRZ1kyaHBiR1J5Wlc0b0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmJMaTR1ZEdocGN5NWZZMmhwYkdSeVpXNWRYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1lXUmtRMmhwYkdRb1kyaHBiR1E2SUZRc0lHbHVaR1Y0T2lCdWRXMWlaWElnUFNBdE1TazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWTJocGJHUWdhVzV6ZEdGdVkyVnZaaUJHY21GbmJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ1JYSnliM0lvWUc1bGMzUnBibWNnUm5KaFoyMWxiblJ6SUdGeVpTQnViM1FnZVdWMElITjFjSEJ2Y25SbFpHQXBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9hVzVrWlhnZ1BpQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5amFHbHNaSEpsYmlBOUlGdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVMaTUwYUdsekxsOWphR2xzWkhKbGJpNXpiR2xqWlNnd0xDQnBibVJsZUNrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1FzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGk0dWRHaHBjeTVmWTJocGJHUnlaVzR1YzJ4cFkyVW9hVzVrWlhncExGeHVJQ0FnSUNBZ0lDQWdJQ0FnWFZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZlkyaHBiR1J5Wlc0dWNIVnphQ2hqYUdsc1pDbGNiaUFnSUNBZ0lDQWdJQ0FnSUdsdVpHVjRJRDBnZEdocGN5NWZZMmhwYkdSeVpXNHViR1Z1WjNSb0lDMGdNVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYldsMEtGd2lZMmhwYkdRdFlXUmtaV1JjSWl3Z1kyaHBiR1FzSUdsdVpHVjRLVnh1SUNBZ0lDQWdJQ0IwYUdsekxtNXZkR2xtZVNoY0ltTm9hV3hrY21WdVhDSXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FHRnpRMmhwYkdRb1kyaHBiR1E2SUZRcE9pQmliMjlzWldGdUlIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJOb2FXeGtjbVZ1TG1acGJtUkpibVJsZUNnb1kyZ3BJRDArSUdOb0lEMDlQU0JqYUdsc1pDa2dQaUF0TVZ4dUlDQWdJSDFjYmx4dUlDQWdJSEpsYlc5MlpVTm9hV3hrS0dOb2FXeGtPaUJVS1RvZ2RtOXBaQ0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR2x1WkdWNElEMGdkR2hwY3k1ZlkyaHBiR1J5Wlc0dVptbHVaRWx1WkdWNEtDaHBLU0E5UGlCcElEMDlQU0JqYUdsc1pDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZlkyaHBiR1J5Wlc0dWMzQnNhV05sS0dsdVpHVjRMQ0F4S1Z4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WlcxcGRDaGNJbU5vYVd4a0xYSmxiVzkyWldSY0lpd2dZMmhwYkdRc0lHbHVaR1Y0S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVTaGNJbU5vYVd4a2NtVnVYQ0lwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvZXlCamFHbHNaSEpsYmlBOUlGdGRJSDA2SUZCaGNuUnBZV3c4ZXlCamFHbHNaSEpsYmpvZ1FYSnlZWGs4VkQ0Z2ZDQlVJSDArSUQwZ2UzMHBJSHRjYmlBZ0lDQWdJQ0FnYzNWd1pYSW9LVnh1SUNBZ0lDQWdJQ0IwYUdsekxsOWphR2xzWkhKbGJpQTlJRUZ5Y21GNUxtbHpRWEp5WVhrb1kyaHBiR1J5Wlc0cElEOGdZMmhwYkdSeVpXNGdPaUJiWTJocGJHUnlaVzVkWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1Ym1WamRDaHphV2R1WVd3NklITjBjbWx1Wnl3Z1kyRnNiR0poWTJzNklDaGZPaUIwYUdsekxDQXVMaTVoY21kek9pQmhibmxiWFNrZ1BUNGdkbTlwWkNrNklHNTFiV0psY2lCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdsa0lEMGdjM1Z3WlhJdVkyOXVibVZqZENoemFXZHVZV3dzSUdOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbU52Ym01bFkzUnBiMjVKWkhNdVlXUmtLR2xrS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYVdSY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JrYVhOamIyNXVaV04wS0dsa09pQnVkVzFpWlhJcE9pQjJiMmxrSUh0Y2JpQWdJQ0FnSUNBZ2MzVndaWEl1WkdselkyOXVibVZqZENocFpDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1amIyNXVaV04wYVc5dVNXUnpMbVJsYkdWMFpTaHBaQ2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQmtaWE4wY205NUtDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtVnRhWFFvWENKa1pYTjBjbTk1WENJcFhHNGdJQ0FnSUNBZ0lHWnZjaUFvWTI5dWMzUWdhV1FnYjJZZ2RHaHBjeTVqYjI1dVpXTjBhVzl1U1dSekxuWmhiSFZsY3lncEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRYQmxjaTVrYVhOamIyNXVaV04wS0dsa0tWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCMGVYQmxJRWRQWW1wbFkzUWdabkp2YlNCY0ltZHBPaTh2UjA5aWFtVmpkRndpWEc1Y2JuUjVjR1VnVkhsd1pTQTlJSHNnYm1WM0lDZ3VMaTVoY21kek9pQmhibmxiWFNrNklFZFBZbXBsWTNRdVQySnFaV04wSUgxY2JseHVMeThnUUhSekxXVjRjR1ZqZEMxbGNuSnZjaUJ0YVhOemFXNW5JSFI1Y0dWelhHNWpiMjV6ZENCdGIyUWdQU0JwYlhCdmNuUW9YQ0p5WlhOdmRYSmpaVG92THk5dmNtY3ZaMjV2YldVdmMyaGxiR3d2Yldsell5OXphV2R1WVd4VWNtRmphMlZ5TG1welhDSXBYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnlaV2RwYzNSbGNrUmxjM1J5YjNsaFlteGxWSGx3WlRvZ0tIUjVjR1U2SUZSNWNHVXBJRDArSUhadmFXUWdQU0JoZDJGcGRDQnRiMlJjYmlBZ0lDQXVkR2hsYmlnb2JXOWtLU0E5UGlCdGIyUXVjbVZuYVhOMFpYSkVaWE4wY205NVlXSnNaVlI1Y0dVcFhHNGdJQ0FnTG1OaGRHTm9LQ2dwSUQwK0lDZ3BJRDArSUhadmFXUWdNQ2xjYmlJc0lDSnBiWEJ2Y25RZ2V5QkdjbUZuYldWdWRDQjlJR1p5YjIwZ1hDSXVMMFp5WVdkdFpXNTBMbXB6WENKY2JtbHRjRzl5ZENCN0lFRmpZMlZ6YzI5eUxDQjBlWEJsSUZOMFlYUmxMQ0JqY21WaGRHVlRkR0YwWlNCOUlHWnliMjBnWENJdUwzTjBZWFJsTG1welhDSmNibWx0Y0c5eWRDQjdJR1Z1ZGlCOUlHWnliMjBnWENJdUwyVnVkaTVxYzF3aVhHNXBiWEJ2Y25RZ2V5Qm5aWFJUWTI5d1pTd2diMjVEYkdWaGJuVndMQ0JUWTI5d1pTQjlJR1p5YjIwZ1hDSXVMM05qYjNCbExtcHpYQ0pjYmx4dWFXNTBaWEptWVdObElFWnZjbEJ5YjNCelBFbDBaVzBzSUVWc0lHVjRkR1Z1WkhNZ1NsTllMa1ZzWlcxbGJuUXNJRXRsZVQ0Z2UxeHVJQ0FnSUdWaFkyZzZJRUZqWTJWemMyOXlQRWwwWlhKaFlteGxQRWwwWlcwK1BseHVJQ0FnSUdOb2FXeGtjbVZ1T2lBb2FYUmxiVG9nU1hSbGJTd2dhVzVrWlhnNklFRmpZMlZ6YzI5eVBHNTFiV0psY2o0cElEMCtJRVZzWEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCR2RXNWpkR2x2YmlCMGJ5QnlkVzRnWm05eUlHVmhZMmdnY21WdGIzWmxaQ0JsYkdWdFpXNTBMbHh1SUNBZ0lDQXFJRlJvWlNCa1pXWmhkV3gwSUhaaGJIVmxJR1JsY0dWdVpITWdiMjRnZEdobElHVnVkbWx5YjI1dFpXNTBPbHh1SUNBZ0lDQXFYRzRnSUNBZ0lDb2dMU0FxS2tkMGF6UXFLam9nYm5Wc2JGeHVJQ0FnSUNBcUlDMGdLaXBIZEdzektpbzZJRWQwYXk1WGFXUm5aWFF1Y0hKdmRHOTBlWEJsTG1SbGMzUnliM2xjYmlBZ0lDQWdLaUF0SUNvcVIyNXZiV1VxS2pvZ1EyeDFkSFJsY2k1QlkzUnZjaTV3Y205MGIzUjVjR1V1WkdWemRISnZlVnh1SUNBZ0lDQXFMMXh1SUNBZ0lHTnNaV0Z1ZFhBL09pQnVkV3hzSUh3Z0tDaGxiR1Z0Wlc1ME9pQkZiQ3dnYVhSbGJUb2dTWFJsYlN3Z2FXNWtaWGc2SUc1MWJXSmxjaWtnUFQ0Z2RtOXBaQ2xjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVaMWJtTjBhVzl1SUhSb1lYUWdaMlZ1WlhKaGRHVnpJSFJvWlNCclpYa2dabTl5SUdWaFkyZ2dhWFJsYlM1Y2JpQWdJQ0FnS2x4dUlDQWdJQ0FxSUVKNUlHUmxabUYxYkhRZ2FYUmxiWE1nWVhKbElHMWhjSEJsWkNCaWVUcGNiaUFnSUNBZ0tpQXRJSFpoYkhWbElHbHVJR05oYzJVZ2IyWWdjSEpwYldsMGFYWmxJSFpoYkhWbGMxeHVJQ0FnSUNBcUlDMGdjbVZtWlhKbGJtTmxJRzkwYUdWeWQybHpaVnh1SUNBZ0lDQXFMMXh1SUNBZ0lHbGtQem9nS0dsMFpXMDZJRWwwWlcwcElEMCtJRXRsZVNCOElFbDBaVzFjYm4xY2JseHVMeThnVkU5RVR6b2djM1Z3Y0c5eWRDQkhhVzh1VEdsemRFMXZaR1ZzWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCR2IzSThTWFJsYlN3Z1JXd2daWGgwWlc1a2N5QktVMWd1Uld4bGJXVnVkQ3dnUzJWNVBpaDdYRzRnSUNBZ1pXRmphQ3hjYmlBZ0lDQmphR2xzWkhKbGJqb2diV3REYUdsc1pDeGNiaUFnSUNCamJHVmhiblZ3TEZ4dUlDQWdJR2xrSUQwZ0tHbDBaVzA2SUVsMFpXMHBJRDArSUdsMFpXMHNYRzU5T2lCR2IzSlFjbTl3Y3p4SmRHVnRMQ0JGYkN3Z1MyVjVQaWs2SUVaeVlXZHRaVzUwUEVWc1BpQjdYRzRnSUNBZ2RIbHdaU0JOWVhCSmRHVnRJRDBnZXlCcGRHVnRPaUJKZEdWdE95QmphR2xzWkRvZ1JXdzdJR2x1WkdWNE9pQlRkR0YwWlR4dWRXMWlaWEkrT3lCelkyOXdaVG9nVTJOdmNHVWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ1kzVnljbVZ1ZEZOamIzQmxJRDBnWjJWMFUyTnZjR1VvS1Z4dUlDQWdJR052Ym5OMElHMWhjQ0E5SUc1bGR5Qk5ZWEE4U1hSbGJTQjhJRXRsZVN3Z1RXRndTWFJsYlQ0b0tWeHVJQ0FnSUdOdmJuTjBJR1p5WVdkdFpXNTBJRDBnYm1WM0lFWnlZV2R0Wlc1MFBFVnNQaWdwWEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJ5WlcxdmRtVW9leUJwZEdWdExDQmphR2xzWkN3Z2FXNWtaWGc2SUZ0cGJtUmxlRjBzSUhOamIzQmxJSDA2SUUxaGNFbDBaVzBwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmpiR1ZoYm5Wd0lEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnVkWEFvWTJocGJHUXNJR2wwWlcwc0lHbHVaR1Y0TG1kbGRDZ3BLVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dOc1pXRnVkWEFnSVQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGk1a1pXWmhkV3gwUTJ4bFlXNTFjQ2hqYUdsc1pDbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J6WTI5d1pTNWthWE53YjNObEtDbGNiaUFnSUNCOVhHNWNiaUFnSUNCbWRXNWpkR2x2YmlCallXeHNZbUZqYXlocGRHRnlaV0ZpYkdVNklFbDBaWEpoWW14bFBFbDBaVzArS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdsMFpXMXpJRDBnV3k0dUxtbDBZWEpsWVdKc1pWMWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXUnpJRDBnYVhSbGJYTXViV0Z3S0dsa0tWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCcFpGTmxkQ0E5SUc1bGR5QlRaWFFvYVdSektWeHVYRzRnSUNBZ0lDQWdJQzh2SUdOc1pXRnVkWEFnWTJocGJHUnlaVzRnYldsemMybHVaeUJtY205dElHRnljbHh1SUNBZ0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUZ0clpYa3NJSFpoYkhWbFhTQnZaaUJ0WVhBdVpXNTBjbWxsY3lncEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QjBhR1Z5WlNCcGN5QnVieUJuWlc1bGNtbGpJSGRoZVNCMGJ5QnBibk5sY25RZ1kyaHBiR1FnWVhRZ2FXNWtaWGhjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJSE52SUhkbElITnZjblFnWW5rZ2NtVnRiM1pwYm1jZ1pYWmxjbmtnWTJocGJHUWdZVzVrSUhKbFlYQndaVzVrYVc1bklHbHVJRzl5WkdWeVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtY21GbmJXVnVkQzV5WlcxdmRtVkRhR2xzWkNoMllXeDFaUzVqYUdsc1pDbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZwWkZObGRDNW9ZWE1vYTJWNUtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYlc5MlpTaDJZV3gxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYQXVaR1ZzWlhSbEtHdGxlU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUM4dklIVndaR0YwWlNCcGJtUmxlQ0JoYm1RZ1lXUmtJRzVsZHlCcGRHVnRjMXh1SUNBZ0lDQWdJQ0JwZEdWdGN5NXRZWEFvS0dsMFpXMHNJR2twSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR3RsZVNBOUlHbGtjMXRwWFZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0cxaGNDNW9ZWE1vYTJWNUtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZzZJRnNzSUhObGRFbHVaR1Y0WFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhwYkdRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQTlJRzFoY0M1blpYUW9hMlY1S1NGY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpYUkpibVJsZUNocEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2htY21GbmJXVnVkQzVvWVhORGFHbHNaQ2hqYUdsc1pDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLR0JrZFhCc2FXTmhkR1VnYTJWNWN5Qm1iM1Z1WkRvZ0pIdHJaWGw5WUNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1jbUZuYldWdWRDNWhaR1JEYUdsc1pDaGphR2xzWkNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElGdHBibVJsZUN3Z2MyVjBTVzVrWlhoZElEMGdZM0psWVhSbFUzUmhkR1VvYVNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J6WTI5d1pTQTlJRzVsZHlCVFkyOXdaU2hqZFhKeVpXNTBVMk52Y0dVcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWTJocGJHUWdQU0J6WTI5d1pTNXlkVzRvS0NrZ1BUNGdiV3REYUdsc1pDaHBkR1Z0TENCcGJtUmxlQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGd0xuTmxkQ2hyWlhrc0lIc2dhWFJsYlN3Z1kyaHBiR1FzSUdsdVpHVjRPaUJiYVc1a1pYZ3NJSE5sZEVsdVpHVjRYU3dnYzJOdmNHVWdmU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtY21GbmJXVnVkQzVoWkdSRGFHbHNaQ2hqYUdsc1pDbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JrYVhOd2IzTmxJRDBnWldGamFDNXpkV0p6WTNKcFltVW9LQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQmpZV3hzWW1GamF5aGxZV05vTG1kbGRDZ3BLVnh1SUNBZ0lIMHBYRzRnSUNBZ1kyRnNiR0poWTJzb1pXRmphQzVuWlhRb0tTbGNibHh1SUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHUnBjM0J2YzJVb0tWeHVYRzRnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnZG1Gc2RXVWdiMllnYldGd0xuWmhiSFZsY3lncEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXMXZkbVVvZG1Gc2RXVXBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCdFlYQXVZMnhsWVhJb0tWeHVJQ0FnSUgwcFhHNWNiaUFnSUNCeVpYUjFjbTRnWm5KaFoyMWxiblJjYm4xY2JpSXNJQ0pwYlhCdmNuUWdleUJHY21GbmJXVnVkQ0I5SUdaeWIyMGdYQ0l1TDBaeVlXZHRaVzUwTG1welhDSmNibWx0Y0c5eWRDQjdJRUZqWTJWemMyOXlJSDBnWm5KdmJTQmNJaTR2YzNSaGRHVXVhbk5jSWx4dWFXMXdiM0owSUhzZ1pXNTJJSDBnWm5KdmJTQmNJaTR2Wlc1MkxtcHpYQ0pjYm1sdGNHOXlkQ0I3SUdkbGRGTmpiM0JsTENCdmJrTnNaV0Z1ZFhBc0lGTmpiM0JsSUgwZ1puSnZiU0JjSWk0dmMyTnZjR1V1YW5OY0lseHVYRzVwYm5SbGNtWmhZMlVnVjJsMGFGQnliM0J6UEZRc0lFVWdaWGgwWlc1a2N5QktVMWd1Uld4bGJXVnVkRDRnZTF4dUlDQWdJSFpoYkhWbE9pQkJZMk5sYzNOdmNqeFVQbHh1SUNBZ0lHTm9hV3hrY21WdU9pQW9kbUZzZFdVNklGUXBJRDArSUVVZ2ZDQmNJbHdpSUh3Z1ptRnNjMlVnZkNCdWRXeHNJSHdnZFc1a1pXWnBibVZrWEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCR2RXNWpkR2x2YmlCMGJ5QnlkVzRnWm05eUlHVmhZMmdnY21WdGIzWmxaQ0JsYkdWdFpXNTBMbHh1SUNBZ0lDQXFJRlJvWlNCa1pXWmhkV3gwSUhaaGJIVmxJR1JsY0dWdVpITWdiMjRnZEdobElHVnVkbWx5YjI1dFpXNTBPbHh1SUNBZ0lDQXFYRzRnSUNBZ0lDb2dMU0FxS2tkMGF6UXFLam9nYm5Wc2JGeHVJQ0FnSUNBcUlDMGdLaXBIZEdzektpbzZJRWQwYXk1WGFXUm5aWFF1Y0hKdmRHOTBlWEJsTG1SbGMzUnliM2xjYmlBZ0lDQWdLaUF0SUNvcVIyNXZiV1VxS2pvZ1EyeDFkSFJsY2k1QlkzUnZjaTV3Y205MGIzUjVjR1V1WkdWemRISnZlVnh1SUNBZ0lDQXFMMXh1SUNBZ0lHTnNaV0Z1ZFhBL09pQnVkV3hzSUh3Z0tDaGxiR1Z0Wlc1ME9pQkZLU0E5UGlCMmIybGtLVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1YybDBhRHhVTENCRklHVjRkR1Z1WkhNZ1NsTllMa1ZzWlcxbGJuUStLSHRjYmlBZ0lDQjJZV3gxWlN4Y2JpQWdJQ0JqYUdsc1pISmxiam9nYld0RGFHbHNaQ3hjYmlBZ0lDQmpiR1ZoYm5Wd0xGeHVmVG9nVjJsMGFGQnliM0J6UEZRc0lFVStLVG9nUm5KaFoyMWxiblE4UlQ0Z2UxeHVJQ0FnSUdOdmJuTjBJR04xY25KbGJuUlRZMjl3WlNBOUlHZGxkRk5qYjNCbEtDbGNiaUFnSUNCamIyNXpkQ0JtY21GbmJXVnVkQ0E5SUc1bGR5QkdjbUZuYldWdWREeEZQaWdwWEc1Y2JpQWdJQ0JzWlhRZ2MyTnZjR1U2SUZOamIzQmxYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQmpZV3hzWW1GamF5aDJPaUJVS1NCN1hHNGdJQ0FnSUNBZ0lHWnZjaUFvWTI5dWMzUWdZMmhwYkdRZ2IyWWdabkpoWjIxbGJuUXVZMmhwYkdSeVpXNHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2R0Wlc1MExuSmxiVzkyWlVOb2FXeGtLR05vYVd4a0tWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHTnNaV0Z1ZFhBZ1BUMDlJRndpWm5WdVkzUnBiMjVjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z1ZFhBb1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR05zWldGdWRYQWdJVDA5SUc1MWJHd3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5ZdVpHVm1ZWFZzZEVOc1pXRnVkWEFvWTJocGJHUXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpZMjl3WlNrZ2MyTnZjR1V1WkdsemNHOXpaU2dwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnpZMjl3WlNBOUlHNWxkeUJUWTI5d1pTaGpkWEp5Wlc1MFUyTnZjR1VwWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR05vSUQwZ2MyTnZjR1V1Y25WdUtDZ3BJRDArSUcxclEyaHBiR1FvZGlrcFhHNGdJQ0FnSUNBZ0lHbG1JQ2hqYUNBaFBUMGdYQ0pjSWlBbUppQmphQ0FoUFQwZ1ptRnNjMlVnSmlZZ1kyZ2dJVDA5SUc1MWJHd2dKaVlnWTJnZ0lUMDlJSFZ1WkdWbWFXNWxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabkpoWjIxbGJuUXVZV1JrUTJocGJHUW9ZMmdwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQmthWE53YjNObElEMGdkbUZzZFdVdWMzVmljMk55YVdKbEtDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ1kyRnNiR0poWTJzb2RtRnNkV1V1WjJWMEtDa3BYRzRnSUNBZ2ZTbGNiaUFnSUNCallXeHNZbUZqYXloMllXeDFaUzVuWlhRb0tTbGNibHh1SUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lITmpiM0JsTG1ScGMzQnZjMlVvS1Z4dUlDQWdJQ0FnSUNCa2FYTndiM05sS0NsY2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnY21WMGRYSnVJR1p5WVdkdFpXNTBYRzU5WEc0aUxDQWlhVzF3YjNKMElFRnpkR0ZzSUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQkhkR3NnWm5KdmJTQmNJbWRwT2k4dlIzUnJQM1psY25OcGIyNDlOQzR3WENKY2JtbHRjRzl5ZENCSFpHc2dabkp2YlNCY0ltZHBPaTh2UjJSclAzWmxjbk5wYjI0OU5DNHdYQ0pjYm1WNGNHOXlkQ0I3SUVGemRHRnNMQ0JIZEdzc0lFZGtheUI5WEc0aUxDQWlhVzF3YjNKMElIc2dRWE4wWVd3Z2ZTQm1jbTl0SUZ3aVlXZHpMMmQwYXpSY0lseHVhVzF3YjNKMElFZDBheUJtY205dElGd2laMms2THk5SGRHcy9kbVZ5YzJsdmJqMDBMakJjSWx4dWFXMXdiM0owSUVka2F5Qm1jbTl0SUZ3aVoyazZMeTlIWkdzL2RtVnljMmx2YmowMExqQmNJbHh1YVcxd2IzSjBJR0Z3Y0NCbWNtOXRJRndpWVdkekwyZDBhelF2WVhCd1hDSmNibWx0Y0c5eWRDQkJjM1JoYkVKaGRIUmxjbmtnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hDWVhSMFpYSjVYQ0pjYm1sdGNHOXlkQ0JCYzNSaGJFSnNkV1YwYjI5MGFDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFSnNkV1YwYjI5MGFGd2lYRzVwYlhCdmNuUWdRWE4wWVd4SWVYQnliR0Z1WkNCbWNtOXRJRndpWjJrNkx5OUJjM1JoYkVoNWNISnNZVzVrWENKY2JtbHRjRzl5ZENCQmMzUmhiRTF3Y21seklHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1RYQnlhWE5jSWx4dWFXMXdiM0owSUVGemRHRnNUbVYwZDI5eWF5Qm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFNWxkSGR2Y210Y0lseHVhVzF3YjNKMElFRnpkR0ZzVkhKaGVTQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJGUnlZWGxjSWx4dUx5OGdhVzF3YjNKMElGUnBiV1VnWm5KdmJTQmNJa0IzYVdSblpYUnpMMVJwYldVdlZHbHRaVndpWEc1cGJYQnZjblFnZXlCblpYUlhaV0YwYUdWeVJXMXZhbWtnZlNCbWNtOXRJRndpUUdOdmJXMXZiaTltZFc1amRHbHZibk5jSWx4dWFXMXdiM0owSUhzZ1kzVnljbVZ1ZEZScGJXVXNJRzFsYlc5eWVWVnpZV2RsTENCdWIzUnBabWxqWVhScGIyNXpUR1Z1WjNSb0xDQnpaWFJUYUc5M1RHVm1kRk5wWkdWaVlYSXNJSE5sZEZOb2IzZFNhV2RvZEZOcFpHVmlZWElzSUhOb2IzZE1aV1owVTJsa1pXSmhjaXdnYzJodmQxSnBaMmgwVTJsa1pXSmhjaXdnZDJWaGRHaGxjbEpsY0c5eWRDQjlJR1p5YjIwZ1hDSkFZMjl0Ylc5dUwzWmhjbk5jSWx4dWFXMXdiM0owSUhzZ1FXTmpaWE56YjNJc0lHTnlaV0YwWlVKcGJtUnBibWNzSUdOeVpXRjBaVk4wWVhSbExDQkdiM0lzSUZkcGRHZ2dmU0JtY205dElGd2lZV2R6WENKY2JseHVablZ1WTNScGIyNGdWSEpoZVUxdlpIVnNaU2dwSUh0Y2JpQWdZMjl1YzNRZ2RISmhlU0E5SUVGemRHRnNWSEpoZVM1blpYUmZaR1ZtWVhWc2RDZ3BYRzRnSUdOdmJuTjBJR2wwWlcxeklEMGdZM0psWVhSbFFtbHVaR2x1WnloMGNtRjVMQ0JjSW1sMFpXMXpYQ0lwWEc1Y2JpQWdZMjl1YzNRZ2FXNXBkQ0E5SUNoaWRHNDZJRWQwYXk1TlpXNTFRblYwZEc5dUxDQnBkR1Z0T2lCQmMzUmhiRlJ5WVhrdVZISmhlVWwwWlcwcElEMCtJSHRjYmlBZ0lDQmlkRzR1YldWdWRVMXZaR1ZzSUQwZ2FYUmxiUzV0Wlc1MVRXOWtaV3hjYmlBZ0lDQmlkRzR1YVc1elpYSjBYMkZqZEdsdmJsOW5jbTkxY0NoY0ltUmlkWE50Wlc1MVhDSXNJR2wwWlcwdVlXTjBhVzl1UjNKdmRYQXBYRzRnSUNBZ2FYUmxiUzVqYjI1dVpXTjBLRndpYm05MGFXWjVPanBoWTNScGIyNHRaM0p2ZFhCY0lpd2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ1luUnVMbWx1YzJWeWRGOWhZM1JwYjI1ZlozSnZkWEFvWENKa1luVnpiV1Z1ZFZ3aUxDQnBkR1Z0TG1GamRHbHZia2R5YjNWd0tWeHVJQ0FnSUgwcFhHNGdJSDFjYmx4dUlDQnlaWFIxY200Z0tGeHVJQ0FnSUR4aWIzZytYRzRnSUNBZ0lDQThSbTl5SUdWaFkyZzllMmwwWlcxemZUNWNiaUFnSUNBZ0lDQWdleWhwZEdWdEtTQTlQaUFvWEc0Z0lDQWdJQ0FnSUNBZ1BHMWxiblZpZFhSMGIyNGdKRDE3S0hObGJHWXBJRDArSUdsdWFYUW9jMlZzWml3Z2FYUmxiU2w5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdQR2x0WVdkbElHZHBZMjl1UFh0amNtVmhkR1ZDYVc1a2FXNW5LR2wwWlcwc0lGd2laMmxqYjI1Y0lpbDlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ1BDOXRaVzUxWW5WMGRHOXVQbHh1SUNBZ0lDQWdJQ0FwZlZ4dUlDQWdJQ0FnUEM5R2IzSStYRzRnSUNBZ1BDOWliM2crWEc0Z0lDbGNibjFjYmx4dVpuVnVZM1JwYjI0Z1RtVjBkMjl5YTAxdlpIVnNaU2dwSUh0Y2JpQWdZMjl1YzNRZ2JtVjBkMjl5YXlBOUlFRnpkR0ZzVG1WMGQyOXlheTVuWlhSZlpHVm1ZWFZzZENncFhHNGdJR052Ym5OMElIZHBabWtnUFNCamNtVmhkR1ZDYVc1a2FXNW5LRzVsZEhkdmNtc3NJRndpZDJsbWFWd2lLVnh1SUNCamIyNXpkQ0IzYVhKbFpDQTlJR055WldGMFpVSnBibVJwYm1jb2JtVjBkMjl5YXl3Z1hDSjNhWEpsWkZ3aUtWeHVYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQR0p2ZUQ1Y2JpQWdJQ0FnSUR4aWIzZ2dkbWx6YVdKc1pUMTdkMmxtYVNoQ2IyOXNaV0Z1S1gwK1hHNGdJQ0FnSUNBZ0lEeFhhWFJvSUhaaGJIVmxQWHQzYVdacGZUNWNiaUFnSUNBZ0lDQWdJQ0I3S0hkcFpta3BJRDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1pwSUNZbUlDaGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1BHbHRZV2RsSUdsamIyNU9ZVzFsUFh0amNtVmhkR1ZDYVc1a2FXNW5LSGRwWm1rc0lGd2lhV052Yms1aGJXVmNJaWw5SUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FwWEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQThMMWRwZEdnK1hHNGdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJRHhpYjNnZ2RtbHphV0pzWlQxN2QybHlaV1FvUW05dmJHVmhiaWw5UGx4dUlDQWdJQ0FnSUNBOFYybDBhQ0IyWVd4MVpUMTdkMmx5WldSOVBseHVJQ0FnSUNBZ0lDQWdJSHNvZDJseVpXUXBJRDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhWEpsWkNBbUppQW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHBiV0ZuWlNCcFkyOXVUbUZ0WlQxN1kzSmxZWFJsUW1sdVpHbHVaeWgzYVhKbFpDd2dYQ0pwWTI5dVRtRnRaVndpS1gwZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNsY2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJRHd2VjJsMGFENWNiaUFnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJRHd2WW05NFBseHVJQ0FwWEc1OVhHNWNibVoxYm1OMGFXOXVJRUpzZFdWMGIyOTBhRTF2WkhWc1pTZ3BJSHRjYmlBZ1kyOXVjM1FnWW14MVpYUnZiM1JvSUQwZ1FYTjBZV3hDYkhWbGRHOXZkR2d1WjJWMFgyUmxabUYxYkhRb0tWeHVYRzRnSUhKbGRIVnliaUE4Y21WMlpXRnNaWEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVWSGx3WlQxN1IzUnJMbEpsZG1WaGJHVnlWSEpoYm5OcGRHbHZibFI1Y0dVdVUweEpSRVZmVEVWR1ZIMWNiaUFnSUNCeVpYWmxZV3hEYUdsc1pEMTdZM0psWVhSbFFtbHVaR2x1WnloaWJIVmxkRzl2ZEdnc0lGd2lhWE5mWTI5dWJtVmpkR1ZrWENJcGZUNWNiaUFnSUNBOGJHRmlaV3dnWTJ4aGMzTTlYQ0pDYkhWbGRHOXZkR2hjSWlCc1lXSmxiRDFjSWx4MVJFSTRNRngxUkVOQ01Wd2lJQzgrWEc0Z0lEd3ZjbVYyWldGc1pYSStYRzU5WEc1Y2JtWjFibU4wYVc5dUlFSmhkSFJsY25sTmIyUjFiR1VvS1NCN1hHNGdJR052Ym5OMElHSmhkQ0E5SUVGemRHRnNRbUYwZEdWeWVTNW5aWFJmWkdWbVlYVnNkQ2dwWEc1Y2JpQWdjbVYwZFhKdUlEeGliM2dnWTJ4aGMzTTlYQ0pDWVhSMFpYSjVYQ0pjYmlBZ0lDQjJhWE5wWW14bFBYdGpjbVZoZEdWQ2FXNWthVzVuS0dKaGRDd2dYQ0pwYzFCeVpYTmxiblJjSWlsOVBseHVJQ0FnSUR4c1lXSmxiQ0JzWVdKbGJEMTdZM0psWVhSbFFtbHVaR2x1WnloaVlYUXNJRndpY0dWeVkyVnVkR0ZuWlZ3aUtTNWhjeWh3SUQwK0lHQWtlMDFoZEdndVpteHZiM0lvY0NBcUlERXdNQ2w5SldBcGZTQXZQbHh1SUNBZ0lEeHBiV0ZuWlNCcFkyOXVUbUZ0WlQxN1kzSmxZWFJsUW1sdVpHbHVaeWhpWVhRc0lGd2lZbUYwZEdWeWVVbGpiMjVPWVcxbFhDSXBmU0F2UGx4dUlDQThMMkp2ZUQ1Y2JuMWNibHh1Wm5WdVkzUnBiMjRnWjJWMFZHbDBiR1VvY0d4aGVXVnlPaUJCYzNSaGJFMXdjbWx6TGxCc1lYbGxjaWs2SUhOMGNtbHVaeUI3WEc0Z0lISmxkSFZ5YmlCd2JHRjVaWEl1WVhKMGFYTjBYRzRnSUNBZ1B5QmdKSHR3YkdGNVpYSXVZWEowYVhOMGZUb2dKSHR3YkdGNVpYSXVkR2wwYkdWOVlGeHVJQ0FnSURvZ2NHeGhlV1Z5TG1Gc1luVnRYRzRnSUNBZ0lDQS9JR0FrZTNCc1lYbGxjaTVoYkdKMWJYMDZJQ1I3Y0d4aGVXVnlMblJwZEd4bGZXQmNiaUFnSUNBZ0lEb2dZQ1I3Y0d4aGVXVnlMblJwZEd4bGZXQmNibjFjYmx4dVpuVnVZM1JwYjI0Z1RXVmthV0ZOYjJSMWJHVW9LU0I3WEc0Z0lHTnZibk4wSUcxd2NtbHpJRDBnUVhOMFlXeE5jSEpwY3k1blpYUmZaR1ZtWVhWc2RDZ3BYRzVjYmlBZ2NtVjBkWEp1SUR4WGFYUm9JSFpoYkhWbFBYdGpjbVZoZEdWQ2FXNWthVzVuS0cxd2NtbHpMQ0JjSW5Cc1lYbGxjbk5jSWlsOVBseHVJQ0FnSUhzb2NITTZJRUZ5Y21GNVBFRnpkR0ZzVFhCeWFYTXVVR3hoZVdWeVBpa2dQVDRnY0hOYk1GMGdQeUFvWEc0Z0lDQWdJQ0E4WW5WMGRHOXVJR05zWVhOelBWd2lUV1ZrYVdGY0lseHVJQ0FnSUNBZ0lDQnZia05zYVdOclpXUTlleWdwSUQwK0lIQnpXekJkTG5Cc1lYbGZjR0YxYzJVb0tYMCtYRzRnSUNBZ0lDQWdJRHhzWVdKbGJGeHVJQ0FnSUNBZ0lDQWdJR05zWVhOelBYdGpjbVZoZEdWQ2FXNWthVzVuS0hCeld6QmRMQ0JjSW5Cc1lYbGlZV05yVTNSaGRIVnpYQ0lwTG1GektITWdQVDRnY3lBK0lEQWdQeUJjSW5CaGRYTmxaRndpSURvZ1hDSndiR0Y1YVc1blhDSXBmVnh1SUNBZ0lDQWdJQ0FnSUcxaGVGZHBaSFJvUTJoaGNuTTllemd3ZlZ4dUlDQWdJQ0FnSUNBZ0lHeGhZbVZzUFh0amNtVmhkR1ZDYVc1a2FXNW5LSEJ6V3pCZExDQmNJbTFsZEdGa1lYUmhYQ0lwTG1GektDZ3BJRDArSUdkbGRGUnBkR3hsS0hCeld6QmRLU2w5SUM4K1hHNGdJQ0FnSUNBOEwySjFkSFJ2Ymo1Y2JpQWdJQ0FwSURvZ0tEeGliM2dnTHo0cFhHNGdJQ0FnZlZ4dUlDQThMMWRwZEdnK1hHNTlYRzVjYm1aMWJtTjBhVzl1SUZkdmNtdHpjR0ZqWlhNb0tTQjdYRzRnSUdOdmJuTjBJR2g1Y0hJZ1BTQkJjM1JoYkVoNWNISnNZVzVrTG1kbGRGOWtaV1poZFd4MEtDbGNiaUFnWTI5dWMzUWdkMjl5YTNOd1lXTmxjeUE5SUdOeVpXRjBaVUpwYm1ScGJtY29hSGx3Y2l3Z1hDSjNiM0pyYzNCaFkyVnpYQ0lwWEc1Y2JpQWdZMjl1YzNRZ2MyOXlkR1ZrSUQwZ0tHRnljam9nUVhKeVlYazhRWE4wWVd4SWVYQnliR0Z1WkM1WGIzSnJjM0JoWTJVK0tTQTlQaUI3WEc0Z0lDQWdjbVYwZFhKdUlHRnljaTVtYVd4MFpYSW9kM01nUFQ0Z0lTaDNjeTVwWkNBK1BTQXRPVGtnSmlZZ2QzTXVhV1FnUEQwZ0xUSXBLUzV6YjNKMEtDaGhMQ0JpS1NBOVBpQmhMbWxrSUMwZ1lpNXBaQ2xjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUE4WW05NElHTnNZWE56UFZ3aVYyOXlhM053WVdObGMxd2lQbHh1SUNBZ0lEeEdiM0lnWldGamFEMTdkMjl5YTNOd1lXTmxjeWh6YjNKMFpXUXBmVDVjYmlBZ0lDQWdJSHNvZDNNNklFRnpkR0ZzU0hsd2NteGhibVF1VjI5eWEzTndZV05sS1NBOVBpQW9YRzRnSUNBZ0lDQWdJRHhpZFhSMGIyNWNiaUFnSUNBZ0lDQWdJQ0JqYkdGemN6MTdZM0psWVhSbFFtbHVaR2x1Wnlob2VYQnlMQ0JjSW1adlkzVnpaV1JYYjNKcmMzQmhZMlZjSWlrdVlYTW9abmNnUFQ0Z2QzTWdQVDA5SUdaM0lEOGdYQ0ptYjJOMWMyVmtYQ0lnT2lCY0lsd2lLWDFjYmlBZ0lDQWdJQ0FnSUNCdmJrTnNhV05yWldROWV5Z3BJRDArSUhkekxtWnZZM1Z6S0NsOVhHNGdJQ0FnSUNBZ0lENWNiaUFnSUNBZ0lDQWdJQ0I3ZDNNdWFXUjlYRzRnSUNBZ0lDQWdJRHd2WW5WMGRHOXVQbHh1SUNBZ0lDQWdLWDFjYmlBZ0lDQThMMFp2Y2o1Y2JpQWdQQzlpYjNnK1hHNTlYRzVjYm1aMWJtTjBhVzl1SUZkbFlYUm9aWElvS1NCN1hHNGdJR052Ym5OMElGdDJhWE5wWW14bExDQnpaWFJXYVhOcFlteGxYU0E5SUdOeVpXRjBaVk4wWVhSbEtIUnlkV1VwWEc0Z0lISmxkSFZ5YmlBb1hHNGdJQ0FnUEhKbGRtVmhiR1Z5WEc0Z0lDQWdJQ0IwY21GdWMybDBhVzl1Vkhsd1pUMTdSM1JyTGxKbGRtVmhiR1Z5VkhKaGJuTnBkR2x2YmxSNWNHVXVVMHhKUkVWZlVrbEhTRlI5WEc0Z0lDQWdJQ0J5WlhabFlXeERhR2xzWkQxN2RtbHphV0pzWlgxY2JpQWdJQ0ErWEc0Z0lDQWdJQ0E4VjJsMGFDQjJZV3gxWlQxN2QyVmhkR2hsY2xKbGNHOXlkSDArWEc0Z0lDQWdJQ0FnSUhzb2RtRnNkV1VwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1UvTG5kbFlYUm9aWElwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHTnZibVJwZEdsdmJpQTlJSFpoYkhWbExuZGxZWFJvWlhJdVkzVnljbVZ1ZEY5amIyNWthWFJwYjI1Yk1GMWNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFJsYlhBZ1BTQmpiMjVrYVhScGIyNHVkR1Z0Y0Y5RFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmxiVzlxYVNBOUlHZGxkRmRsWVhSb1pYSkZiVzlxYVNoamIyNWthWFJwYjI0dWQyVmhkR2hsY2tSbGMyTmJNRjB1ZG1Gc2RXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNCelpYUldhWE5wWW14bEtIUnlkV1VwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1BHeGhZbVZzSUdOc1lYTnpQVndpVjJWaGRHaGxjbHdpSUd4aFltVnNQWHRnSkh0MFpXMXdmVngxTURCQ01FTWdKSHRsYlc5cWFYMWdmU0F2UGx4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdQR0p2ZUNBdlBseHVJQ0FnSUNBZ0lDQjlmVnh1SUNBZ0lDQWdQQzlYYVhSb1BseHVJQ0FnSUR3dmNtVjJaV0ZzWlhJK1hHNGdJQ2xjYm4xY2JseHVMeThnWm5WdVkzUnBiMjRnVjJWaGRHaGxjaWdwSUh0Y2JpOHZJQ0FnWTI5dWMzUWdkbWx6YVdKc1pTQTlJRlpoY21saFlteGxQR0p2YjJ4bFlXNCtLR1poYkhObEtWeHVMeThnSUNCeVpYUjFjbTRnUEhKbGRtVmhiR1Z5WEc0dkx5QWdJQ0FnZEhKaGJuTnBkR2x2YmxSNWNHVTllMGQwYXk1U1pYWmxZV3hsY2xSeVlXNXphWFJwYjI1VWVYQmxMbE5NU1VSRlgxSkpSMGhVZlZ4dUx5OGdJQ0FnSUhKbGRtVmhiRU5vYVd4a1BYdDJhWE5wWW14bEtDbDlQbHh1THk4Z0lDQWdJSHRpYVc1a0tIZGxZWFJvWlhKU1pYQnZjblFwTG1GektDaGtZWFJoS1NBOVBpQjdYRzR2THlBZ0lDQWdJQ0JwWmlBb1pHRjBZU2tnZTF4dUx5OGdJQ0FnSUNBZ0lDQmpiMjV6ZENCamIyNWthWFJwYjI0Z1BTQmtZWFJoTG5kbFlYUm9aWEl1WTNWeWNtVnVkRjlqYjI1a2FYUnBiMjViTUYxY2JpOHZJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RHVnRjQ0E5SUdOdmJtUnBkR2x2Ymk1MFpXMXdYME5jYmk4dklDQWdJQ0FnSUNBZ1kyOXVjM1FnWlcxdmFta2dQU0JuWlhSWFpXRjBhR1Z5UlcxdmFta29ZMjl1WkdsMGFXOXVMbmRsWVhSb1pYSkVaWE5qV3pCZExuWmhiSFZsS1Z4dUx5OGdJQ0FnSUNBZ0lDQjJhWE5wWW14bExuTmxkQ2gwY25WbEtWeHVMeThnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdQR3hoWW1Wc0lHTnNZWE56VG1GdFpUMWNJbGRsWVhSb1pYSmNJaUJzWVdKbGJEMTdZQ1I3ZEdWdGNIMWNkVEF3UWpCRElDUjdaVzF2YW1sOVlIMGdMejVjYmk4dklDQWdJQ0FnSUgxY2JpOHZJQ0FnSUNBZ0lISmxkSFZ5YmlBOFltOTRJQzgrWEc0dkx5QWdJQ0FnZlNsOVhHNHZMeUFnSUR3dmNtVjJaV0ZzWlhJK1hHNHZMeUI5WEc1Y2JtWjFibU4wYVc5dUlFNXZkR2xtYVdOaGRHbHZia0psYkd3b0tTQjdYRzRnSUhKbGRIVnliaUE4Y21WMlpXRnNaWEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVWSGx3WlQxN1IzUnJMbEpsZG1WaGJHVnlWSEpoYm5OcGRHbHZibFI1Y0dVdVUweEpSRVZmVEVWR1ZIMWNiaUFnSUNCeVpYWmxZV3hEYUdsc1pEMTdibTkwYVdacFkyRjBhVzl1YzB4bGJtZDBhQzVoY3loc0lEMCtJR3dnUGlBeEtYMCtYRzRnSUNBZ1BHeGhZbVZzSUdOc1lYTnpQVndpVG05MGFXWnBZMkYwYVc5dVFtVnNiRndpSUd4aFltVnNQVndpWEhWRVFqZzBYSFZFUkRaQ1hDSWdMejVjYmlBZ1BDOXlaWFpsWVd4bGNqNWNibjFjYmx4dVpuVnVZM1JwYjI0Z1RXVnRiM0o1S0NrZ2UxeHVJQ0J5WlhSMWNtNGdQRmRwZEdnZ2RtRnNkV1U5ZTIxbGJXOXllVlZ6WVdkbGZUNWNiaUFnSUNCN0tHMWxiVzl5ZVZWellXZGxLU0E5UGx4dUlDQWdJQ0FnUEd4aFltVnNYRzRnSUNBZ0lDQWdJR05zWVhOelBWd2lUV1Z0YjNKNVhDSmNiaUFnSUNBZ0lDQWdiR0ZpWld3OWUyMWxiVzl5ZVZWellXZGxmVnh1SUNBZ0lDQWdMejVjYmlBZ0lDQjlYRzRnSUR3dlYybDBhRDVjYm4xY2JseHVablZ1WTNScGIyNGdWR2x0WlNncElIdGNiaUFnY21WMGRYSnVJRHhYYVhSb0lIWmhiSFZsUFh0amRYSnlaVzUwVkdsdFpYMCtYRzRnSUNBZ2V5aDBhVzFsS1NBOVBpQThiR0ZpWld3Z2JHRmlaV3c5ZTNScGJXVjlJQzgrZlZ4dUlDQThMMWRwZEdnK1hHNTlYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJRUpoY2lodGIyNXBkRzl5T2lCSFpHc3VUVzl1YVhSdmNpd2dkbWx6YVdKc1pUb2dRV05qWlhOemIzSThZbTl2YkdWaGJqNHBJSHRjYmlBZ1kyOXVjM1FnZXlCVVQxQXNJRXhGUmxRc0lGSkpSMGhVSUgwZ1BTQkJjM1JoYkM1WGFXNWtiM2RCYm1Ob2IzSmNibHh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHgzYVc1a2IzZGNiaUFnSUNBZ0lHTnNZWE56UFZ3aVFtRnlYQ0pjYmlBZ0lDQWdJRzVoYldWemNHRmpaVDFjSW1KaGNsd2lYRzRnSUNBZ0lDQm5aR3R0YjI1cGRHOXlQWHR0YjI1cGRHOXlmVnh1SUNBZ0lDQWdaWGhqYkhWemFYWnBkSGs5ZTBGemRHRnNMa1Y0WTJ4MWMybDJhWFI1TGtWWVEweFZVMGxXUlgxY2JpQWdJQ0FnSUdGd2NHeHBZMkYwYVc5dVBYdGhjSEI5WEc0Z0lDQWdJQ0IyYVhOcFlteGxQWHQyYVhOcFlteGxmVnh1SUNBZ0lDQWdiR0Y1WlhJOWUwRnpkR0ZzTGt4aGVXVnlMbFJQVUgxY2JpQWdJQ0FnSUdGdVkyaHZjajE3VkU5UUlId2dURVZHVkNCOElGSkpSMGhVZlZ4dUlDQWdJRDVjYmlBZ0lDQWdJRHhqWlc1MFpYSmliM2crWEc0Z0lDQWdJQ0FnSUR4aWIzaGNiaUFnSUNBZ0lDQWdJQ0JvWlhod1lXNWtYRzRnSUNBZ0lDQWdJQ0FnSkhSNWNHVTlYQ0p6ZEdGeWRGd2lYRzRnSUNBZ0lDQWdJQ0FnYUdGc2FXZHVQWHRIZEdzdVFXeHBaMjR1VTFSQlVsUjlYRzRnSUNBZ0lDQWdJQ0FnWTNOelBWd2liV0Z5WjJsdUxXeGxablE2SURSd2VGd2lQbHh1SUNBZ0lDQWdJQ0FnSUR4aWRYUjBiMjVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNZWE56UFZ3aVZHbHRaVUZ1WkZkbFlYUm9aWEpjSWx4dUlDQWdJQ0FnSUNBZ0lDQWdiMjVEYkdsamEyVmtQWHNvS1NBOVBpQnpaWFJUYUc5M1RHVm1kRk5wWkdWaVlYSW9JWE5vYjNkTVpXWjBVMmxrWldKaGNpNW5aWFFvS1NsOVhHNGdJQ0FnSUNBZ0lDQWdQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNUZUa1I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQStYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEeFVhVzFsSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUR4WFpXRjBhR1Z5SUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdJQ0E4TDJKMWRIUnZiajVjYmlBZ0lDQWdJQ0FnSUNBOFYyOXlhM053WVdObGN5QXZQbHh1SUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdQR0p2ZUZ4dUlDQWdJQ0FnSUNBZ0lHaGxlSEJoYm1SY2JpQWdJQ0FnSUNBZ0lDQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNURSVTVVUlZKOVhHNGdJQ0FnSUNBZ0lDQWdKSFI1Y0dVOVhDSmpaVzUwWlhKY0lqNWNiaUFnSUNBZ0lDQWdJQ0E4VFdWa2FXRk5iMlIxYkdVZ0x6NWNiaUFnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lEeGliM2hjYmlBZ0lDQWdJQ0FnSUNCb1pYaHdZVzVrWEc0Z0lDQWdJQ0FnSUNBZ0pIUjVjR1U5WENKbGJtUmNJbHh1SUNBZ0lDQWdJQ0FnSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtWT1JIMWNiaUFnSUNBZ0lDQWdJQ0JqYzNNOVhDSnRZWEpuYVc0dGNtbG5hSFE2SURSd2VGd2lQbHh1SUNBZ0lDQWdJQ0FnSUR4VWNtRjVUVzlrZFd4bElDOCtYRzRnSUNBZ0lDQWdJQ0FnUEdKMWRIUnZibHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyeGhjM005WENKVWFXMWxRVzVrVjJWaGRHaGxjbHdpWEc0Z0lDQWdJQ0FnSUNBZ0lDQnZia05zYVdOclpXUTlleWdwSUQwK0lITmxkRk5vYjNkU2FXZG9kRk5wWkdWaVlYSW9JWE5vYjNkU2FXZG9kRk5wWkdWaVlYSXVaMlYwS0NrcGZWeHVJQ0FnSUNBZ0lDQWdJRDVjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2crWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRHhDWVhSMFpYSjVUVzlrZFd4bElDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEeE9aWFIzYjNKclRXOWtkV3hsSUM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUR4Q2JIVmxkRzl2ZEdoTmIyUjFiR1VnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnUEU1dmRHbG1hV05oZEdsdmJrSmxiR3dnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnUEUxbGJXOXllU0F2UGx4dUlDQWdJQ0FnSUNBZ0lDQWdQQzlpYjNnK1hHNGdJQ0FnSUNBZ0lDQWdQQzlpZFhSMGIyNCtYRzRnSUNBZ0lDQWdJRHd2WW05NFBseHVJQ0FnSUNBZ1BDOWpaVzUwWlhKaWIzZytYRzRnSUNBZ1BDOTNhVzVrYjNjK1hHNGdJQ2xjYm4xY2JpSXNJQ0pwYlhCdmNuUWdleUJIWkdzc0lFZDBheUI5SUdaeWIyMGdYQ0poWjNNdlozUnJORndpWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCcGMwbGpiMjRvYVdOdmJqODZJSE4wY21sdVp5QjhJRzUxYkd3cElIdGNiaUFnWTI5dWMzUWdhV052YmxSb1pXMWxJRDBnUjNSckxrbGpiMjVVYUdWdFpTNW5aWFJmWm05eVgyUnBjM0JzWVhrb1IyUnJMa1JwYzNCc1lYa3VaMlYwWDJSbFptRjFiSFFvS1NFcFhHNGdJSEpsZEhWeWJpQnBZMjl1SUNZbUlHbGpiMjVVYUdWdFpTNW9ZWE5mYVdOdmJpaHBZMjl1S1Z4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdaMlYwVjJWaGRHaGxja1Z0YjJwcEtHUmxjMk02SUhOMGNtbHVaeWs2SUhOMGNtbHVaeUI3WEc0Z0lHUmxjMk1nUFNCa1pYTmpMblJ2VEc5M1pYSkRZWE5sS0NsY2JseHVJQ0JwWmlBb1pHVnpZeTVwYm1Oc2RXUmxjeWhjSW5OMWJtNTVYQ0lwSUh4OElHUmxjMk11YVc1amJIVmtaWE1vWENKamJHVmhjbHdpS1NrZ2NtVjBkWEp1SUZ3aVhIVXlOakF3WEhWR1JUQkdYQ0pjYmlBZ2FXWWdLR1JsYzJNdWFXNWpiSFZrWlhNb1hDSndZWEowYkhsY0lpa3BJSEpsZEhWeWJpQmNJbHgxTWpaRE5Wd2lYRzRnSUdsbUlDaGtaWE5qTG1sdVkyeDFaR1Z6S0Z3aVkyeHZkV1I1WENJcElIeDhJR1JsYzJNdWFXNWpiSFZrWlhNb1hDSnZkbVZ5WTJGemRGd2lLU2tnY21WMGRYSnVJRndpWEhVeU5qQXhYSFZHUlRCR1hDSmNiaUFnYVdZZ0tHUmxjMk11YVc1amJIVmtaWE1vWENKeVlXbHVYQ0lwSUh4OElHUmxjMk11YVc1amJIVmtaWE1vWENKa2NtbDZlbXhsWENJcEtTQnlaWFIxY200Z1hDSmNkVVE0TTBOY2RVUkdNamRjZFVaRk1FWmNJbHh1SUNCcFppQW9aR1Z6WXk1cGJtTnNkV1JsY3loY0luUm9kVzVrWlhKY0lpa3BJSEpsZEhWeWJpQmNJbHgxTWpaRE9GeDFSa1V3Umx3aVhHNGdJR2xtSUNoa1pYTmpMbWx1WTJ4MVpHVnpLRndpYzI1dmQxd2lLU2tnY21WMGRYSnVJRndpWEhVeU56UTBYSFZHUlRCR1hDSmNiaUFnYVdZZ0tHUmxjMk11YVc1amJIVmtaWE1vWENKbWIyZGNJaWtnZkh3Z1pHVnpZeTVwYm1Oc2RXUmxjeWhjSW0xcGMzUmNJaWtwSUhKbGRIVnliaUJjSWx4MVJEZ3pRMXgxUkVZeVFseDFSa1V3Umx3aVhHNWNiaUFnY21WMGRYSnVJRndpWEhWRU9ETkRYSFZFUmpBNFhDSWdMeThnWm1Gc2JHSmhZMnRjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHZGxkRmRsWVhSb1pYSkpiV0ZuWlNoa1pYTmpPaUJ6ZEhKcGJtY3BPaUJ6ZEhKcGJtY2dlMXh1SUNCa1pYTmpJRDBnWkdWell5NTBiMHh2ZDJWeVEyRnpaU2dwWEc1Y2JpQWdhV1lnS0dSbGMyTXVhVzVqYkhWa1pYTW9YQ0p6ZFc1dWVWd2lLU0I4ZkNCa1pYTmpMbWx1WTJ4MVpHVnpLRndpWTJ4bFlYSmNJaWtwSUhKbGRIVnliaUJjSW1Oc1pXRnlMbkJ1WjF3aVhHNGdJR2xtSUNoa1pYTmpMbWx1WTJ4MVpHVnpLRndpY0dGeWRHeDVYQ0lwS1NCeVpYUjFjbTRnWENKd1lYSjBiSGxmWTJ4dmRXUjVMbkJ1WjF3aVhHNGdJR2xtSUNoa1pYTmpMbWx1WTJ4MVpHVnpLRndpWTJ4dmRXUjVYQ0lwSUh4OElHUmxjMk11YVc1amJIVmtaWE1vWENKdmRtVnlZMkZ6ZEZ3aUtTa2djbVYwZFhKdUlGd2lZMnh2ZFdSNUxuQnVaMXdpWEc0Z0lHbG1JQ2hrWlhOakxtbHVZMngxWkdWektGd2liR2xuYUhSY0lpa3BJSEpsZEhWeWJpQmNJbXhwWjJoMFgzSmhhVzR1Y0c1blhDSWdMeThnYVc1amJIVnBJSFJpYlNCdklHeHBaMmgwSUdSeWFYcDZiR1ZjYmlBZ2FXWWdLR1JsYzJNdWFXNWpiSFZrWlhNb1hDSnlZV2x1WENJcElIeDhJR1JsYzJNdWFXNWpiSFZrWlhNb1hDSmtjbWw2ZW14bFhDSXBLU0J5WlhSMWNtNGdYQ0p5WVdsdUxuQnVaMXdpWEc0Z0lHbG1JQ2hrWlhOakxtbHVZMngxWkdWektGd2lkR2gxYm1SbGNsd2lLU2tnY21WMGRYSnVJRndpYzNSdmNtMHVjRzVuWENKY2JpQWdMeThnYVdZZ0tHUmxjMk11YVc1amJIVmtaWE1vWENKemJtOTNYQ0lwS1NCeVpYUjFjbTRnWENKY2RUSTNORFJjZFVaRk1FWmNJbHh1SUNCcFppQW9aR1Z6WXk1cGJtTnNkV1JsY3loY0ltWnZaMXdpS1NCOGZDQmtaWE5qTG1sdVkyeDFaR1Z6S0Z3aWJXbHpkRndpS1NrZ2NtVjBkWEp1SUZ3aVptOW5MbkJ1WjF3aVhHNWNiaUFnY21WMGRYSnVJRndpYjNSb1pYSXVjRzVuWENKY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR2RsZEZkcFptbEpZMjl1S0dsamIyNDZJSE4wY21sdVp5azZJSE4wY21sdVp5QjdYRzRnSUdsbUlDaHBZMjl1TG1sdVkyeDFaR1Z6S0Z3aWIyWm1iR2x1WlZ3aUtTa2djbVYwZFhKdUlGd2lYSFZFUWpneVhIVkVSREpGWENKY2JpQWdhV1lnS0dsamIyNHVhVzVqYkhWa1pYTW9YQ0p1YnkxeWIzVjBaVndpS1NrZ2NtVjBkWEp1SUZ3aVhIVkVRamd5WEhWRVJESkVYQ0pjYmlBZ2FXWWdLR2xqYjI0dWFXNWpiSFZrWlhNb1hDSmpiMjV1WldOMFpXUmNJaWtwSUhKbGRIVnliaUJjSWx4MVJFSTRNbHgxUkVReVFsd2lYRzRnSUdsbUlDaHBZMjl1TG1sdVkyeDFaR1Z6S0Z3aWMybG5ibUZzTFc1dmJtVmNJaWtwSUhKbGRIVnliaUJjSWx4MVJFSTRNbHgxUkVReVJsd2lYRzRnSUdsbUlDaHBZMjl1TG1sdVkyeDFaR1Z6S0Z3aWMybG5ibUZzTFhkbFlXdGNJaWtwSUhKbGRIVnliaUJjSWx4MVJFSTRNbHgxUkVReFJsd2lYRzRnSUdsbUlDaHBZMjl1TG1sdVkyeDFaR1Z6S0Z3aWMybG5ibUZzTFc5clhDSXBLU0J5WlhSMWNtNGdYQ0pjZFVSQ09ESmNkVVJFTWpKY0lseHVJQ0JwWmlBb2FXTnZiaTVwYm1Oc2RXUmxjeWhjSW5OcFoyNWhiQzFuYjI5a1hDSXBLU0J5WlhSMWNtNGdYQ0pjZFVSQ09ESmNkVVJFTWpWY0lseHVJQ0JwWmlBb2FXTnZiaTVwYm1Oc2RXUmxjeWhjSW1WdVkzSjVjSFJsWkZ3aUtTa2djbVYwZFhKdUlGd2lYSFZFUWpneVhIVkVSREpCWENKY2JpQWdjbVYwZFhKdUlGd2lYSFZFUWpneVhIVkVSREk0WENKY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR1Z6WTJGd1pVMWhjbXQxY0NoMFpYaDBPaUJ6ZEhKcGJtY3BPaUJ6ZEhKcGJtY2dlMXh1SUNCeVpYUjFjbTRnZEdWNGRDNXlaWEJzWVdObEtDOG1MMmNzSUZ3aUptRnRjRHRjSWlrN1hHNTlYRzRpTENBaWFXMXdiM0owSUVkTWFXSWdabkp2YlNCY0ltZHBPaTh2UjB4cFlsd2lYRzVwYlhCdmNuUWdleUJsZUdWalFYTjVibU1nZlNCbWNtOXRJRndpWVdkekwzQnliMk5sYzNOY0lseHVhVzF3YjNKMElFMXdjbWx6SUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzVFhCeWFYTmNJbHh1YVcxd2IzSjBJSHNnWTNKbFlYUmxVM1JoZEdVZ2ZTQm1jbTl0SUZ3aVlXZHpYQ0pjYm1sdGNHOXlkQ0I3SUdOeVpXRjBaVkJ2Ykd3Z2ZTQm1jbTl0SUZ3aVlXZHpMM1JwYldWY0lseHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1d5QnphRzkzUW1GeUxDQnpaWFJUYUc5M1FtRnlJRjBnUFNCamNtVmhkR1ZUZEdGMFpTaDBjblZsS1Z4dVpYaHdiM0owSUdOdmJuTjBJRnNnYzJodmQweGxablJUYVdSbFltRnlMQ0J6WlhSVGFHOTNUR1ZtZEZOcFpHVmlZWElnWFNBOUlHTnlaV0YwWlZOMFlYUmxLR1poYkhObEtWeHVaWGh3YjNKMElHTnZibk4wSUZzZ2MyaHZkMUpwWjJoMFUybGtaV0poY2l3Z2MyVjBVMmh2ZDFKcFoyaDBVMmxrWldKaGNpQmRJRDBnWTNKbFlYUmxVM1JoZEdVb1ptRnNjMlVwWEc1bGVIQnZjblFnWTI5dWMzUWdXeUJ6YUc5M1EzSnZjM05vWVdseUxDQnpaWFJUYUc5M1EzSnZjM05vWVdseUlGMGdQU0JqY21WaGRHVlRkR0YwWlNobVlXeHpaU2xjYm1WNGNHOXlkQ0JqYjI1emRDQmJJSE5vYjNkTVlYVnVZMmhsY2l3Z2MyVjBVMmh2ZDB4aGRXNWphR1Z5SUYwZ1BTQmpjbVZoZEdWVGRHRjBaU2htWVd4elpTbGNibVY0Y0c5eWRDQmpiMjV6ZENCYklHUnZUbTkwUkdsemRIVnlZaXdnYzJWMFJHOU9iM1JFYVhOMGRYSmlJRjBnUFNCamNtVmhkR1ZUZEdGMFpTaG1ZV3h6WlNsY2JtVjRjRzl5ZENCamIyNXpkQ0JiSUc1cFoyaDBUR2xuYUhSRmJtRmliR1ZrTENCelpYUk9hV2RvZEV4cFoyaDBSVzVoWW14bFpDQmRJRDBnWTNKbFlYUmxVM1JoZEdVb1ptRnNjMlVwWEc1bGVIQnZjblFnWTI5dWMzUWdXeUJ1YjNScFptbGpZWFJwYjI1elRHVnVaM1JvTENCelpYUk9iM1JwWm1sallYUnBiMjV6VEdWdVozUm9JRjBnUFNCamNtVmhkR1ZUZEdGMFpTZ3dLVnh1Wlhod2IzSjBJR052Ym5OMElGc2djMmxrWldKaGNsQmhibVZzTENCelpYUlRhV1JsWW1GeVVHRnVaV3dnWFNBOUlHTnlaV0YwWlZOMFlYUmxLRndpYldGcGJsd2lLVnh1Wlhod2IzSjBJR052Ym5OMElITndiM1JwWm5sUWJHRjVaWElnUFNCTmNISnBjeTVRYkdGNVpYSXVibVYzS0Z3aWMzQnZkR2xtZVZ3aUtWeHVYRzVsZUdWalFYTjVibU1vSjNCbmNtVndJQzE0SUdoNWNISnpkVzV6WlhRbktWeHVJQ0F1ZEdobGJpZ29LU0E5UGlCelpYUk9hV2RvZEV4cFoyaDBSVzVoWW14bFpDaDBjblZsS1NsY2JpQWdMbU5oZEdOb0tDZ3BJRDArSUhObGRFNXBaMmgwVEdsbmFIUkZibUZpYkdWa0tHWmhiSE5sS1NsY2JseHVaWGh3YjNKMElHTnZibk4wSUdOMWNuSmxiblJVYVcxbElEMGdZM0psWVhSbFVHOXNiQ2hjSWx3aUxDQXhNREF3TENBb0tTQTlQbHh1SUNCSFRHbGlMa1JoZEdWVWFXMWxMbTVsZDE5dWIzZGZiRzlqWVd3b0tTNW1iM0p0WVhRb1hDSWxTRG9sVFZ3aUtTRXBYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQmpkWEp5Wlc1MFJHRjVJRDBnWTNKbFlYUmxVRzlzYkNoY0lsd2lMQ0F4TURBd0xDQW9LU0E5UGx4dUlDQkhUR2xpTGtSaGRHVlVhVzFsTG01bGQxOXViM2RmYkc5allXd29LUzVtYjNKdFlYUW9YQ0plSlVFc0lDVmtJR1JsSUY0bFFsd2lLU0VwWEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0IxY0hScGJXVWdQU0JqY21WaGRHVlFiMnhzS0Z3aVhDSXNJRFVnS2lBMk1DQXFJREV3TURBc0lHRnplVzVqSUNncElEMCtJSHRjYmlBZ1kyOXVjM1FnYjNWMGNIVjBJRDBnWVhkaGFYUWdaWGhsWTBGemVXNWpLRndpZFhCMGFXMWxJQzF3WENJcFhHNGdJSEpsZEhWeWJpQnZkWFJ3ZFhSY2JpQWdJQ0F1Y21Wd2JHRmpaU2d2SUcxcGJuVjBaWE44SUcxcGJuVjBaUzhzSUZ3aWJWd2lLVnh1SUNBZ0lDNXlaWEJzWVdObEtDOGdhRzkxY25OOElHaHZkWEl2TENCY0ltaGNJaWxjYmlBZ0lDQXVjbVZ3YkdGalpTZ3ZJR1JoZVhOOElHUmhlUzhzSUZ3aVpGd2lLVnh1SUNBZ0lDNXlaWEJzWVdObEtDOGdkMlZsYTNOOElIZGxaV3N2TENCY0luZGNJaWxjYm4wcFhHNWNibVY0Y0c5eWRDQmpiMjV6ZENCdFpXMXZjbmxWYzJGblpTQTlJR055WldGMFpWQnZiR3dvWENKY0lpd2dOU0FxSURFd01EQXNJR0Z6ZVc1aklDZ3BJRDArSUh0Y2JpQWdZMjl1YzNRZ2IzVjBjSFYwSUQwZ1lYZGhhWFFnWlhobFkwRnplVzVqS0Z0Y0luTm9YQ0lzSUZ3aUxXTmNJaXdnWUdaeVpXVWdMUzF0WldkaElId2dZWGRySUNkT1VqMDlNbnR3Y21sdWRDQWtNeUJjSWlCTlFsd2lmU2RnWFNsY2JpQWdjbVYwZFhKdUlHOTFkSEIxZEZ4dWZTbGNibHh1ZEhsd1pTQlhaV0YwYUdWeVJHRjBZU0E5SUh0Y2JpQWdkR2x0WlhOMFlXMXdPaUJ6ZEhKcGJtZGNiaUFnZDJWaGRHaGxjam9nWVc1NVhHNTlPMXh1WEc1MllYSWdjM1JoY25SU1pYQnZjblE2SUZkbFlYUm9aWEpFWVhSaElEMGdlMXh1SUNCMGFXMWxjM1JoYlhBNklGd2lYQ0lzWEc0Z0lIZGxZWFJvWlhJNklHNTFiR3hjYm4xY2JseHVaWGh3YjNKMElHTnZibk4wSUhkbFlYUm9aWEpTWlhCdmNuUWdQU0JqY21WaGRHVlFiMnhzS0hOMFlYSjBVbVZ3YjNKMExDQXlNQ0FxSURZd0lDb2dNVEF3TUN3Z1lYTjVibU1nS0NrZ1BUNGdlMXh1SUNCMGNua2dlMXh1SUNBZ0lHTnZibk4wSUhKbGMzVnNkQ0E5SUdGM1lXbDBJR1Y0WldOQmMzbHVZeWhnWTNWeWJDQXRjeUJjSW5kMGRISXVhVzR2UTNWeWFYUnBZbUUvWm05eWJXRjBQV294WENKZ0tWeHVJQ0FnSUdOdmJuTjBJSGRsWVhSb1pYSWdQU0JLVTA5T0xuQmhjbk5sS0hKbGMzVnNkQ2xjYmlBZ0lDQmpiMjV6ZENCMGFXMWxjM1JoYlhBZ1BTQmpkWEp5Wlc1MFZHbHRaUzVuWlhRb0tWeHVJQ0FnSUhKbGRIVnliaUI3SUhScGJXVnpkR0Z0Y0N3Z2QyVmhkR2hsY2lCOVhHNGdJSDBnWTJGMFkyZ2dLR1Z5Y2lrZ2UxeHVJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9YQ0pGY25KdmNpQm1aWFJqYUdsdVp5QjNaV0YwYUdWeU9sd2lMQ0JsY25JcFhHNGdJQ0FnY21WMGRYSnVJRzUxYkd4Y2JpQWdmVnh1ZlNsY2JpSXNJQ0pwYlhCdmNuUWdRWE4wWVd4SlR5Qm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFbFBYQ0pjYm1sdGNHOXlkQ0I3SUVGalkyVnpjMjl5SUgwZ1puSnZiU0JjSW1kdWFXMWNJbHh1WEc1MGVYQmxJRUZ5WjNNZ1BTQjdYRzRnSUNBZ1kyMWtPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYVnh1SUNBZ0lHOTFkRDg2SUNoemRHUnZkWFE2SUhOMGNtbHVaeWtnUFQ0Z2RtOXBaRnh1SUNBZ0lHVnljajg2SUNoemRHUmxjbkk2SUhOMGNtbHVaeWtnUFQ0Z2RtOXBaRnh1ZlZ4dVhHNWxlSEJ2Y25RZ2RIbHdaU0JRY205alpYTnpJRDBnUVhOMFlXeEpUeTVRY205alpYTnpYRzVsZUhCdmNuUWdZMjl1YzNRZ1VISnZZMlZ6Y3lBOUlFRnpkR0ZzU1U4dVVISnZZMlZ6YzF4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2MzVmljSEp2WTJWemN5aGhjbWR6T2lCQmNtZHpLVG9nUVhOMFlXeEpUeTVRY205alpYTnpYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ6ZFdKd2NtOWpaWE56S0Z4dUlDQWdJR050WkRvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwc1hHNGdJQ0FnYjI1UGRYUS9PaUFvYzNSa2IzVjBPaUJ6ZEhKcGJtY3BJRDArSUhadmFXUXNYRzRnSUNBZ2IyNUZjbkkvT2lBb2MzUmtaWEp5T2lCemRISnBibWNwSUQwK0lIWnZhV1FzWEc0cE9pQkJjM1JoYkVsUExsQnliMk5sYzNOY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlITjFZbkJ5YjJObGMzTW9YRzRnSUNBZ1lYSm5jMDl5UTIxa09pQkJjbWR6SUh3Z2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwc1hHNGdJQ0FnYjI1UGRYUTZJQ2h6ZEdSdmRYUTZJSE4wY21sdVp5a2dQVDRnZG05cFpDQTlJSEJ5YVc1MExGeHVJQ0FnSUc5dVJYSnlPaUFvYzNSa1pYSnlPaUJ6ZEhKcGJtY3BJRDArSUhadmFXUWdQU0J3Y21sdWRHVnljaXhjYmlrZ2UxeHVJQ0FnSUdOdmJuTjBJR0Z5WjNNZ1BTQkJjbkpoZVM1cGMwRnljbUY1S0dGeVozTlBja050WkNrZ2ZId2dkSGx3Wlc5bUlHRnlaM05QY2tOdFpDQTlQVDBnWENKemRISnBibWRjSWx4dUlDQWdJR052Ym5OMElIc2dZMjFrTENCbGNuSXNJRzkxZENCOUlEMGdlMXh1SUNBZ0lDQWdJQ0JqYldRNklHRnlaM01nUHlCaGNtZHpUM0pEYldRZ09pQmhjbWR6VDNKRGJXUXVZMjFrTEZ4dUlDQWdJQ0FnSUNCbGNuSTZJR0Z5WjNNZ1B5QnZia1Z5Y2lBNklHRnlaM05QY2tOdFpDNWxjbklnZkh3Z2IyNUZjbklzWEc0Z0lDQWdJQ0FnSUc5MWREb2dZWEpuY3lBL0lHOXVUM1YwSURvZ1lYSm5jMDl5UTIxa0xtOTFkQ0I4ZkNCdmJrOTFkQ3hjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZENCd2NtOWpJRDBnUVhKeVlYa3VhWE5CY25KaGVTaGpiV1FwWEc0Z0lDQWdJQ0FnSUQ4Z1FYTjBZV3hKVHk1UWNtOWpaWE56TG5OMVluQnliMk5sYzNOMktHTnRaQ2xjYmlBZ0lDQWdJQ0FnT2lCQmMzUmhiRWxQTGxCeWIyTmxjM011YzNWaWNISnZZMlZ6Y3loamJXUXBYRzVjYmlBZ0lDQndjbTlqTG1OdmJtNWxZM1FvWENKemRHUnZkWFJjSWl3Z0tGOHNJSE4wWkc5MWREb2djM1J5YVc1bktTQTlQaUJ2ZFhRb2MzUmtiM1YwS1NsY2JpQWdJQ0J3Y205akxtTnZibTVsWTNRb1hDSnpkR1JsY25KY0lpd2dLRjhzSUhOMFpHVnljam9nYzNSeWFXNW5LU0E5UGlCbGNuSW9jM1JrWlhKeUtTbGNiaUFnSUNCeVpYUjFjbTRnY0hKdlkxeHVmVnh1WEc0dktpb2dRSFJvY205M2N5QjdSMHhwWWk1RmNuSnZjbjBnVkdoeWIzZHpJSE4wWkdWeWNpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR1Y0WldNb1kyMWtPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU2tnZTF4dUlDQWdJSEpsZEhWeWJpQkJjbkpoZVM1cGMwRnljbUY1S0dOdFpDa2dQeUJCYzNSaGJFbFBMbEJ5YjJObGMzTXVaWGhsWTNZb1kyMWtLU0E2SUVGemRHRnNTVTh1VUhKdlkyVnpjeTVsZUdWaktHTnRaQ2xjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHVjRaV05CYzNsdVl5aGpiV1E2SUhOMGNtbHVaeUI4SUhOMGNtbHVaMXRkS1RvZ1VISnZiV2x6WlR4emRISnBibWMrSUh0Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUZCeWIyMXBjMlVvS0hKbGMyOXNkbVVzSUhKbGFtVmpkQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGpiV1FwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JCYzNSaGJFbFBMbEJ5YjJObGMzTXVaWGhsWTE5aGMzbHVZM1lvWTIxa0xDQW9YeXdnY21WektTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WemIyeDJaU2hCYzNSaGJFbFBMbEJ5YjJObGMzTXVaWGhsWTE5aGMzbHVZM1pmWm1sdWFYTm9LSEpsY3lrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1pYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZxWldOMEtHVnljbTl5S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQkJjM1JoYkVsUExsQnliMk5sYzNNdVpYaGxZMTloYzNsdVl5aGpiV1FzSUNoZkxDQnlaWE1wSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWE52YkhabEtFRnpkR0ZzU1U4dVVISnZZMlZ6Y3k1bGVHVmpYMlpwYm1semFDaHlaWE1wS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxhbVZqZENobGNuSnZjaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmU2xjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlZOMVluQnliMk5sYzNNb2FXNXBkRG9nYzNSeWFXNW5MQ0JsZUdWak9pQnpkSEpwYm1jZ2ZDQnpkSEpwYm1kYlhTazZJRUZqWTJWemMyOXlQSE4wY21sdVp6NWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpWTjFZbkJ5YjJObGMzTThWRDRvWEc0Z0lDQWdhVzVwZERvZ1ZDeGNiaUFnSUNCbGVHVmpPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU3hjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJQ2h6ZEdSdmRYUTZJSE4wY21sdVp5d2djSEpsZGpvZ1ZDa2dQVDRnVkN4Y2JpazZJRUZqWTJWemMyOXlQRlErWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZUZFdKd2NtOWpaWE56UEZRK0tGeHVJQ0FnSUdsdWFYUTZJRlFzWEc0Z0lDQWdaWGhsWXpvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwc1hHNGdJQ0FnZEhKaGJuTm1iM0p0UHpvZ0tITjBaRzkxZERvZ2MzUnlhVzVuTENCd2NtVjJPaUJVS1NBOVBpQlVMRnh1S1RvZ1FXTmpaWE56YjNJOFZENGdlMXh1SUNBZ0lHeGxkQ0JqZFhKeVpXNTBWbUZzZFdVZ1BTQnBibWwwWEc0Z0lDQWdiR1YwSUhCeWIyTTZJRUZ6ZEdGc1NVOHVVSEp2WTJWemN5QjhJRzUxYkd3Z1BTQnVkV3hzWEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbGNuTWdQU0J1WlhjZ1UyVjBQQ2dwSUQwK0lIWnZhV1ErS0NsY2JseHVJQ0FnSUdaMWJtTjBhVzl1SUhOMVluTmpjbWxpWlNoallXeHNZbUZqYXpvZ0tDa2dQVDRnZG05cFpDazZJQ2dwSUQwK0lIWnZhV1FnZTF4dUlDQWdJQ0FnSUNCcFppQW9jM1ZpYzJOeWFXSmxjbk11YzJsNlpTQTlQVDBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdll5QTlJSE4xWW5CeWIyTmxjM01vWlhobFl5d2dLSE4wWkc5MWRDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFpoYkhWbElEMGdkSEpoYm5ObWIzSnRJRDhnZEhKaGJuTm1iM0p0S0hOMFpHOTFkQ3dnWTNWeWNtVnVkRlpoYkhWbEtTQTZJQ2h6ZEdSdmRYUWdZWE1nVkNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZM1Z5Y21WdWRGWmhiSFZsSUNFOVBTQjJZV3gxWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZFhKeVpXNTBWbUZzZFdVZ1BTQjJZV3gxWlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVtYjNKRllXTm9LQ2hqWWlrZ1BUNGdZMklvS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdjM1ZpYzJOeWFXSmxjbk11WVdSa0tHTmhiR3hpWVdOcktWeHVYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQW9LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZFdKelkzSnBZbVZ5Y3k1a1pXeGxkR1VvWTJGc2JHSmhZMnNwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzNWaWMyTnlhV0psY25NdWMybDZaU0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YjJNL0xtdHBiR3dvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCeWIyTWdQU0J1ZFd4c1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUVGalkyVnpjMjl5S0NncElEMCtJR04xY25KbGJuUldZV3gxWlN3Z2MzVmljMk55YVdKbEtWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCN0lFRmpZMlZ6YzI5eUlIMGdabkp2YlNCY0ltZHVhVzFjSWx4dWFXMXdiM0owSUVGemRHRnNTVThnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hKVDF3aVhHNXBiWEJ2Y25RZ2V5QmxlR1ZqUVhONWJtTWdmU0JtY205dElGd2lMaTl3Y205alpYTnpMbXB6WENKY2JseHVaWGh3YjNKMElIUjVjR1VnVkdsdFpTQTlJRUZ6ZEdGc1NVOHVWR2x0WlZ4dVpYaHdiM0owSUdOdmJuTjBJRlJwYldVZ1BTQkJjM1JoYkVsUExsUnBiV1ZjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdsdWRHVnlkbUZzS0dsdWRHVnlkbUZzT2lCdWRXMWlaWElzSUdOaGJHeGlZV05yUHpvZ0tDa2dQVDRnZG05cFpDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCQmMzUmhiRWxQTGxScGJXVXVhVzUwWlhKMllXd29hVzUwWlhKMllXd3NJQ2dwSUQwK0lIWnZhV1FnWTJGc2JHSmhZMnMvTGlncEtWeHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnZEdsdFpXOTFkQ2gwYVcxbGIzVjBPaUJ1ZFcxaVpYSXNJR05oYkd4aVlXTnJQem9nS0NrZ1BUNGdkbTlwWkNrZ2UxeHVJQ0FnSUhKbGRIVnliaUJCYzNSaGJFbFBMbFJwYldVdWRHbHRaVzkxZENoMGFXMWxiM1YwTENBb0tTQTlQaUIyYjJsa0lHTmhiR3hpWVdOclB5NG9LU2xjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHbGtiR1VvWTJGc2JHSmhZMnMvT2lBb0tTQTlQaUIyYjJsa0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUVGemRHRnNTVTh1VkdsdFpTNXBaR3hsS0NncElEMCtJSFp2YVdRZ1kyRnNiR0poWTJzL0xpZ3BLVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsVUc5c2JDaGNiaUFnSUNCcGJtbDBPaUJ6ZEhKcGJtY3NYRzRnSUNBZ2FXNTBaWEoyWVd3NklHNTFiV0psY2l4Y2JpQWdJQ0JsZUdWak9pQnpkSEpwYm1jZ2ZDQnpkSEpwYm1kYlhTeGNiaWs2SUVGalkyVnpjMjl5UEhOMGNtbHVaejVjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVkJ2Ykd3OFZENG9YRzRnSUNBZ2FXNXBkRG9nVkN4Y2JpQWdJQ0JwYm5SbGNuWmhiRG9nYm5WdFltVnlMRnh1SUNBZ0lHVjRaV002SUhOMGNtbHVaeUI4SUhOMGNtbHVaMXRkTEZ4dUlDQWdJSFJ5WVc1elptOXliVG9nS0hOMFpHOTFkRG9nYzNSeWFXNW5MQ0J3Y21WMk9pQlVLU0E5UGlCVUxGeHVLVG9nUVdOalpYTnpiM0k4VkQ1Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlZCdmJHdzhWRDRvWEc0Z0lDQWdhVzVwZERvZ1ZDeGNiaUFnSUNCcGJuUmxjblpoYkRvZ2JuVnRZbVZ5TEZ4dUlDQWdJR1p1T2lBb2NISmxkam9nVkNrZ1BUNGdWQ0I4SUZCeWIyMXBjMlU4VkQ0c1hHNHBPaUJCWTJObGMzTnZjanhVUGx4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsVUc5c2JEeFVQaWhjYmlBZ0lDQnBibWwwT2lCVUxGeHVJQ0FnSUdsMllXdzZJRzUxYldKbGNpeGNiaUFnSUNCbGVHVmpUM0pHYmpvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwZ2ZDQW9LSEJ5WlhZNklGUXBJRDArSUZRZ2ZDQlFjbTl0YVhObFBGUStLU3hjYmlBZ0lDQjBjbUZ1YzJadmNtMC9PaUFvYzNSa2IzVjBPaUJ6ZEhKcGJtY3NJSEJ5WlhZNklGUXBJRDArSUZRc1hHNHBPaUJCWTJObGMzTnZjanhVUGlCN1hHNGdJQ0FnYkdWMElHTjFjbkpsYm5SV1lXeDFaU0E5SUdsdWFYUmNiaUFnSUNCc1pYUWdkR2x0WlhJNklFRnpkR0ZzU1U4dVZHbHRaU0I4SUc1MWJHd2dQU0J1ZFd4c1hHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxjbk1nUFNCdVpYY2dVMlYwUENncElEMCtJSFp2YVdRK0tDbGNibHh1SUNBZ0lHWjFibU4wYVc5dUlITjFZbk5qY21saVpTaGpZV3hzWW1GamF6b2dLQ2tnUFQ0Z2RtOXBaQ2s2SUNncElEMCtJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnpaWFFvZG1Gc2RXVTZJRlFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0FoUFQwZ1kzVnljbVZ1ZEZaaGJIVmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTNWeWNtVnVkRlpoYkhWbElEMGdkbUZzZFdWY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRXSnpZM0pwWW1WeWN5NW1iM0pGWVdOb0tDaGpZaWtnUFQ0Z1kySW9LU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYVcxbGNpQTlJR2x1ZEdWeWRtRnNLR2wyWVd3c0lDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHVjRaV05QY2tadUlEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdkbUZzZFdVZ1BTQmxlR1ZqVDNKR2JpaGpkWEp5Wlc1MFZtRnNkV1VwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTQnBibk4wWVc1alpXOW1JRkJ5YjIxcGMyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbExuUm9aVzRvYzJWMEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlYwS0haaGJIVmxLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaWGhsWTBGemVXNWpLR1Y0WldOUGNrWnVLUzUwYUdWdUtDaHpkR1J2ZFhRcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sZENoMGNtRnVjMlp2Y20wZ1B5QjBjbUZ1YzJadmNtMG9jM1JrYjNWMExDQmpkWEp5Wlc1MFZtRnNkV1VwSURvZ0tITjBaRzkxZENCaGN5QlVLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYzNWaWMyTnlhV0psY25NdVlXUmtLR05oYkd4aVlXTnJLVnh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUFvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRXSnpZM0pwWW1WeWN5NWtaV3hsZEdVb1kyRnNiR0poWTJzcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MzVmljMk55YVdKbGNuTXVjMmw2WlNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhScGJXVnlQeTVqWVc1alpXd29LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJwYldWeUlEMGdiblZzYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJCWTJObGMzTnZjaWdvS1NBOVBpQmpkWEp5Wlc1MFZtRnNkV1VzSUhOMVluTmpjbWxpWlNsY2JuMWNiaUlzSUNJdktpQmxjMnhwYm5RdFpHbHpZV0pzWlNCQWRIbHdaWE5qY21sd2RDMWxjMnhwYm5RdmJtOHRibUZ0WlhOd1lXTmxJQ292WEc1cGJYQnZjblFnUjNScklHWnliMjBnWENKbmFUb3ZMMGQwYXo5MlpYSnphVzl1UFRRdU1Gd2lYRzVwYlhCdmNuUWdRWE4wWVd3Z1puSnZiU0JjSW1kcE9pOHZRWE4wWVd3L2RtVnljMmx2YmowMExqQmNJbHh1YVcxd2IzSjBJSHNnUTBOUWNtOXdjeUI5SUdaeWIyMGdYQ0puYm1sdFhDSmNibWx0Y0c5eWRDQjdJR2x1ZEhKcGJuTnBZMFZzWlcxbGJuUnpJSDBnWm5KdmJTQmNJbWR1YVcwdlozUnJOQzlxYzNndGNuVnVkR2x0WlZ3aVhHNWNiblI1Y0dVZ1VISnZjSE04VkNCbGVIUmxibVJ6SUVkMGF5NVhhV1JuWlhRc0lGQnliM0J6UGlBOUlFTkRVSEp2Y0hNOFZDd2dVR0Z5ZEdsaGJEeFFjbTl3Y3o0K1hHNWNiazlpYW1WamRDNWhjM05wWjI0b2FXNTBjbWx1YzJsalJXeGxiV1Z1ZEhNc0lIdGNiaUFnSUNCaWIzZzZJRWQwYXk1Q2IzZ3NYRzRnSUNBZ1luVjBkRzl1T2lCSGRHc3VRblYwZEc5dUxGeHVJQ0FnSUdObGJuUmxjbUp2ZURvZ1IzUnJMa05sYm5SbGNrSnZlQ3hjYmlBZ0lDQXZMeUJqYVhKamRXeGhjbkJ5YjJkeVpYTnpPaUJCYzNSaGJDNURhWEpqZFd4aGNsQnliMmR5WlhOekxGeHVJQ0FnSUdSeVlYZHBibWRoY21WaE9pQkhkR3N1UkhKaGQybHVaMEZ5WldFc1hHNGdJQ0FnWlc1MGNuazZJRWQwYXk1RmJuUnllU3hjYmlBZ0lDQnBiV0ZuWlRvZ1IzUnJMa2x0WVdkbExGeHVJQ0FnSUd4aFltVnNPaUJIZEdzdVRHRmlaV3dzWEc0Z0lDQWdiR1YyWld4aVlYSTZJRWQwYXk1TVpYWmxiRUpoY2l4Y2JpQWdJQ0J0Wlc1MVluVjBkRzl1T2lCSGRHc3VUV1Z1ZFVKMWRIUnZiaXhjYmlBZ0lDQnZkbVZ5YkdGNU9pQkhkR3N1VDNabGNteGhlU3hjYmlBZ0lDQndiM0J2ZG1WeU9pQkhkR3N1VUc5d2IzWmxjaXhjYmlBZ0lDQnlaWFpsWVd4bGNqb2dSM1JyTGxKbGRtVmhiR1Z5TEZ4dUlDQWdJSE5qY205c2JHVmtkMmx1Wkc5M09pQkhkR3N1VTJOeWIyeHNaV1JYYVc1a2IzY3NYRzRnSUNBZ2MyeHBaR1Z5T2lCQmMzUmhiQzVUYkdsa1pYSXNYRzRnSUNBZ2MzUmhZMnM2SUVkMGF5NVRkR0ZqYXl4Y2JpQWdJQ0J6ZDJsMFkyZzZJRWQwYXk1VGQybDBZMmdzWEc0Z0lDQWdkRzluWjJ4bFluVjBkRzl1T2lCSGRHc3VWRzluWjJ4bFFuVjBkRzl1TEZ4dUlDQWdJSGRwYm1SdmR6b2dRWE4wWVd3dVYybHVaRzkzTEZ4dWZTbGNibHh1WkdWamJHRnlaU0JuYkc5aVlXd2dlMXh1SUNBZ0lHNWhiV1Z6Y0dGalpTQktVMWdnZTF4dUlDQWdJQ0FnSUNCcGJuUmxjbVpoWTJVZ1NXNTBjbWx1YzJsalJXeGxiV1Z1ZEhNZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05NE9pQlFjbTl3Y3p4SGRHc3VRbTk0TENCSGRHc3VRbTk0TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQmlkWFIwYjI0NklGQnliM0J6UEVkMGF5NUNkWFIwYjI0c0lFZDBheTVDZFhSMGIyNHVRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUdObGJuUmxjbUp2ZURvZ1VISnZjSE04UjNSckxrTmxiblJsY2tKdmVDd2dSM1JyTGtObGJuUmxja0p2ZUM1RGIyNXpkSEoxWTNSdmNsQnliM0J6UGx4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnWTJseVkzVnNZWEp3Y205bmNtVnpjem9nVUhKdmNITThRWE4wWVd3dVEybHlZM1ZzWVhKUWNtOW5jbVZ6Y3l3Z1FYTjBZV3d1UTJseVkzVnNZWEpRY205bmNtVnpjeTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pISmhkMmx1WjJGeVpXRTZJRkJ5YjNCelBFZDBheTVFY21GM2FXNW5RWEpsWVN3Z1IzUnJMa1J5WVhkcGJtZEJjbVZoTGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiblJ5ZVRvZ1VISnZjSE04UjNSckxrVnVkSEo1TENCSGRHc3VSVzUwY25rdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2x0WVdkbE9pQlFjbTl3Y3p4SGRHc3VTVzFoWjJVc0lFZDBheTVKYldGblpTNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdGaVpXdzZJRkJ5YjNCelBFZDBheTVNWVdKbGJDd2dSM1JyTGt4aFltVnNMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYWmxiR0poY2pvZ1VISnZjSE04UjNSckxreGxkbVZzUW1GeUxDQkhkR3N1VEdWMlpXeENZWEl1UTI5dWMzUnlkV04wYjNKUWNtOXdjejVjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWxiblZpZFhSMGIyNDZJRkJ5YjNCelBFZDBheTVOWlc1MVFuVjBkRzl1TENCSGRHc3VUV1Z1ZFVKMWRIUnZiaTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ2IzWmxjbXhoZVRvZ1VISnZjSE04UjNSckxrOTJaWEpzWVhrc0lFZDBheTVQZG1WeWJHRjVMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IzQnZkbVZ5T2lCUWNtOXdjenhIZEdzdVVHOXdiM1psY2l3Z1IzUnJMbEJ2Y0c5MlpYSXVRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRtVmhiR1Z5T2lCUWNtOXdjenhIZEdzdVVtVjJaV0ZzWlhJc0lFZDBheTVTWlhabFlXeGxjaTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MyTnliMnhzWldSM2FXNWtiM2M2SUZCeWIzQnpQRWQwYXk1VFkzSnZiR3hsWkZkcGJtUnZkeXdnUjNSckxsTmpjbTlzYkdWa1YybHVaRzkzTGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpiR2xrWlhJNklGQnliM0J6UEVGemRHRnNMbE5zYVdSbGNpd2dRWE4wWVd3dVUyeHBaR1Z5TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkR0ZqYXpvZ1VISnZjSE04UjNSckxsTjBZV05yTENCSGRHc3VVM1JoWTJzdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFEb2dVSEp2Y0hNOFIzUnJMbE4zYVhSamFDd2dSM1JyTGxOM2FYUmphQzVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOW5aMnhsWW5WMGRHOXVPaUJRY205d2N6eEhkR3N1Vkc5bloyeGxRblYwZEc5dUxDQkhkR3N1Vkc5bloyeGxRblYwZEc5dUxrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVc1a2IzYzZJRkJ5YjNCelBFRnpkR0ZzTGxkcGJtUnZkeXdnUVhOMFlXd3VWMmx1Wkc5M0xrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNTlYRzVjYm1WNGNHOXlkQ0FxSUdaeWIyMGdYQ0puYm1sdEwyZDBhelF2YW5ONExYSjFiblJwYldWY0lseHVJaXdnSW1sdGNHOXlkQ0JIZEdzZ1puSnZiU0JjSW1kcE9pOHZSM1JyUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQkhhVzhnWm5KdmJTQmNJbWRwT2k4dlIybHZQM1psY25OcGIyNDlNaTR3WENKY2JtbHRjRzl5ZENCSFQySnFaV04wSUdaeWIyMGdYQ0puYVRvdkwwZFBZbXBsWTNSY0lseHVhVzF3YjNKMElIc2daMlYwVkhsd1pTd2diMjVEYkdWaGJuVndMQ0JCWTJObGMzTnZjaXdnUm5KaFoyMWxiblFnZlNCbWNtOXRJRndpTGk0dmFXNWtaWGd1YW5OY0lseHVhVzF3YjNKMElIc2dZMjl1Wm1sbmRXVWdmU0JtY205dElGd2lMaTR2YW5ONEwyVnVkaTVxYzF3aVhHNWNibU52Ym5OMElHUjFiVzE1UW5WcGJHUmxjaUE5SUc1bGR5QkhkR3N1UW5WcGJHUmxjaWdwWEc1Y2JtWjFibU4wYVc5dUlHRmtaQ2h3WVhKbGJuUTZJRWQwYXk1Q2RXbHNaR0ZpYkdVc0lHTm9hV3hrT2lCSFQySnFaV04wTGs5aWFtVmpkQ3dnWHpvZ2JuVnRZbVZ5S1NCN1hHNGdJQ0FnYVdZZ0tDRnpjR1ZqYVdGc1FXUmtLSEJoY21WdWRDd2dZMmhwYkdRc0lGOHBLU0I3WEc0Z0lDQWdJQ0FnSUhCaGNtVnVkQzUyWm5WdVkxOWhaR1JmWTJocGJHUW9aSFZ0YlhsQ2RXbHNaR1Z5TENCamFHbHNaQ3dnWjJWMFZIbHdaU2hqYUdsc1pDa3BYRzRnSUNBZ2ZWeHVmVnh1WEc1bWRXNWpkR2x2YmlCemNHVmphV0ZzVW1WdGIzWmxLRjl3WVhKbGJuUTZJRWRQWW1wbFkzUXVUMkpxWldOMExDQmZZMmhwYkdRNklFZFBZbXBsWTNRdVQySnFaV04wS1NCN1hHNGdJQ0FnTHk4Z1ZFOUVUem9nWVdSa0lHRnVlU0J6Y0dWamFXRnNJR05oYzJWY2JpQWdJQ0J5WlhSMWNtNGdabUZzYzJWY2JuMWNibHh1Wm5WdVkzUnBiMjRnYzNCbFkybGhiRUZrWkNod1lYSmxiblE2SUVkUFltcGxZM1F1VDJKcVpXTjBMQ0JqYUdsc1pEb2dSMDlpYW1WamRDNVBZbXBsWTNRc0lGODZJRzUxYldKbGNpa2dlMXh1SUNBZ0lDOHZJRlJQUkU4NklHRmtaQ0JoYm5rZ2IzUm9aWElnYzNCbFkybGhiQ0JqWVhObFhHNGdJQ0FnYVdZZ0tGeHVJQ0FnSUNBZ0lDQmphR2xzWkNCcGJuTjBZVzVqWlc5bUlFZDBheTVCWkdwMWMzUnRaVzUwSUNZbVhHNGdJQ0FnSUNBZ0lGd2ljMlYwWDJGa2FuVnpkRzFsYm5SY0lpQnBiaUJ3WVhKbGJuUWdKaVpjYmlBZ0lDQWdJQ0FnZEhsd1pXOW1JSEJoY21WdWRDNXpaWFJmWVdScWRYTjBiV1Z1ZENBOVBUMGdYQ0ptZFc1amRHbHZibHdpWEc0Z0lDQWdLU0I3WEc0Z0lDQWdJQ0FnSUhCaGNtVnVkQzV6WlhSZllXUnFkWE4wYldWdWRDaGphR2xzWkNsY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVmNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9YRzRnSUNBZ0lDQWdJR05vYVd4a0lHbHVjM1JoYm1ObGIyWWdSM1JyTGxkcFpHZGxkQ0FtSmx4dUlDQWdJQ0FnSUNCd1lYSmxiblFnYVc1emRHRnVZMlZ2WmlCSGRHc3VVM1JoWTJzZ0ppWmNiaUFnSUNBZ0lDQWdZMmhwYkdRdWJtRnRaU0FoUFQwZ1hDSmNJaUFtSmx4dUlDQWdJQ0FnSUNCamFHbHNaQzV1WVcxbElDRTlQU0J1ZFd4c0lDWW1YRzRnSUNBZ0lDQWdJR2RsZEZSNWNHVW9ZMmhwYkdRcElEMDlQU0JjSW01aGJXVmtYQ0pjYmlBZ0lDQXBJSHRjYmlBZ0lDQWdJQ0FnY0dGeVpXNTBMbUZrWkY5dVlXMWxaQ2hqYUdsc1pDd2dZMmhwYkdRdWJtRnRaU2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5ZFdWY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCSGRHc3VVRzl3YjNabGNpQW1KaUJ3WVhKbGJuUWdhVzV6ZEdGdVkyVnZaaUJIZEdzdVRXVnVkVUoxZEhSdmJpa2dlMXh1SUNBZ0lDQWdJQ0J3WVhKbGJuUXVjMlYwWDNCdmNHOTJaWElvWTJocGJHUXBYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjblZsWEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0Z4dUlDQWdJQ0FnSUNCamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVkcGJ5NU5aVzUxVFc5a1pXd2dKaVpjYmlBZ0lDQWdJQ0FnS0hCaGNtVnVkQ0JwYm5OMFlXNWpaVzltSUVkMGF5NU5aVzUxUW5WMGRHOXVJSHg4SUhCaGNtVnVkQ0JwYm5OMFlXNWpaVzltSUVkMGF5NVFiM0J2ZG1WeVRXVnVkU2xjYmlBZ0lDQXBJSHRjYmlBZ0lDQWdJQ0FnY0dGeVpXNTBMbk5sZEY5dFpXNTFYMjF2WkdWc0tHTm9hV3hrS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpWeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaGphR2xzWkNCcGJuTjBZVzVqWlc5bUlFZHBieTVOWlc1MVNYUmxiU0FtSmlCd1lYSmxiblFnYVc1emRHRnVZMlZ2WmlCSGFXOHVUV1Z1ZFNrZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJVVDBSUE9seHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaGphR2xzWkNCcGJuTjBZVzVqWlc5bUlFZDBheTVYYVc1a2IzY2dKaVlnY0dGeVpXNTBJR2x1YzNSaGJtTmxiMllnUjNSckxrRndjR3hwWTJGMGFXOXVLU0I3WEc0Z0lDQWdJQ0FnSUhCaGNtVnVkQzVoWkdSZmQybHVaRzkzS0dOb2FXeGtLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEoxWlZ4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVkMGF5NVVaWGgwUW5WbVptVnlJQ1ltSUhCaGNtVnVkQ0JwYm5OMFlXNWpaVzltSUVkMGF5NVVaWGgwVm1sbGR5a2dlMXh1SUNBZ0lDQWdJQ0J3WVhKbGJuUXVjMlYwWDJKMVptWmxjaWhqYUdsc1pDbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUnlkV1ZjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1ptRnNjMlZjYm4xY2JseHVablZ1WTNScGIyNGdjbVZ0YjNabEtIQmhjbVZ1ZERvZ1IwOWlhbVZqZEM1UFltcGxZM1FzSUdOb2FXeGtPaUJIVDJKcVpXTjBMazlpYW1WamRDa2dlMXh1SUNBZ0lHbG1JQ2h6Y0dWamFXRnNVbVZ0YjNabEtIQmhjbVZ1ZEN3Z1kyaHBiR1FwS1NCeVpYUjFjbTVjYmx4dUlDQWdJR2xtSUNod1lYSmxiblFnYVc1emRHRnVZMlZ2WmlCSGRHc3VWMmxrWjJWMElDWW1JR05vYVd4a0lHbHVjM1JoYm1ObGIyWWdSM1JyTGtWMlpXNTBRMjl1ZEhKdmJHeGxjaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnY0dGeVpXNTBMbkpsYlc5MlpWOWpiMjUwY205c2JHVnlLR05vYVd4a0tWeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaGNJbk5sZEY5amFHbHNaRndpSUdsdUlIQmhjbVZ1ZENBbUppQjBlWEJsYjJZZ2NHRnlaVzUwTG5ObGRGOWphR2xzWkNBOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCaGNtVnVkQzV6WlhSZlkyaHBiR1FvYm5Wc2JDbGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9YQ0p5WlcxdmRtVmNJaUJwYmlCd1lYSmxiblFnSmlZZ2RIbHdaVzltSUhCaGNtVnVkQzV5WlcxdmRtVWdQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQndZWEpsYm5RdWNtVnRiM1psS0dOb2FXeGtLVnh1SUNBZ0lIMWNibHh1SUNBZ0lIUm9jbTkzSUVWeWNtOXlLR0JqWVc1dWIzUWdjbVZ0YjNabElDUjdZMmhwYkdSOUlHWnliMjBnSkh0d1lYSmxiblI5WUNsY2JuMWNibHh1WTI5dWMzUWdleUJoWkdSRGFHbHNaQ3dnYVc1MGNtbHVjMmxqUld4bGJXVnVkSE1nZlNBOUlHTnZibVpwWjNWbEtIdGNiaUFnSUNCelpYUkRjM01vYjJKcVpXTjBMQ0JqYzNNcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0NFb2IySnFaV04wSUdsdWMzUmhibU5sYjJZZ1IzUnJMbGRwWkdkbGRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9SWEp5YjNJb1lHTmhibTV2ZENCelpYUWdZM056SUc5dUlDUjdiMkpxWldOMGZXQXBLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWTNSNElEMGdiMkpxWldOMExtZGxkRjl6ZEhsc1pWOWpiMjUwWlhoMEtDbGNiaUFnSUNBZ0lDQWdiR1YwSUhCeWIzWnBaR1Z5T2lCSGRHc3VRM056VUhKdmRtbGtaWEpjYmx4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6WlhSMFpYSWdQU0FvWTNOek9pQnpkSEpwYm1jcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWTNOekxtbHVZMngxWkdWektGd2llMXdpS1NCOGZDQWhZM056TG1sdVkyeDFaR1Z6S0Z3aWZWd2lLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOemN5QTlJR0FxSUhzZ0pIdGpjM045SUgxZ1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod2NtOTJhV1JsY2lrZ1kzUjRMbkpsYlc5MlpWOXdjbTkyYVdSbGNpaHdjbTkyYVdSbGNpbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZkbWxrWlhJZ1BTQnVaWGNnUjNSckxrTnpjMUJ5YjNacFpHVnlLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnliM1pwWkdWeUxteHZZV1JmWm5KdmJWOXpkSEpwYm1jb1kzTnpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kzUjRMbUZrWkY5d2NtOTJhV1JsY2lod2NtOTJhV1JsY2l3Z1IzUnJMbE5VV1V4RlgxQlNUMVpKUkVWU1gxQlNTVTlTU1ZSWlgxVlRSVklwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvWTNOeklHbHVjM1JoYm1ObGIyWWdRV05qWlhOemIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITmxkSFJsY2loamMzTXVaMlYwS0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmthWE53YjNObElEMGdZM056TG5OMVluTmpjbWxpWlNnb0tTQTlQaUJ6WlhSMFpYSW9ZM056TG1kbGRDZ3BLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHOXVRMnhsWVc1MWNDaGthWE53YjNObEtWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMGRHVnlLR056Y3lsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgwc1hHNGdJQ0FnYzJWMFEyeGhjM01vYjJKcVpXTjBMQ0JqYkdGemMwNWhiV1VwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0VvYjJKcVpXTjBJR2x1YzNSaGJtTmxiMllnUjNSckxsZHBaR2RsZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b1JYSnliM0lvWUdOaGJtNXZkQ0J6WlhRZ1kyeGhjM05PWVcxbElHOXVJQ1I3YjJKcVpXTjBmV0FwS1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0dOc1lYTnpUbUZ0WlNCcGJuTjBZVzVqWlc5bUlFRmpZMlZ6YzI5eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1F1WTNOelEyeGhjM05sY3lBOUlHTnNZWE56VG1GdFpTNW5aWFFvS1M1emNHeHBkQ2d2WEZ4ekt5OHBYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrYVhOd2IzTmxJRDBnWTJ4aGMzTk9ZVzFsTG5OMVluTmpjbWxpWlNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBb0tTQTlQaUFvYjJKcVpXTjBMbU56YzBOc1lYTnpaWE1nUFNCamJHRnpjMDVoYldVdVoyVjBLQ2t1YzNCc2FYUW9MMXhjY3lzdktTa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J2YmtOc1pXRnVkWEFvWkdsemNHOXpaU2xjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZEM1elpYUmZZM056WDJOc1lYTnpaWE1vWTJ4aGMzTk9ZVzFsTG5Od2JHbDBLQzljWEhNckx5a3BYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlMRnh1SUNBZ0lHRmtaRU5vYVd4a0tIQmhjbVZ1ZEN3Z1kyaHBiR1FzSUdsdVpHVjRJRDBnTFRFcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0NFb1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCSFQySnFaV04wTGs5aWFtVmpkQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR05vYVd4a0lEMGdSM1JyTGt4aFltVnNMbTVsZHloVGRISnBibWNvWTJocGJHUXBLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSE53WldOcFlXeEJaR1FvY0dGeVpXNTBMQ0JqYUdsc1pDd2dhVzVrWlhncEtTQnlaWFIxY201Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvY0dGeVpXNTBJR2x1YzNSaGJtTmxiMllnUm5KaFoyMWxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoY21WdWRDNWhaR1JEYUdsc1pDaGphR2xzWkNsY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJseHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIQmhjbVZ1ZENCcGJuTjBZVzVqWlc5bUlFZDBheTVDZFdsc1pHRmliR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVaeVlXZHRaVzUwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQmphQ0J2WmlCamFHbHNaQzVqYUdsc1pISmxiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhaR1FvY0dGeVpXNTBMQ0JqYUN3Z2FXNWtaWGdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1F1WTI5dWJtVmpkQ2hjSW1Ob2FXeGtMV0ZrWkdWa1hDSXNJQ2hmTENCamFEb2dkVzVyYm05M2Jpd2dhVzVrWlhnNklHNTFiV0psY2lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JU2hqYUNCcGJuTjBZVzVqWlc5bUlFZFBZbXBsWTNRdVQySnFaV04wS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWhVZVhCbFJYSnliM0lvWUdOaGJtNXZkQ0JoWkdRZ0pIdGphSDBnZEc4Z0pIdHdZWEpsYm5SOVlDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY201Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFpHUkRhR2xzWkNod1lYSmxiblFzSUdOb0xDQnBibVJsZUNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhwYkdRdVkyOXVibVZqZENoY0ltTm9hV3hrTFhKbGJXOTJaV1JjSWl3Z0tGOHNJR05vT2lCMWJtdHViM2R1S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hLR05vSUdsdWMzUmhibU5sYjJZZ1IwOWlhbVZqZEM1UFltcGxZM1FwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLRlI1Y0dWRmNuSnZjaWhnWTJGdWJtOTBJSEpsYlc5MlpTQWtlMk5vZlNCbWNtOXRJQ1I3Y0dGeVpXNTBmV0FwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZ0YjNabEtIQmhjbVZ1ZEN3Z1kyZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5dVEyeGxZVzUxY0Nnb0tTQTlQaUJqYUdsc1pDNWtaWE4wY205NUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR0ZrWkNod1lYSmxiblFzSUdOb2FXeGtMQ0JwYm1SbGVDbGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlibHh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2RHaHliM2NnUlhKeWIzSW9ZR05oYm01dmRDQmhaR1FnSkh0amFHbHNaSDBnZEc4Z0pIdHdZWEpsYm5SOVlDbGNiaUFnSUNCOUxGeHVmU2xjYmx4dVpYaHdiM0owSUhzZ1JuSmhaMjFsYm5Rc0lHbHVkSEpwYm5OcFkwVnNaVzFsYm5SeklIMWNibVY0Y0c5eWRDQjdJR3B6ZUN3Z2FuTjRjeUI5SUdaeWIyMGdYQ0l1TGk5cWMzZ3Zhbk40TG1welhDSmNiaUlzSUNKcGJYQnZjblFnZXlCelpYUlRhRzkzUW1GeUxDQnpaWFJUYUc5M1EzSnZjM05vWVdseUxDQnphRzkzUW1GeUxDQnphRzkzUTNKdmMzTm9ZV2x5SUgwZ1puSnZiU0JjSWtCamIyMXRiMjR2ZG1GeWMxd2lYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJSEpsY1hWbGMzUklZVzVrYkdWeUtISmxjWFZsYzNRNklITjBjbWx1Wnl3Z2NtVnpPaUFvY21WemNHOXVjMlU2SUdGdWVTa2dQVDRnZG05cFpDa2dlMXh1SUNCamIyNXpkQ0JoY21keklEMGdjbVZ4ZFdWemRDNXpjR3hwZENnbk9pY3BYRzVjYmlBZ2MzZHBkR05vSUNoaGNtZHpXekJkS1NCN1hHNGdJQ0FnWTJGelpTQW5ZbUZ5SnpwY2JpQWdJQ0FnSUhOM2FYUmphQ0FvWVhKbmMxc3hYU2tnZTF4dUlDQWdJQ0FnSUNCallYTmxJQ2QwYjJkbmJHVW5PaUJ5WlhSMWNtNGdjbVZ6S0hObGRGTm9iM2RDWVhJb0lYTm9iM2RDWVhJdVoyVjBLQ2twS1Z4dUlDQWdJQ0FnSUNCa1pXWmhkV3gwT2lCeVpYUjFjbTRnY21WektDZFZibXR1YjNkdUlHTnZiVzFoYm1RZ1ptOXlJR0poY2k0bktWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUdOaGMyVWdKMk55YjNOemFHRnBjaWM2WEc0Z0lDQWdJQ0J6ZDJsMFkyZ2dLR0Z5WjNOYk1WMHBJSHRjYmlBZ0lDQWdJQ0FnWTJGelpTQW5kRzluWjJ4bEp6b2djbVYwZFhKdUlISmxjeWh6WlhSVGFHOTNRM0p2YzNOb1lXbHlLQ0Z6YUc5M1EzSnZjM05vWVdseUxtZGxkQ2dwS1NsY2JpQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvZ2NtVjBkWEp1SUhKbGN5Z25WVzVyYm05M2JpQmpiMjF0WVc1a0lHWnZjaUJqY205emMyaGhhWEl1SnlsY2JpQWdJQ0FnSUgxY2JpQWdJQ0JrWldaaGRXeDBPbHh1SUNBZ0lDQWdjbVYwZFhKdUlISmxjeWduVlc1cmJtOTNiaUJ5WlhGMVpYTjBMaWNwWEc0Z0lIMWNibjFjYmlJc0lDSnBiWEJ2Y25RZ1FYTjBZV3dnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hKVDF3aVhHNXBiWEJ2Y25RZ1IybHZJR1p5YjIwZ1hDSm5hVG92TDBkcGJ6OTJaWEp6YVc5dVBUSXVNRndpWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCeVpXRmtSbWxzWlNod1lYUm9PaUJ6ZEhKcGJtY3BPaUJ6ZEhKcGJtY2dlMXh1SUNBZ0lISmxkSFZ5YmlCQmMzUmhiQzV5WldGa1gyWnBiR1VvY0dGMGFDa2dmSHdnWENKY0lseHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnY21WaFpFWnBiR1ZCYzNsdVl5aHdZWFJvT2lCemRISnBibWNwT2lCUWNtOXRhWE5sUEhOMGNtbHVaejRnZTF4dUlDQWdJSEpsZEhWeWJpQnVaWGNnVUhKdmJXbHpaU2dvY21WemIyeDJaU3dnY21WcVpXTjBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lFRnpkR0ZzTG5KbFlXUmZabWxzWlY5aGMzbHVZeWh3WVhSb0xDQW9YeXdnY21WektTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGMyOXNkbVVvUVhOMFlXd3VjbVZoWkY5bWFXeGxYMlpwYm1semFDaHlaWE1wSUh4OElGd2lYQ0lwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxhbVZqZENobGNuSnZjaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQjlLVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2QzSnBkR1ZHYVd4bEtIQmhkR2c2SUhOMGNtbHVaeXdnWTI5dWRHVnVkRG9nYzNSeWFXNW5LVG9nZG05cFpDQjdYRzRnSUNBZ1FYTjBZV3d1ZDNKcGRHVmZabWxzWlNod1lYUm9MQ0JqYjI1MFpXNTBLVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2QzSnBkR1ZHYVd4bFFYTjVibU1vY0dGMGFEb2djM1J5YVc1bkxDQmpiMjUwWlc1ME9pQnpkSEpwYm1jcE9pQlFjbTl0YVhObFBIWnZhV1ErSUh0Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUZCeWIyMXBjMlVvS0hKbGMyOXNkbVVzSUhKbGFtVmpkQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQkJjM1JoYkM1M2NtbDBaVjltYVd4bFgyRnplVzVqS0hCaGRHZ3NJR052Ym5SbGJuUXNJQ2hmTENCeVpYTXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpiMngyWlNoQmMzUmhiQzUzY21sMFpWOW1hV3hsWDJacGJtbHphQ2h5WlhNcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvWlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WldwbFkzUW9aWEp5YjNJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnZlNsY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJRzF2Ym1sMGIzSkdhV3hsS0Z4dUlDQWdJSEJoZEdnNklITjBjbWx1Wnl4Y2JpQWdJQ0JqWVd4c1ltRmphem9nS0dacGJHVTZJSE4wY21sdVp5d2daWFpsYm5RNklFZHBieTVHYVd4bFRXOXVhWFJ2Y2tWMlpXNTBLU0E5UGlCMmIybGtMRnh1S1RvZ1IybHZMa1pwYkdWTmIyNXBkRzl5SUh0Y2JpQWdJQ0J5WlhSMWNtNGdRWE4wWVd3dWJXOXVhWFJ2Y2w5bWFXeGxLSEJoZEdnc0lDaG1hV3hsT2lCemRISnBibWNzSUdWMlpXNTBPaUJIYVc4dVJtbHNaVTF2Ym1sMGIzSkZkbVZ1ZENrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JqWVd4c1ltRmpheWhtYVd4bExDQmxkbVZ1ZENsY2JpQWdJQ0I5S1NGY2JuMWNiaUlzSUNKcGJYQnZjblFnWVhCd0lHWnliMjBnSjJGbmN5OW5kR3MwTDJGd2NDZGNibWx0Y0c5eWRDQjdJRzF2Ym1sMGIzSkdhV3hsSUgwZ1puSnZiU0FuWVdkekwyWnBiR1VuWEc1cGJYQnZjblFnZXlCbGVHVmpJSDBnWm5KdmJTQW5ZV2R6TDNCeWIyTmxjM01uWEc1Y2JtTnZibk4wSUZSTlVDQTlJRndpTDNSdGNGd2lYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqYjIxd2FXeGxVMk56Y3lncE9pQnpkSEpwYm1jZ2UxeHVJQ0IwY25rZ2UxeHVJQ0FnSUdWNFpXTW9ZSE5oYzNNZ0pIdFRVa045TDNOMGVXeGxMbk5qYzNNZ0pIdFVUVkI5TDNOMGVXeGxMbU56YzJBcFhHNGdJQ0FnWVhCd0xtRndjR3g1WDJOemN5Z25MM1J0Y0M5emRIbHNaUzVqYzNNbktWeHVJQ0FnSUhKbGRIVnliaUJnSkh0VVRWQjlMM04wZVd4bExuTmpjM05nWEc0Z0lIMGdZMkYwWTJnb1pYSnlLU0I3WEc0Z0lDQWdjSEpwYm5SbGNuSW9KMFZ5Y205eUlHTnZiWEJwYkdsdVp5QnpZM056SUdacGJHVnpMaWNzSUdWeWNpbGNiaUFnSUNCeVpYUjFjbTRnSnlkY2JpQWdmVnh1ZlZ4dVhHNHZMeUJJYjNRZ1VtVnNiMkZrSUZOamMzTmNiaWhtZFc1amRHbHZiaWdwSUh0Y2JpQWdZMjl1YzNRZ2MyTnpjMFpwYkdWeklEMWNiaUFnSUNCbGVHVmpLR0JtYVc1a0lDMU1JQ1I3VTFKRGZTQXRhVzVoYldVZ0p5b3VjMk56Y3lkZ0tWeHVJQ0FnSUNBZ0xuTndiR2wwS0NkY1hHNG5LVnh1WEc0Z0lDOHZJRU52YlhCcGJHVWdjMk56Y3lCbWFXeGxjeUJoZENCemRHRnlkSFZ3WEc0Z0lHTnZiWEJwYkdWVFkzTnpLQ2xjYmx4dUlDQnpZM056Um1sc1pYTmNiaUFnSUNBdVptOXlSV0ZqYUNobWFXeGxJRDArWEc0Z0lDQWdJQ0J0YjI1cGRHOXlSbWxzWlNobWFXeGxMQ0JqYjIxd2FXeGxVMk56Y3lsY2JpQWdJQ0FwWEc1OUtTZ3BYRzRpTENBaWFXMXdiM0owSUdGd2NDQm1jbTl0SUZ3aVlXZHpMMmQwYXpRdllYQndYQ0pjYm1sdGNHOXlkQ0I3SUVGemRHRnNMQ0JIZEdzZ2ZTQm1jbTl0SUZ3aVlXZHpMMmQwYXpSY0lseHVhVzF3YjNKMElFRnpkR0ZzVG05MGFXWmtJR1p5YjIwZ1hDSm5hVG92TDBGemRHRnNUbTkwYVdaa1hDSmNibWx0Y0c5eWRDQk9iM1JwWm1sallYUnBiMjRnWm5KdmJTQmNJa0IzYVdSblpYUnpMMDV2ZEdsbWFXTmhkR2x2Ymk5T2IzUnBabWxqWVhScGIyNWNJbHh1YVcxd2IzSjBJSHNnUm05eUxDQmpjbVZoZEdWVGRHRjBaU3dnYjI1RGJHVmhiblZ3SUgwZ1puSnZiU0JjSW1GbmMxd2lYRzVwYlhCdmNuUWdSMlJySUdaeWIyMGdYQ0puYVRvdkwwZGthejkyWlhKemFXOXVQVFF1TUZ3aVhHNXBiWEJ2Y25RZ2V5QnpaWFJPYjNScFptbGpZWFJwYjI1elRHVnVaM1JvSUgwZ1puSnZiU0JjSWtCamIyMXRiMjR2ZG1GeWMxd2lYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJRTV2ZEdsbWFXTmhkR2x2YmxCdmNIVndjeWh0YjI1cGRHOXlPaUJIWkdzdVRXOXVhWFJ2Y2lrZ2UxeHVYRzRnSUdOdmJuTjBJRzV2ZEdsbVpDQTlJRUZ6ZEdGc1RtOTBhV1prTG1kbGRGOWtaV1poZFd4MEtDbGNibHh1SUNCamIyNXpkQ0JiYm05MGFXWnBZMkYwYVc5dWN5d2djMlYwVG05MGFXWnBZMkYwYVc5dWMxMGdQU0JqY21WaGRHVlRkR0YwWlNoY2JpQWdJQ0J1WlhjZ1FYSnlZWGs4UVhOMFlXeE9iM1JwWm1RdVRtOTBhV1pwWTJGMGFXOXVQaWdwTEZ4dUlDQXBYRzVjYmlBZ1kyOXVjM1FnYm05MGFXWnBaV1JJWVc1a2JHVnlJRDBnYm05MGFXWmtMbU52Ym01bFkzUW9YQ0p1YjNScFptbGxaRndpTENBb1h5d2dhV1FzSUhKbGNHeGhZMlZrS1NBOVBpQjdYRzRnSUNBZ1kyOXVjM1FnYm05MGFXWnBZMkYwYVc5dUlEMGdibTkwYVdaa0xtZGxkRjl1YjNScFptbGpZWFJwYjI0b2FXUXBYRzVjYmlBZ0lDQnBaaUFvY21Wd2JHRmpaV1FnSmlZZ2JtOTBhV1pwWTJGMGFXOXVjeTVuWlhRb0tTNXpiMjFsS0NodUtTQTlQaUJ1TG1sa0lEMDlQU0JwWkNrcElIdGNiaUFnSUNBZ0lITmxkRTV2ZEdsbWFXTmhkR2x2Ym5Nb0tHNXpLU0E5UGlCdWN5NXRZWEFvS0c0cElEMCtJQ2h1TG1sa0lEMDlQU0JwWkNBL0lHNXZkR2xtYVdOaGRHbHZiaUE2SUc0cEtTbGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnYzJWMFRtOTBhV1pwWTJGMGFXOXVjeWdvYm5NcElEMCtJRnR1YjNScFptbGpZWFJwYjI0c0lDNHVMbTV6WFNsY2JpQWdJQ0I5WEc0Z0lIMHBYRzVjYmlBZ1kyOXVjM1FnY21WemIyeDJaV1JJWVc1a2JHVnlJRDBnYm05MGFXWmtMbU52Ym01bFkzUW9YQ0p5WlhOdmJIWmxaRndpTENBb1h5d2dhV1FwSUQwK0lIdGNiaUFnSUNCelpYUk9iM1JwWm1sallYUnBiMjV6S0NodWN5a2dQVDRnYm5NdVptbHNkR1Z5S0NodUtTQTlQaUJ1TG1sa0lDRTlQU0JwWkNrcFhHNGdJSDBwWEc1Y2JpQWdiMjVEYkdWaGJuVndLQ2dwSUQwK0lIdGNiaUFnSUNCdWIzUnBabVF1WkdselkyOXVibVZqZENodWIzUnBabWxsWkVoaGJtUnNaWElwWEc0Z0lDQWdibTkwYVdaa0xtUnBjMk52Ym01bFkzUW9jbVZ6YjJ4MlpXUklZVzVrYkdWeUtWeHVJQ0I5S1Z4dVhHNGdJSEpsZEhWeWJpQW9YRzRnSUNBZ1BIZHBibVJ2ZDF4dUlDQWdJQ0FnSkQxN0tITmxiR1lwSUQwK0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCelpXeG1MbVJsYzNSeWIza29LU2w5WEc0Z0lDQWdJQ0JqYkdGemN6MWNJazV2ZEdsbWFXTmhkR2x2YmxCdmNIVndjMXdpWEc0Z0lDQWdJQ0JuWkd0dGIyNXBkRzl5UFh0dGIyNXBkRzl5ZlZ4dUlDQWdJQ0FnWVhCd2JHbGpZWFJwYjI0OWUyRndjSDFjYmlBZ0lDQWdJSFpwYzJsaWJHVTllMjV2ZEdsbWFXTmhkR2x2Ym5Nb0tHNXpLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lITmxkRTV2ZEdsbWFXTmhkR2x2Ym5OTVpXNW5kR2dvYm5NdWJHVnVaM1JvS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYm5NdWJHVnVaM1JvSUQ0Z01DQjlLVnh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdZVzVqYUc5eVBYdEJjM1JoYkM1WGFXNWtiM2RCYm1Ob2IzSXVWRTlRSUh3Z1FYTjBZV3d1VjJsdVpHOTNRVzVqYUc5eUxsSkpSMGhVZlZ4dUlDQWdJRDVjYmlBZ0lDQWdJRHhpYjNnZ2IzSnBaVzUwWVhScGIyNDllMGQwYXk1UGNtbGxiblJoZEdsdmJpNVdSVkpVU1VOQlRIMCtYRzRnSUNBZ0lDQWdJRHhHYjNJZ1pXRmphRDE3Ym05MGFXWnBZMkYwYVc5dWMzMCtYRzRnSUNBZ0lDQWdJQ0FnZXlodWIzUnBabWxqWVhScGIyNHBJRDArSUR4T2IzUnBabWxqWVhScGIyNGdibTkwYVdacFkyRjBhVzl1UFh0dWIzUnBabWxqWVhScGIyNTlJQzgrZlZ4dUlDQWdJQ0FnSUNBOEwwWnZjajVjYmlBZ0lDQWdJRHd2WW05NFBseHVJQ0FnSUR3dmQybHVaRzkzUGx4dUlDQXBYRzU5WEc0aUxDQWlhVzF3YjNKMElFZDBheUJtY205dElGd2laMms2THk5SGRHcy9kbVZ5YzJsdmJqMDBMakJjSWx4dWFXMXdiM0owSUVka2F5Qm1jbTl0SUZ3aVoyazZMeTlIWkdzL2RtVnljMmx2YmowMExqQmNJbHh1YVcxd2IzSjBJRUZrZHlCbWNtOXRJRndpWjJrNkx5OUJaSGRjSWx4dWFXMXdiM0owSUVkTWFXSWdabkp2YlNCY0ltZHBPaTh2UjB4cFlsd2lYRzVwYlhCdmNuUWdRWE4wWVd4T2IzUnBabVFnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hPYjNScFptUmNJbHh1YVcxd2IzSjBJRkJoYm1kdklHWnliMjBnWENKbmFUb3ZMMUJoYm1kdlhDSmNibHh1Wm5WdVkzUnBiMjRnYVhOSlkyOXVLR2xqYjI0L09pQnpkSEpwYm1jZ2ZDQnVkV3hzS1NCN1hHNGdJR052Ym5OMElHbGpiMjVVYUdWdFpTQTlJRWQwYXk1SlkyOXVWR2hsYldVdVoyVjBYMlp2Y2w5a2FYTndiR0Y1S0Vka2F5NUVhWE53YkdGNUxtZGxkRjlrWldaaGRXeDBLQ2toS1Z4dUlDQnlaWFIxY200Z2FXTnZiaUFtSmlCcFkyOXVWR2hsYldVdWFHRnpYMmxqYjI0b2FXTnZiaWxjYm4xY2JseHVablZ1WTNScGIyNGdabWxzWlVWNGFYTjBjeWh3WVhSb09pQnpkSEpwYm1jcElIdGNiaUFnY21WMGRYSnVJRWRNYVdJdVptbHNaVjkwWlhOMEtIQmhkR2dzSUVkTWFXSXVSbWxzWlZSbGMzUXVSVmhKVTFSVEtWeHVmVnh1WEc1bWRXNWpkR2x2YmlCMGFXMWxLSFJwYldVNklHNTFiV0psY2l3Z1ptOXliV0YwSUQwZ1hDSWxTRG9sVFZ3aUtTQjdYRzRnSUhKbGRIVnliaUJIVEdsaUxrUmhkR1ZVYVcxbExtNWxkMTltY205dFgzVnVhWGhmYkc5allXd29kR2x0WlNrdVptOXliV0YwS0dadmNtMWhkQ2toWEc1OVhHNWNibVoxYm1OMGFXOXVJSFZ5WjJWdVkza29iam9nUVhOMFlXeE9iM1JwWm1RdVRtOTBhV1pwWTJGMGFXOXVLU0I3WEc0Z0lHTnZibk4wSUhzZ1RFOVhMQ0JPVDFKTlFVd3NJRU5TU1ZSSlEwRk1JSDBnUFNCQmMzUmhiRTV2ZEdsbVpDNVZjbWRsYm1ONVhHNGdJSE4zYVhSamFDQW9iaTUxY21kbGJtTjVLU0I3WEc0Z0lDQWdZMkZ6WlNCTVQxYzZYRzRnSUNBZ0lDQnlaWFIxY200Z1hDSnNiM2RjSWx4dUlDQWdJR05oYzJVZ1ExSkpWRWxEUVV3NlhHNGdJQ0FnSUNCeVpYUjFjbTRnWENKamNtbDBhV05oYkZ3aVhHNGdJQ0FnWTJGelpTQk9UMUpOUVV3NlhHNGdJQ0FnWkdWbVlYVnNkRHBjYmlBZ0lDQWdJSEpsZEhWeWJpQmNJbTV2Y20xaGJGd2lYRzRnSUgxY2JuMWNibHh1YVc1MFpYSm1ZV05sSUU1dmRHbG1hV05oZEdsdmJsQnliM0J6SUh0Y2JpQWdibTkwYVdacFkyRjBhVzl1T2lCQmMzUmhiRTV2ZEdsbVpDNU9iM1JwWm1sallYUnBiMjVjYm4xY2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1RtOTBhV1pwWTJGMGFXOXVLSHNnYm05MGFXWnBZMkYwYVc5dU9pQnVJSDA2SUU1dmRHbG1hV05oZEdsdmJsQnliM0J6S1NCN1hHNGdJSEpsZEhWeWJpQW9YRzRnSUNBZ1BFRmtkeTVEYkdGdGNDQnRZWGhwYlhWdFUybDZaVDE3TkRBd2ZUNWNiaUFnSUNBZ0lEeGliM2hjYmlBZ0lDQWdJQ0FnZDJsa2RHaFNaWEYxWlhOMFBYczBNREI5WEc0Z0lDQWdJQ0FnSUdOc1lYTnpQWHRnVG05MGFXWnBZMkYwYVc5dUlDUjdkWEpuWlc1amVTaHVLWDFnZlZ4dUlDQWdJQ0FnSUNCdmNtbGxiblJoZEdsdmJqMTdSM1JyTGs5eWFXVnVkR0YwYVc5dUxsWkZVbFJKUTBGTWZWeHVJQ0FnSUNBZ1BseHVJQ0FnSUNBZ0lDQThZbTk0SUdOc1lYTnpQVndpYUdWaFpHVnlYQ0krWEc0Z0lDQWdJQ0FnSUNBZ2V5aHVMbUZ3Y0VsamIyNGdmSHdnYVhOSlkyOXVLRzR1WkdWemEzUnZjRVZ1ZEhKNUtTa2dKaVlnS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdQR2x0WVdkbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdOc1lYTnpQVndpWVhCd0xXbGpiMjVjSWx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0IyYVhOcFlteGxQWHRDYjI5c1pXRnVLRzR1WVhCd1NXTnZiaUI4ZkNCdUxtUmxjMnQwYjNCRmJuUnllU2w5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR2xqYjI1T1lXMWxQWHR1TG1Gd2NFbGpiMjRnZkh3Z2JpNWtaWE5yZEc5d1JXNTBjbmw5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZQbHh1SUNBZ0lDQWdJQ0FnSUNsOVhHNGdJQ0FnSUNBZ0lDQWdQR3hoWW1Wc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYkdGemN6MWNJbUZ3Y0MxdVlXMWxYQ0pjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGhiR2xuYmoxN1IzUnJMa0ZzYVdkdUxsTlVRVkpVZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdaV3hzYVhCemFYcGxQWHRRWVc1bmJ5NUZiR3hwY0hOcGVtVk5iMlJsTGtWT1JIMWNiaUFnSUNBZ0lDQWdJQ0FnSUd4aFltVnNQWHR1TG1Gd2NFNWhiV1VnZkh3Z1hDSlZibXR1YjNkdVhDSjlYRzRnSUNBZ0lDQWdJQ0FnTHo1Y2JpQWdJQ0FnSUNBZ0lDQThiR0ZpWld4Y2JpQWdJQ0FnSUNBZ0lDQWdJR05zWVhOelBWd2lkR2x0WlZ3aVhHNGdJQ0FnSUNBZ0lDQWdJQ0JvWlhod1lXNWtYRzRnSUNBZ0lDQWdJQ0FnSUNCb1lXeHBaMjQ5ZTBkMGF5NUJiR2xuYmk1RlRrUjlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lXSmxiRDE3ZEdsdFpTaHVMblJwYldVcGZWeHVJQ0FnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0FnSUNBZ1BHSjFkSFJ2YmlCdmJrTnNhV05yWldROWV5Z3BJRDArSUc0dVpHbHpiV2x6Y3lncGZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUR4cGJXRm5aU0JwWTI5dVRtRnRaVDFjSW5kcGJtUnZkeTFqYkc5elpTMXplVzFpYjJ4cFkxd2lJQzgrWEc0Z0lDQWdJQ0FnSUNBZ1BDOWlkWFIwYjI0K1hHNGdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnSUNBOFIzUnJMbE5sY0dGeVlYUnZjaUIyYVhOcFlteGxJQzgrWEc0Z0lDQWdJQ0FnSUR4aWIzZ2dZMnhoYzNNOVhDSmpiMjUwWlc1MFhDSStYRzRnSUNBZ0lDQWdJQ0FnZTI0dWFXMWhaMlVnSmlZZ1ptbHNaVVY0YVhOMGN5aHVMbWx0WVdkbEtTQW1KaUFvWEc0Z0lDQWdJQ0FnSUNBZ0lDQThhVzFoWjJVZ2RtRnNhV2R1UFh0SGRHc3VRV3hwWjI0dVUxUkJVbFI5SUdOc1lYTnpQVndpYVcxaFoyVmNJaUJtYVd4bFBYdHVMbWx0WVdkbGZTQXZQbHh1SUNBZ0lDQWdJQ0FnSUNsOVhHNGdJQ0FnSUNBZ0lDQWdlMjR1YVcxaFoyVWdKaVlnYVhOSlkyOXVLRzR1YVcxaFoyVXBJQ1ltSUNoY2JpQWdJQ0FnSUNBZ0lDQWdJRHhpYjNnZ2RtRnNhV2R1UFh0SGRHc3VRV3hwWjI0dVUxUkJVbFI5SUdOc1lYTnpQVndpYVdOdmJpMXBiV0ZuWlZ3aVBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGFXMWhaMlZjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWTI5dVRtRnRaVDE3Ymk1cGJXRm5aWDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVd4cFoyNDllMGQwYXk1QmJHbG5iaTVEUlU1VVJWSjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzYVdkdVBYdEhkR3N1UVd4cFoyNHVRMFZPVkVWU2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnS1gxY2JpQWdJQ0FnSUNBZ0lDQThZbTk0SUc5eWFXVnVkR0YwYVc5dVBYdEhkR3N1VDNKcFpXNTBZWFJwYjI0dVZrVlNWRWxEUVV4OVBseHVJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnNZWE56UFZ3aWMzVnRiV0Z5ZVZ3aVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGxOVVFWSlVmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjRZV3hwWjI0OWV6QjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGhZbVZzUFh0dUxuTjFiVzFoY25sOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2JHbHdjMmw2WlQxN1VHRnVaMjh1Uld4c2FYQnphWHBsVFc5a1pTNUZUa1I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ2UyNHVZbTlrZVNBbUppQW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOc1lYTnpQVndpWW05a2VWd2lYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkM0poY0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhWelpVMWhjbXQxY0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGxOVVFWSlVmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGhoYkdsbmJqMTdNSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JxZFhOMGFXWjVQWHRIZEdzdVNuVnpkR2xtYVdOaGRHbHZiaTVHU1V4TWZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGhZbVZzUFh0dUxtSnZaSGw5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQXBmVnh1SUNBZ0lDQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdlMjR1WVdOMGFXOXVjeTVzWlc1bmRHZ2dQaUF3SUNZbUlDaGNiaUFnSUNBZ0lDQWdJQ0E4WW05NElHTnNZWE56UFZ3aVlXTjBhVzl1YzF3aVBseHVJQ0FnSUNBZ0lDQWdJQ0FnZTI0dVlXTjBhVzl1Y3k1dFlYQW9LSHNnYkdGaVpXd3NJR2xrSUgwcElEMCtJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdQR0oxZEhSdmJpQm9aWGh3WVc1a0lHOXVRMnhwWTJ0bFpEMTdLQ2tnUFQ0Z2JpNXBiblp2YTJVb2FXUXBmVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4YkdGaVpXd2diR0ZpWld3OWUyeGhZbVZzZlNCb1lXeHBaMjQ5ZTBkMGF5NUJiR2xuYmk1RFJVNVVSVko5SUdobGVIQmhibVFnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWRYUjBiMjQrWEc0Z0lDQWdJQ0FnSUNBZ0lDQXBLWDFjYmlBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnS1gxY2JpQWdJQ0FnSUR3dlltOTRQbHh1SUNBZ0lEd3ZRV1IzTGtOc1lXMXdQbHh1SUNBcFhHNTlYRzRpTENBaWFXMXdiM0owSUdGd2NDQm1jbTl0SUZ3aVlXZHpMMmQwYXpRdllYQndYQ0pjYm1sdGNHOXlkQ0JIWkdzZ1puSnZiU0JjSW1kcE9pOHZSMlJyUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQjdJRUZ6ZEdGc0lIMGdabkp2YlNCY0ltRm5jeTluZEdzMFhDSmNibWx0Y0c5eWRDQjdJRUZqWTJWemMyOXlJSDBnWm5KdmJTQmNJbUZuYzF3aVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlFTnliM056YUdGcGNpaHRiMjVwZEc5eU9pQkhaR3N1VFc5dWFYUnZjaXdnZG1semFXSnNaVG9nUVdOalpYTnpiM0k4WW05dmJHVmhiajRwSUh0Y2JpQWdjbVYwZFhKdUlEeDNhVzVrYjNkY2JpQWdJQ0JqYkdGemN6MWNJa055YjNOemFHRnBjbHdpWEc0Z0lDQWdibUZ0WlhOd1lXTmxQVndpWTNKdmMzTm9ZV2x5WENKY2JpQWdJQ0JuWkd0dGIyNXBkRzl5UFh0dGIyNXBkRzl5ZlZ4dUlDQWdJSFpwYzJsaWJHVTllM1pwYzJsaWJHVjlYRzRnSUNBZ2JHRjVaWEk5ZTBGemRHRnNMa3hoZVdWeUxrOVdSVkpNUVZsOVhHNGdJQ0FnWVhCd2JHbGpZWFJwYjI0OWUyRndjSDFjYmlBZ0lDQmxlR05zZFhOcGRtbDBlVDE3UVhOMFlXd3VSWGhqYkhWemFYWnBkSGt1U1VkT1QxSkZmVnh1SUNBZ0lHdGxlVzF2WkdVOWUwRnpkR0ZzTGt0bGVXMXZaR1V1VGs5T1JYMWNiaUFnSUNCallXNUdiMk4xY3oxN1ptRnNjMlY5WEc0Z0lENWNiaUFnSUNBOFltOTRYRzRnSUNBZ0lDQmpiR0Z6Y3oxY0lrUnZkRndpWEc0Z0lDQWdMejVjYmlBZ1BDOTNhVzVrYjNjK1hHNTlYRzRpTENBaWFXMXdiM0owSUdGd2NDQm1jbTl0SUZ3aVlXZHpMMmQwYXpRdllYQndYQ0pjYm1sdGNHOXlkQ0JDWVhJZ1puSnZiU0JjSWtCM2FXNWtiM2R6TDJKaGNpOUNZWEpjSWx4dWFXMXdiM0owSUVka2F5Qm1jbTl0SUZ3aVoyazZMeTlIWkdzL2RtVnljMmx2YmowMExqQmNJbHh1YVcxd2IzSjBJSEpsY1hWbGMzUklZVzVrYkdWeUlHWnliMjBnWENJdUwzSmxjWFZsYzNSSVlXNWtiR1Z5WENKY2JtbHRjRzl5ZENCN0lITm9iM2RDWVhJc0lITm9iM2REY205emMyaGhhWElnZlNCbWNtOXRJRndpUUdOdmJXMXZiaTkyWVhKelhDSmNibWx0Y0c5eWRDQjdJR052YlhCcGJHVlRZM056SUgwZ1puSnZiU0JjSWtCamIyMXRiMjR2WTNOelNHOTBVbVZzYjJGa1hDSmNibWx0Y0c5eWRDQk9iM1JwWm1sallYUnBiMjVRYjNCMWNITWdabkp2YlNCY0lrQjNhVzVrYjNkekwyNXZkR2xtYVdOaGRHbHZibDl3YjNCMWNITXZUbTkwYVdacFkyRjBhVzl1VUc5d2RYQnpYQ0pjYm1sdGNHOXlkQ0JEY205emMyaGhhWElnWm5KdmJTQmNJa0IzYVc1a2IzZHpMMk55YjNOemFHRnBjaTlEY205emMyaGhhWEpjSWx4dVhHNW1kVzVqZEdsdmJpQm5aWFJVWVhKblpYUk5iMjVwZEc5eUtHMXZibWwwYjNKek9pQkJjbkpoZVR4SFpHc3VUVzl1YVhSdmNqNHBJSHRjYmlBZ1kyOXVjM1FnYm05MFpXSnZiMnROYjJSbGJDQTlJRndpTUhnNU1EVXhYQ0pjYmlBZ1kyOXVjM1FnY0dOTmIyUmxiQ0E5SUZ3aU1qUkhNbGN4UnpSY0lseHVYRzRnSUdOdmJuTjBJRzV2ZEdWaWIyOXJUVzl1YVhSdmNpQTlJRzF2Ym1sMGIzSnpMbVpwYm1Rb2JTQTlQaUJ0TG0xdlpHVnNJRDA5UFNCdWIzUmxZbTl2YTAxdlpHVnNLVnh1SUNCamIyNXpkQ0J3WTAxdmJtbDBiM0lnUFNCdGIyNXBkRzl5Y3k1bWFXNWtLRzBnUFQ0Z2JTNXRiMlJsYkNBOVBUMGdjR05OYjJSbGJDbGNibHh1SUNCeVpYUjFjbTRnYm05MFpXSnZiMnROYjI1cGRHOXlJSHg4SUhCalRXOXVhWFJ2Y2lCOGZDQnRiMjVwZEc5eWMxc3dYVnh1ZlZ4dVhHNWhjSEF1YzNSaGNuUW9lMXh1SUNCamMzTTZJR052YlhCcGJHVlRZM056S0Nrc1hHNGdJR2x1YzNSaGJtTmxUbUZ0WlRvZ1hDSmhaM04yTTF3aUxGeHVJQ0J5WlhGMVpYTjBTR0Z1Wkd4bGNqb2djbVZ4ZFdWemRFaGhibVJzWlhJc1hHNGdJRzFoYVc0b0tTQjdYRzRnSUNBZ1kyOXVjM1FnZEdGeVoyVjBUVzl1YVhSdmNpQTlJR2RsZEZSaGNtZGxkRTF2Ym1sMGIzSW9ZWEJ3TG1kbGRGOXRiMjVwZEc5eWN5Z3BLVnh1SUNBZ0lFSmhjaWgwWVhKblpYUk5iMjVwZEc5eUxDQnphRzkzUW1GeUtWeHVJQ0FnSUU1dmRHbG1hV05oZEdsdmJsQnZjSFZ3Y3loMFlYSm5aWFJOYjI1cGRHOXlLVnh1SUNBZ0lFTnliM056YUdGcGNpaDBZWEpuWlhSTmIyNXBkRzl5TENCemFHOTNRM0p2YzNOb1lXbHlLVnh1WEc0Z0lDQWdjSEpwYm5Rb1lGeGNia0Z6ZEdGc0lGZHBibVJ2ZDNNZ1lYQndiR2xsWkNCdmJpQnRiMjVwZEc5eU9pQWtlM1JoY21kbGRFMXZibWwwYjNJdWJXOWtaV3g5WUNsY2JpQWdmU3hjYm4wcFhHNGlYU3dLSUNBaWJXRndjR2x1WjNNaU9pQWlPMEZCUVVFc1QwRkJUMEVzVjBGQlZUdEJRVU5xUWl4UFFVRlBMRk5CUVZNN1FVRkRhRUlzVDBGQlR5eFhRVUZYT3pzN1FVTkpiRUlzVTBGQlV5eFRRVUZUTEV0QlFXRTdRVUZETTBJc1UwRkJUeXhKUVVOR0xGRkJRVkVzYlVKQlFXMUNMRTlCUVU4c1JVRkRiRU1zVjBGQlZ5eExRVUZMTEVkQlFVY3NSVUZEYmtJc1dVRkJXVHRCUVVOeVFqdEJRVVZCTEdWQlFXVXNVMEZCV1VNc1RVRkJPRUpETEZGQlFYVkNPMEZCUXpWRkxGTkJRVTlFTEV0QlFVa3NTMEZCU3l4RFFVRkRMRTFCUVUxRExFOUJRVTBzUlVGQlJTeFBRVUZQTEVOQlFVTXNSVUZCUlN4TlFVRk5MRTFCUVUwc1RVRkJUVHRCUVVNdlJEdEJRVVZCTEZOQlFWTXNUVUZCZDBJc1QwRkJWU3hOUVVGblF6dEJRVU4yUlN4VFFVRlBMR1ZCUVdVc1QwRkJUeXhOUVVGTk8wRkJRVUVzU1VGREwwSXNUVUZCVFR0QlFVTkdMR0ZCUVU4c1MwRkJTeXhQUVVGUExGTkJRVk1zU1VGQlNTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVRkJMRWxCUTNwRE8wRkJRVUVzUlVGRFNpeERRVUZETzBGQlEwdzdRVUZGUVN4TlFVRk5MRk5CUVZNc1QwRkJUeXhuUWtGQlowSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1RVRkJUU3haUVVGWkxFMUJRVTA3UVVGRGFFVXNVVUZCVFN4TFFVRkxMRmRCUVZjc1RVRkJUVHRCUVVNMVFpeFJRVUZOTEZsQlFWa3NWMEZCVnl4VlFVRlZPMEZCUTNaRExGRkJRVTBzV1VGQldTeFhRVUZYTEZsQlFWazdRVUZETjBNc1EwRkJRenRCUVVWRUxFMUJRVTBzVTBGQlV5eFBRVUZQTEcxQ1FVRnRRaXhIUVVGSExFTkJRVU1zUlVGQlJTeFBRVUZQTEUxQlFVMDdRVUZEZUVRc1VVRkJUU3hQUVVGUExGZEJRVmNzVTBGQlV6dEJRVU55UXl4RFFVRkRPMEZCUlVRc1RVRkJUU3hUUVVGVExFOUJRVThzY1VKQlFYRkNMRWRCUVVjc1EwRkJReXhGUVVGRkxGTkJRVk1zVjBGQlZ5eFBRVUZQTEUxQlFVMDdRVUZET1VVc1VVRkJUU3hSUVVGUkxGZEJRVmNzVDBGQlR6dEJRVU5vUXl4UlFVRk5MRlZCUVZVc1YwRkJWeXhWUVVGVk8wRkJRM0pETEZGQlFVMHNWVUZCVlN4WFFVRlhMRk5CUVZNN1FVRkRjRU1zVVVGQlRTeFBRVUZQTEZkQlFWY3NUMEZCVHp0QlFVTnVReXhEUVVGRE8wRkJSVVFzVFVGQlRTeFRRVUZUTEU5QlFVOHNiMEpCUVc5Q0xFZEJRVWNzUTBGQlF5eEZRVUZGTEZWQlFWVXNVMEZCVXl4VlFVRlZMRTFCUVUwN1FVRkRMMFVzVVVGQlRTeFRRVUZUTEZkQlFWY3NUMEZCVHp0QlFVTnFReXhSUVVGTkxGTkJRVk1zVjBGQlZ5eFZRVUZWTzBGQlEzQkRMRkZCUVUwc1UwRkJVeXhYUVVGWExGbEJRVms3UVVGRGRFTXNVVUZCVFN4VFFVRlRMRmRCUVZjc1UwRkJVenRCUVVOdVF5eFJRVUZOTEZGQlFWRXNWMEZCVnl4blFrRkJaMEk3UVVGRGVrTXNVVUZCVFN4UlFVRlJMRmRCUVZjc2FVSkJRV2xDTzBGQlF6RkRMRkZCUVUwc1ZVRkJWU3hYUVVGWExGTkJRVk03UVVGRGVFTXNRMEZCUXp0QlFVVkVMRTFCUVUwc1UwRkJVeXhQUVVGUExHbENRVUZwUWl4SFFVRkhMRU5CUVVNc1JVRkJSU3hQUVVGQlF5eFJRVUZQTEU5QlFVOHNUVUZCVFR0QlFVTTNSQ3hSUVVGTlFTeFBRVUZOTEZkQlFWY3NVMEZCVXp0QlFVTm9ReXhSUVVGTkxFOUJRVThzVjBGQlZ5eDFRa0ZCZFVJN1FVRkRMME1zVVVGQlRTeFBRVUZQTEZkQlFWY3NjVUpCUVhGQ08wRkJRemRETEZGQlFVMHNUMEZCVHl4WFFVRlhMSE5DUVVGelFqdEJRVU01UXl4UlFVRk5MRTlCUVU4c1YwRkJWeXh2UWtGQmIwSTdRVUZETlVNc1VVRkJUU3hQUVVGUExGZEJRVmNzVlVGQlZUdEJRVU4wUXl4RFFVRkRPMEZCUlVRc1RVRkJUU3hUUVVGVExFOUJRVThzYlVKQlFXMUNMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVXNzVFVGQlRUdEJRVU4wUkN4UlFVRk5MRXRCUVVzc1YwRkJWeXhsUVVGbE8wRkJRM0pETEZGQlFVMHNTMEZCU3l4WFFVRlhMR05CUVdNN1FVRkRlRU1zUTBGQlF6dEJRVVZFTEUxQlFVMHNVMEZCVXl4UFFVRlBMR3RDUVVGclFpeEhRVUZITEVOQlFVTXNSVUZCUlN4UlFVRlJMR05CUVVGRExHTkJRV0VzVFVGQlRUdEJRVU55UlN4UlFVRk5MRTlCUVU4c1YwRkJWeXhsUVVGbE8wRkJRM1pETEZGQlFVMUJMR05CUVdFc1YwRkJWeXhUUVVGVE8wRkJRek5ETEVOQlFVTTdRVUZGUkN4TlFVRk5MRk5CUVZNc1QwRkJUeXg1UWtGQmVVSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1kwRkJZeXhOUVVGTk8wRkJRM0pGTEZGQlFVMHNZMEZCWXl4WFFVRlhMRk5CUVZNN1FVRkROVU1zUTBGQlF6dEJRVVZFTEUxQlFVMHNVMEZCVXl4UFFVRlBMR05CUVdNc1IwRkJSeXhEUVVGRExFVkJRVVVzU1VGQlNTeFBRVUZQTEUxQlFVMHNUVUZCVFR0QlFVTTNSQ3hSUVVGTkxFZEJRVWNzVjBGQlZ5eFRRVUZUTzBGQlF6ZENMRkZCUVUwc1RVRkJUU3hYUVVGWExGTkJRVk03UVVGRGFFTXNVVUZCVFN4TlFVRk5MRmRCUVZjc1YwRkJWenRCUVVOc1F5eFJRVUZOTEUxQlFVMHNWMEZCVnl4aFFVRmhPMEZCUTNCRExGRkJRVTBzVFVGQlRTeFhRVUZYTEZWQlFWVTdRVUZEYWtNc1VVRkJUU3hOUVVGTkxGZEJRVmNzVTBGQlV6dEJRVU5vUXl4UlFVRk5MRTFCUVUwc1YwRkJWeXhUUVVGVE8wRkJRMmhETEZGQlFVMHNUVUZCVFN4WFFVRlhMRmRCUVZjN1FVRkRiRU1zVVVGQlRTeE5RVUZOTEZkQlFWY3NUMEZCVHp0QlFVTTVRaXhSUVVGTkxFMUJRVTBzVjBGQlZ5eFRRVUZUTzBGQlEyaERMRkZCUVUwc1RVRkJUU3hYUVVGWExGTkJRVk03UVVGRGNFTXNRMEZCUXp0QlFVVkVMRTFCUVUwc1UwRkJVeXhQUVVGUExHZENRVUZuUWl4SFFVRkhMRU5CUVVNc1JVRkJSU3hMUVVGTExFMUJRVTA3UVVGRGJrUXNVVUZCVFN4TFFVRkxMRmRCUVZjc1QwRkJUenRCUVVOcVF5eERRVUZET3pzN1FVTXhSa1FzVTBGQlV5d3lRa0ZCTWtJN1FVRkRjRU1zVTBGQlV5eE5RVUZOTEcxQ1FVRnRRanM3TzBGRFJteERMRTlCUVU5RExHTkJRV0U3T3p0QlEwRndRaXhQUVVGUExHRkJRV0U3UVVGRGNFSXNUMEZCVHl4VFFVRlRPMEZCUTJoQ0xFOUJRVThzVlVGQlZUczdPMEZEUVZZc1UwRkJVeXhUUVVGVExFdEJRV0U3UVVGRGJFTXNVMEZCVHl4SlFVTkdMRkZCUVZFc2JVSkJRVzFDTEU5QlFVOHNSVUZEYkVNc1YwRkJWeXhMUVVGTExFZEJRVWNzUlVGRGJrSXNXVUZCV1R0QlFVTnlRanRCUVVWUExGTkJRVk5ETEZWQlFWTXNTMEZCWVR0QlFVTnNReXhUUVVGUExFbEJRMFlzVVVGQlVTeHRRa0ZCYlVJc1QwRkJUeXhGUVVOc1F5eFhRVUZYTEV0QlFVc3NSMEZCUnl4RlFVTnVRaXhaUVVGWk8wRkJRM0pDTzBGQmRVUlBMRk5CUVZNc1NVRkJTU3hMUVVGeFFpeE5RVUZqTEU5QlFWazdRVUZETDBRc1VVRkJUU3hOUVVGTlF5eFZRVUZUTEVsQlFVazdRVUZEZWtJc1VVRkJUU3hUUVVGVExFOUJRVThzUjBGQlJ6dEJRVU42UWl4UlFVRk5MRk5CUVZNc1QwRkJUeXhIUVVGSE8wRkJSWHBDTEUxQlFVazdRVUZGU2l4TlFVRkpMRlZCUVZVc1QwRkJUeXhQUVVGUExFbEJRVWtzVFVGQlRTeE5RVUZOTEZsQlFWazdRVUZEY0VRc1kwRkJWeXhKUVVGSkxFMUJRVTBzUlVGQmIwSTdRVUZCUVN4RlFVTTNReXhQUVVGUE8wRkJRMGdzWTBGQlZTeEpRVUZKTEVsQlFYZENPMEZCUVVFc1JVRkRNVU03UVVGRlFTeE5RVUZKTEZsQlFWa3NUMEZCVHp0QlFVTnVRaXhSUVVGSkxGVkJRVlVzVDBGQlR5eFBRVUZQTEVsQlFVa3NUVUZCVFN4TlFVRk5MRmxCUVZrN1FVRkRjRVE3UVVGQlF5eE5RVUZETEVsQlFVa3NUVUZCVFN4RlFVRjFRaXhMUVVGTE8wRkJRVUVzU1VGRE5VTXNUMEZCVHp0QlFVTklMR0ZCUVU4c1QwRkJUeXhMUVVGTExFVkJRVVVzUTBGQlF5eEpRVUZKTEVkQlFVY3NUVUZCVFN4RFFVRkRPMEZCUVVFc1NVRkRlRU03UVVGQlFTeEZRVU5LTzBGQlEwbzdPenRCUkRWRlR5eEpRVUZOTEZkQlFVNHNUVUZCVFN4clFrRkJPRUlzVTBGQlV6dEJRVUZCTEVWQlEyaEVPMEZCUVVFc1UwRkJUeXhUUVVGVExGRkJRVkU3UVVGQlFUdEJRVUZCTEVWQlJYaENPMEZCUVVFc1JVRkRRVHRCUVVGQkxFVkJSVUVzV1VGQldTeExRVUZqTEZkQlFTdENPMEZCUTNKRUxGVkJRVTBzYTBWQlFXdEZPMEZCUTNoRkxGTkJRVXNzWVVGQllTeGpRVUZqTEUxQlFVMHNUVUZCVFR0QlFVTTFReXhUUVVGTExFOUJRVTg3UVVGQlFTeEZRVU5vUWp0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFTeEZRVTlCTEZWQlFWVXNWVUZCT0VNN1FVRkZjRVFzVjBGQlR5eExRVUZMTEZkQlFWY3NVVUZCVVR0QlFVRkJMRVZCUTI1RE8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRXNSVUZMUVN4TlFVRlRPMEZCUTB3c1YwRkJUeXhMUVVGTExFdEJRVXM3UVVGQlFTeEZRVU55UWp0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGTlFTeEhRVUZWTEZkQlFYbERPMEZCUXk5RExGZEJRVThzU1VGQlNTeFZRVUZUTEUxQlFVMHNWVUZCVlN4TFFVRkxMRXRCUVVzc1EwRkJReXhIUVVGSExFdEJRVXNzVlVGQlZUdEJRVUZCTEVWQlEzSkZPMEZCUVVFc1JVRkZWU3hOUVVGaExGZEJRWGxETzBGQlF6VkVMRmRCUVU4c1MwRkJTeXhIUVVGSExGTkJRVk03UVVGQlFTeEZRVU0xUWp0QlFVRkJMRVZCUlVFc1YwRkJiVUk3UVVGRFppeFhRVUZQTEZsQlFWa3NTMEZCU3l4SlFVRkpMRU5CUVVNN1FVRkJRU3hGUVVOcVF6dEJRVUZCTEVWQlJVRXNRMEZCUXl4UFFVRlBMRmRCUVZjc1NVRkJTVHRCUVVOdVFpeFpRVUZSTEV0QlFVc3NjVVJCUVhGRU8wRkJRMnhGTEZkQlFVOHNTMEZCU3l4VFFVRlRPMEZCUVVFc1JVRkRla0k3UVVGRFNqdEJRWFZDVHl4VFFVRlRMRmxCUVdVc1RVRkJiVUk3UVVGRE9VTXNUVUZCU1N4bFFVRmxPMEZCUTI1Q0xGRkJRVTBzWTBGQll5eHZRa0ZCU1N4SlFVRjFRanRCUVVVdlF5eFJRVUZOTEZsQlFTdENMRU5CUVVNc1lVRkJZVHRCUVVNdlF5eG5Ra0ZCV1N4SlFVRkpMRkZCUVZFN1FVRkRlRUlzVjBGQlR5eE5RVUZOTEZsQlFWa3NUMEZCVHl4UlFVRlJPMEZCUVVFc1JVRkROVU03UVVGRlFTeFJRVUZOUXl4UFFVRk5MRU5CUVVNc1lVRkJjMEk3UVVGREwwSXNWVUZCVFN4UlFVRlhMRTlCUVU4c1lVRkJZU3hoUVVGaExGTkJRVk1zV1VGQldTeEpRVUZKTzBGQlF6TkZMRkZCUVVrc2FVSkJRV2xDTEU5QlFVODdRVUZEZUVJc2NVSkJRV1U3UVVGRlppeFpRVUZOTEV0QlFVc3NWMEZCVnl4RlFVRkZMRkZCUVZFc1EwRkJReXhQUVVGUExFZEJRVWNzUTBGQlF6dEJRVUZCTEVsQlEyaEVPMEZCUVVFc1JVRkRTanRCUVVWQkxGTkJRVThzUTBGQlF5eEpRVUZKTEZOQlFWTXNUVUZCVFN4alFVRmpMRk5CUVZNc1IwRkJSMEVzU1VGQlowSTdRVUZEZWtVN1FVRnBSMDhzVTBGQlV5eGpRVUZwUWl4UlFVRjFReXhMUVVFd1FqdEJRVU01Uml4UlFVRk5MRTlCUVU4c1UwRkJVeXhIUVVGSE8wRkJSWHBDTEZGQlFVMHNXVUZCSzBJc1EwRkJReXhoUVVGaE8wRkJReTlETEZWQlFVMHNUVUZCVFN4clFrRkJhMElzU1VGQlNTeFhRVUZYTEZsQlFWazdRVUZEZWtRc1ZVRkJUU3hMUVVGTExFOUJRVThzVVVGQlVTeEhRVUZITEVkQlFVY3NTMEZCU3l4SlFVRkpMRWxCUVVrc1RVRkJUU3hUUVVGVExFTkJRVU03UVVGRE4wUXNWMEZCVHl4TlFVRk5MRTlCUVU4c1YwRkJWeXhGUVVGRk8wRkJRVUVzUlVGRGNrTTdRVUZGUVN4UlFVRk5MRTFCUVUwc1RVRkJVenRCUVVOcVFpeFJRVUZKTEd0Q1FVRnJRaXhKUVVGSkxGVkJRVlU3UVVGRGFFTXNZVUZCVHl4UFFVRlBMRlZCUVZVc1IwRkJSeXhGUVVGRkxHZENRVUZuUWp0QlFVRkJMRWxCUTJwRUxFOUJRVTg3UVVGRFNDeFpRVUZOTEZOQlFWTXNUMEZCVHl4TFFVRkxMRmRCUVZjc1MwRkJTeXhIUVVGSExFTkJRVU03UVVGRkwwTXNWVUZCU1N4VlFVRlZMRlZCUVZVc1QwRkJUeXhQUVVGUExFMUJRVTBzVFVGQlRTeFpRVUZaTzBGQlF6RkVMR1ZCUVZFc1QwRkJUeXhOUVVGTkxFVkJRVzlDTzBGQlFVRXNUVUZETjBNN1FVRkZRU3hWUVVGSkxGRkJRVkVzVDBGQlVTeFJRVUZQTEU5QlFVOHNTVUZCU1R0QlFVTjBReXhWUVVGSkxFOUJRVThzVDBGQlVTeFJRVUZQTEU5QlFVOHNSMEZCTUVJN1FVRkZNMFFzV1VGQlRTeE5RVUZOTEhWQ1FVRjFRaXhIUVVGSExFVkJRVVU3UVVGQlFTeEpRVU0xUXp0QlFVRkJMRVZCUTBvN1FVRkZRU3hUUVVGUExFbEJRVWtzVTBGQlV5eExRVUZMTEZOQlFWTTdRVUZEZEVNN096dEJSVEZPVHl4VFFVRlRMRk5CUVZNc1RVRkJkVUk3UVVGRE5VTXNVMEZCVHl4UFFVRlBMRTlCUVU4c1MwRkJTeXhKUVVGSk8wRkJRMnhETzBGQlYwRXNVMEZCVXl4alFVRmpPMEZCUTI1Q0xGRkJRVTBzVFVGQlRTeGpRVUZqTzBGQlF6bENPMEZCUlU4c1NVRkJUU3hOUVVGak8wRkJRVUVzUlVGRGRrSXNiVUpCUVcxQ0xFTkJRVU03UVVGQlFTeEZRVU53UWl4VlFVRlZPMEZCUVVFc1JVRkRWaXhSUVVGUk8wRkJRVUVzUlVGRFVpeFZRVUZWTzBGQlFVRXNSVUZEVml4WFFVRlhMRTFCUVUwN1FVRkJRU3hGUVVOcVFpeG5Ra0ZCWjBJc1RVRkJUVHRCUVVNeFFqczdPMEZEYkVOUExFbEJRVTBzVVVGQlRpeE5RVUZOTEU5QlFVMDdRVUZCUVN4RlFWVm1MRmxCUVZrc1VVRkJkVUk3UVVGT2JrTXNiMEpCUVZjc2IwSkJRVWtzU1VGQmMwSTdRVUZGY2tNc1UwRkJVU3hYUVVGWExHOUNRVUZKTEVsQlFXZENPMEZCUTNaRExGTkJRVkVzVTBGQlV5eHZRa0ZCU1N4SlFVRm5RanRCUVVOeVF5eFRRVUZSTEZWQlFWVTdRVUZIWkN4VFFVRkxMRk5CUVZNN1FVRkJRU3hGUVVOc1FqdEJRVUZCTEVWQlJVRXNWVUZCVlN4VlFVRnpRanRCUVVNMVFpeFRRVUZMTEZWQlFWVXNTVUZCU1N4UlFVRlJPMEZCUVVFc1JVRkRMMEk3UVVGQlFTeEZRVVZCTEZGQlFWRXNWVUZCYzBJN1FVRkRNVUlzVVVGQlNTeExRVUZMTEZWQlFWVXNRMEZCUXl4TFFVRkxMRTlCUVU4c1UwRkJVenRCUVVOeVF5eFhRVUZMTEU5QlFVOHNVVUZCVVN4UlFVRlJPMEZCUVVFc1NVRkRhRU1zVDBGQlR6dEJRVU5JTEZkQlFVc3NUMEZCVHl4SlFVRkpMRkZCUVZFN1FVRkJRU3hKUVVNMVFqdEJRVUZCTEVWQlEwbzdRVUZCUVN4RlFVVkJMRWxCUVU4c1NVRkJZVHRCUVVOb1FpeFZRVUZOTEU5QlFVOHNUMEZCVFR0QlFVTnVRaXhYUVVGTkxGVkJRVlU3UVVGRmFFSXNVVUZCU1R0QlFVTkJMR0ZCUVU4c1IwRkJSenRCUVVGQkxFbEJRMlFzVlVGQlJUdEJRVU5GTEZkQlFVc3NUMEZCVHl4UlFVRlJMRU5CUVVNc1QwRkJUeXhIUVVGSExFTkJRVU03UVVGRGFFTXNWMEZCU3l4UFFVRlBMRTFCUVUwN1FVRkRiRUlzVjBGQlN5eFZRVUZWTzBGQlEyWXNZVUZCVFN4VlFVRlZPMEZCUVVFc1NVRkRjRUk3UVVGQlFTeEZRVU5LTzBGQlFVRXNSVUZGUVN4VlFVRlZPMEZCUTA0c1UwRkJTeXhUUVVGVExGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NRMEZCUXp0QlFVTnNReXhUUVVGTExGTkJRVk1zVFVGQlRUdEJRVU53UWl4VFFVRkxMRk5CUVZNc1RVRkJUVHRCUVVOd1FpeFhRVUZQTEV0QlFVczdRVUZCUVN4RlFVTm9RanRCUVVOS08wRkJOa1ZQTEZOQlFWTXNWMEZCYTBJN1FVRkRPVUlzVVVGQlRTeFJRVUZSTEUxQlFVMDdRVUZEY0VJc1RVRkJTU3hEUVVGRExFOUJRVTg3UVVGRFVpeFZRVUZOTEUxQlFVMHNNa05CUVRKRE8wRkJRVUVzUlVGRE0wUTdRVUZGUVN4VFFVRlBPMEZCUTFnN1FVRkxUeXhUUVVGVExGVkJRVlVzVTBGQmNVSTdRVUZETTBNc1RVRkJTU3hEUVVGRExFMUJRVTBzVTBGQlV6dEJRVU5vUWl4WlFVRlJMRTFCUVUwc1RVRkJUU3h6UkVGQmMwUXNRMEZCUXp0QlFVRkJMRVZCUXk5Rk8wRkJSVUVzVVVGQlRTeFRRVUZUTEZWQlFWVXNUMEZCVHp0QlFVTndRenRCUVhkRFR5eFRRVUZUTEZkQlFXTXNTVUZCWjBNN1FVRkRNVVFzVVVGQlRTeFJRVUZSTEVsQlFVa3NUVUZCVFN4SlFVRkpPMEZCUXpWQ0xGTkJRVThzVFVGQlRTeEpRVUZKTEUxQlFVMHNSMEZCUnl4TlFVRk5MRTFCUVUwc1VVRkJVU3hEUVVGRExFTkJRVU03UVVGRGNFUTdPenRCU25KTFR5eEpRVUZOTEZWQlFWVXNUMEZCVHl4clFrRkJhMEk3UVVGTGVrTXNVMEZCVXl4UlFVRlJMRkZCUVhkQ08wRkJRelZETEZOQlFVOHNWMEZCVnl4VFFVRlZMRTlCUVU4c1QwRkJUeXhKUVVGbE8wRkJRemRFTzBGQmRVVkJMRk5CUVZNc1kwRkJZeXhOUVVGMVFqdEJRVU14UXl4VFFVRlBMRXRCUVVzc2NVSkJRWEZDUXl4VFFVRlJPMEZCUXpkRE8wRkJSVUVzVTBGQlV5eGxRVUZsTEUxQlFYVkNPMEZCUXpORExGTkJRVThzVDBGQlR5eFRRVUZUTEdOQlFXTXNRMEZCUXl4alFVRmpMRWxCUVVrN1FVRkROVVE3UVVGSFR5eFRRVUZUTEZGQlFWRXNVVUZCWjBJc1RVRkJZenRCUVVOc1JDeE5RVUZKTEZkQlFWY3NWVUZCVlN4UFFVRlBMRTlCUVU4c1RVRkJUU3hKUVVGSk8wRkJRemRETEZsQlFWRXNTMEZCU3l4MVFrRkJkVUlzVDBGQlR5eFBRVUZQTEVOQlFVTXNUMEZCVHl4SlFVRkpMRTlCUVU4c1RVRkJUU3hGUVVGRk8wRkJRVUVzUlVGRGFrWTdRVUZGUVN4VFFVRlBMRTlCUVU4c1VVRkJVU3hGUVVGRkxFTkJRVU1zVDBGQlR5eEhRVUZITEV0QlFVc3NRMEZCUXp0QlFVTTNRenRCUVZsUExGTkJRVk1zU1VGRFdpeE5RVU5CTEZOQlJVRXNTMEZEUXp0QlFVTkVMRkZCUVUwc1JVRkJSU3hIUVVGSExFOUJRVThzWTBGQll5eFZRVUZWTEVkQlFVY3NTMEZCU3l4SlFVRkpPMEZCUTNSRUxGRkJRVTBzVVVGQlVUdEJRVVZrTEUxQlFVa3NTVUZCU3l4UlFVRlBMRTlCUVU4c1QwRkJUeXhGUVVGRkxFbEJRVWtzUTBGQlF6dEJRVU55UXl4TlFVRkpMRlZCUVZVc1MwRkJTenRCUVVWdVFpeGhRVUZYTEVOQlFVTkRMRTFCUVVzc1MwRkJTeXhMUVVGTExFOUJRVThzVVVGQlVTeExRVUZMTEVkQlFVYzdRVUZET1VNc1VVRkJTU3hWUVVGVkxFOUJRVmNzVVVGQlR5eE5RVUZOUVN4SlFVRkhPMEZCUVVFc1JVRkROME03UVVGRlFTeE5RVUZKTEU5QlFVOHNVMEZCVXl4VlFVRlZPMEZCUXpGQ0xGRkJRVWtzVVVGQlVTeEpRVUZKTEcxQ1FVRnRRanRCUVVNdlFpeGhRVUZQTEVsQlFVa3NhMEpCUVd0Q0xFbEJRVWs3UVVGQlFTeEpRVU55UXl4UFFVRlBPMEZCUTBnc1dVRkJUU3hOUVVGTkxEaENRVUU0UWl4SlFVRkpMRWRCUVVjN1FVRkJRU3hKUVVOeVJEdEJRVUZCTEVWQlEwbzdRVUZGUVN4TlFVRkpMR1ZCUVdVc1NVRkJTU3hIUVVGSE8wRkJRM1JDTEZWQlFVMURMRlZCUVZNc1MwRkJTeXhGUVVGRkxGVkJRVlVzUjBGQlJ5eE5RVUZOTEVOQlFVTTdRVUZETVVNc1VVRkJTU3hOUVVGUExGTkJRVkZCTEZOQlFWRXNTMEZCU3p0QlFVTm9ReXhSUVVGSlFTeFBRVUZOTzBGQlExWXNWMEZCVDBFN1FVRkJRU3hGUVVOWU8wRkJSMEVzVVVGQlRTeEZRVUZGTEV0QlFVc3NUMEZCVHl4VlFVRlZMRWxCUVVrN1FVRkRiRU1zVTBGQlR5eE5RVUZOTzBGQlEySXNVMEZCVHl4TlFVRk5PMEZCUldJc1VVRkJUU3hWUVVFMlJDeERRVUZETzBGQlEzQkZMRkZCUVUwc1YwRkJLME1zUTBGQlF6dEJRVWQwUkN4aFFVRlhMRU5CUVVORUxFMUJRVXNzUzBGQlN5eExRVUZMTEU5QlFVOHNVVUZCVVN4TFFVRkxMRWRCUVVjN1FVRkRPVU1zVVVGQlNVRXNTMEZCU1N4WFFVRlhMRWxCUVVrc1IwRkJSenRCUVVOMFFpeGpRVUZSTEV0QlFVc3NRMEZCUTBFc1MwRkJTU3hOUVVGTkxFTkJRVU1zUjBGQlJ5eExRVUZ6UWl4RFFVRkRPMEZCUTI1RUxHRkJRVThzVFVGQlRVRXNTVUZCUnp0QlFVRkJMRWxCUTNCQ08wRkJRMEVzVVVGQlNTeHBRa0ZCYVVJc1ZVRkJWVHRCUVVNelFpeGxRVUZUTEV0QlFVc3NRMEZCUTBFc1RVRkJTeXhMUVVGTExFTkJRVU03UVVGRE1VSXNXVUZCVFVFc1NVRkJSeXhKUVVGSkxFMUJRVTBzU1VGQlNUdEJRVUZCTEVsQlF6TkNPMEZCUVVFc1JVRkRTanRCUVVkQkxGRkJRVTBzVTBGQlV5eGxRVUZsTEdGQlFXRXNTMEZCU3l4SlFVRkpMRWxCUVVzc1MwRkJaU3hMUVVGTE8wRkJRemRGTEUxQlFVa3NZVUZCWXl4UlFVRlBMRTlCUVU4c1VVRkJVU3hMUVVGTE8wRkJRemRETEUxQlFVa3NUVUZCVHl4VFFVRlJMRkZCUVZFc1MwRkJTenRCUVVWb1F5eE5RVUZKTEVsQlFVc3NTMEZCU1N4UFFVRlBMRkZCUVZFc1IwRkJSenRCUVVNdlFpeE5RVUZKTEZWQlFWY3NTMEZCU1N4VFFVRlRMRkZCUVZFc1UwRkJVenRCUVVjM1F5eGhRVUZYTEZOQlFWTXNUVUZCVFN4UlFVRlJMRkZCUVZFc1NVRkJTU3hYUVVGWExFTkJRVU1zVVVGQlVTeEhRVUZITzBGQlEycEZMRkZCUVVrc1ZVRkJWU3hOUVVGTk8wRkJRMmhDTEdOQlFWRXNTMEZCU3l4dFJFRkJiVVE3UVVGRGFFVTdRVUZCUVN4SlFVTktPMEZCUlVFc1VVRkJTU3hOUVVGTkxGRkJRVkVzUzBGQlN5eEhRVUZITzBGQlEzUkNMR2xDUVVGWExFMUJRVTBzVDBGQlR6dEJRVU53UWl4WlFVRkpMRk5CUVZNc1VVRkJVU3hKUVVGSkxFVkJRVVU3UVVGQlFTeE5RVU12UWp0QlFVRkJMRWxCUTBvc1YwRkJWeXhQUVVGUE8wRkJRMlFzVlVGQlNTeFRRVUZUTEZGQlFWRXNUMEZCVHl4RlFVRkZPMEZCUVVFc1NVRkRiRU03UVVGQlFTeEZRVU5LTzBGQlIwRXNVVUZCVFN4clFrRkJhMElzVVVGQlVTeEpRVUZKTEVOQlFVTXNRMEZCUXl4TFFVRkxMRTlCUVU4c1RVRkJUVHRCUVVOd1JDeFZRVUZOTEU5QlFVOHNVMEZCVXl4SFFVRkhPMEZCUTNwQ0xGVkJRVTBzUzBGQlN5eExRVUZMTEZkQlFWY3NVMEZCVXl4SlFVTTVRaXhQUVVGUExGRkJRVkVzVjBGQlZ5eExRVUZMTEUxQlFVMHNRMEZCUXl4RFFVRkRMRWxCUVVrc1QwRkJUeXhKUVVOc1JDeFBRVUZQTEZGQlFWRXNVMEZCVXl4SFFVRkhMRWRCUVVjc1QwRkJUenRCUVVVelF5eFhRVUZQTEUxQlFVMHNUMEZCVHl4WFFVRlhMRVZCUVVVN1FVRkJRU3hGUVVOeVF5eERRVUZETzBGQlIwUXNVVUZCVFN4clFrRkJhMElzVTBGQlV5eEpRVUZKTEVOQlFVTXNRMEZCUXl4TlFVRk5MRTlCUVU4c1RVRkJUVHRCUVVOMFJDeFZRVUZOTEZWQlFWVXNVVUZCVVN4VlFVRlZMRTFCUVUwN1FVRkRjRU1zVlVGQlNTeFJRVUZSTEUxQlFVMHNVVUZCVVN4SlFVRkpMRU5CUVVNN1FVRkJRU3hKUVVOdVF5eERRVUZETzBGQlEwUXNVVUZCU1N4UlFVRlJMRTFCUVUwc1VVRkJVU3hKUVVGSkxFTkJRVU03UVVGREwwSXNWMEZCVHp0QlFVRkJMRVZCUTFnc1EwRkJRenRCUVVkRUxFMUJRVWtzWjBKQlFXZENMRk5CUVZNc1MwRkJTeXhuUWtGQlowSXNVMEZCVXl4SFFVRkhPMEZCUXpGRUxHTkJRVlVzVFVGQlRUdEJRVU5hTEhOQ1FVRm5RaXhSUVVGUkxFTkJRVU1zVDBGQlR5eEhRVUZITEVOQlFVTTdRVUZEY0VNc2MwSkJRV2RDTEZGQlFWRXNRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJRenRCUVVGQkxFbEJRM2hETEVOQlFVTTdRVUZCUVN4RlFVTk1PMEZCUlVFc1RVRkJTU3hOUVVGTk8wRkJRMVlzVTBGQlR6dEJRVU5ZTzBGQlJVOHNTVUZCVFN4UFFVRlBPenM3UVV0MFQzQkNMRTlCUVU5RkxHTkJRV0U3T3p0QlEwdHdRaXhKUVVGTkxFMUJRVTBzVDBGQlR5eHRSRUZCYlVRN1FVRkZMMFFzU1VGQlRTd3dRa0ZCWjBRc1RVRkJUU3hKUVVNNVJDeExRVUZMTEVOQlFVTkRMRk5CUVZGQkxFdEJRVWtzZFVKQlFYVkNMRVZCUTNwRExFMUJRVTBzVFVGQlRTeE5RVUZOTEUxQlFVMDdPenRCUkZRM1FqdEJRVXRQTEVsQlFVMHNWMEZCVGl4TlFVRk5MRzFDUVVFd1FpeExRVUZCUXl4VFFVRlJMRkZCUTI1RExFdEJRVUZCTEZOQlFWRXNVMEZYVWl4TFFVRkJRU3hUUVVGUkxGbEJXbTFDTEVsQlFXVTdRVUZCUVN4RlFXZEZiRVFzV1VGQldTeEZRVUZGTEZkQlFWY3NRMEZCUXl4RlFVRkZMRWxCUVhsRExFTkJRVU1zUjBGQlJ6dEJRVU55UlN4VlFVRk5PMEZCZUVOV0xGTkJRVkVzWjBKQlFXZENMRzlDUVVGSkxFbEJRVms3UVVGNVEzQkRMRk5CUVVzc1dVRkJXU3hOUVVGTkxGRkJRVkVzVVVGQlVTeEpRVUZKTEZkQlFWY3NRMEZCUXl4UlFVRlJPMEZCUVVFc1JVRkRia1U3UVVGQlFTeEZRV3hGUVR0QlFVRkJMRk5CUVZFc1RVRkJiVUk3UVVGQlFTeE5RVU4yUWl4WFFVRlhMRU5CUVVNN1FVRkJRU3hOUVVWYUxHVkJRV1U3UVVGQlFTeFJRVU5ZTEdGQlFXRXNRMEZCUTBFc1UwRkJVU3hoUVVGaFFTeFRRVUZSTEZOQlFWTTdRVUZCUVN4TlFVTjRSRHRCUVVGQkxFMUJRMEVzYVVKQlFXbENPMEZCUVVFc1VVRkRZaXhoUVVGaExFTkJRVU5CTEZOQlFWRXNZVUZCWVVFc1UwRkJVU3hUUVVGVE8wRkJRVUVzVFVGRGVFUTdRVUZCUVN4SlFVTktPMEZCUVVFN1FVRkJRU3hGUVVWQk8wRkJRVUVzVTBGQlVTeE5RVUZ6UWp0QlFVRkJMRTFCUXpGQ0xGVkJRVlZCTEZOQlFWRXNWVUZCVlN4VFFVRlRMRmxCUVZrc1NVRkJTU3hKUVVGSlFTeFRRVUZSTEZkQlFWY3NVVUZCVVR0QlFVRkJMRWxCUTNoR08wRkJRVUU3UVVGQlFTeEZRVVZCTEU5QlFVODdRVUZEU0N4SlFVRkJRU3hUUVVGUkxHTkJRV01zU1VGQlNUdEJRVU14UWl3MFFrRkJkMElzU1VGQlNUdEJRVUZCTEVWQlEyaERPMEZCUVVFc1JVRkZRU3hQUVVGUExFbEJRVThzVjBGQmNVSXNRMEZCUXl4SFFVRkhPMEZCUTI1RExGZEJRVThzU1VGQlNTeFZRVUZUTEVWQlFVVXNVMEZCVXl4RFFVRkRPMEZCUVVFc1JVRkRjRU03UVVGQlFTeEZRVXRCTEVsQlFVa3NWMEZCVnp0QlFVTllMRmRCUVU4c1EwRkJReXhIUVVGSExFdEJRVXNzVTBGQlV6dEJRVUZCTEVWQlF6ZENPMEZCUVVFc1JVRkZRU3hUUVVGVExFOUJRVlVzVVVGQlowSXNTVUZCVlR0QlFVTjZReXhSUVVGSkxHbENRVUZwUWl4WFFVRlZPMEZCUXpOQ0xGbEJRVTBzVFVGQlRTeDVRMEZCZVVNN1FVRkJRU3hKUVVONlJEdEJRVVZCTEZGQlFVa3NVVUZCVVN4SFFVRkhPMEZCUTFnc1YwRkJTeXhaUVVGWk8wRkJRVUVzVVVGRFlpeEhRVUZITEV0QlFVc3NWVUZCVlN4TlFVRk5MRWRCUVVjc1MwRkJTenRCUVVGQkxGRkJRMmhETzBGQlFVRXNVVUZEUVN4SFFVRkhMRXRCUVVzc1ZVRkJWU3hOUVVGTkxFdEJRVXM3UVVGQlFTeE5RVU5xUXp0QlFVRkJMRWxCUTBvc1QwRkJUenRCUVVOSUxGZEJRVXNzVlVGQlZTeExRVUZMTEV0QlFVczdRVUZEZWtJc1kwRkJVU3hMUVVGTExGVkJRVlVzVTBGQlV6dEJRVUZCTEVsQlEzQkRPMEZCUlVFc1UwRkJTeXhMUVVGTExHVkJRV1VzVDBGQlR5eExRVUZMTzBGQlEzSkRMRk5CUVVzc1QwRkJUeXhWUVVGVk8wRkJRVUVzUlVGRE1VSTdRVUZCUVN4RlFVVkJMRk5CUVZNc1QwRkJiVUk3UVVGRGVFSXNWMEZCVHl4TFFVRkxMRlZCUVZVc1ZVRkJWU3hEUVVGRExFOUJRVThzVDBGQlR5eExRVUZMTEVsQlFVazdRVUZCUVN4RlFVTTFSRHRCUVVGQkxFVkJSVUVzV1VGQldTeFBRVUZuUWp0QlFVTjRRaXhWUVVGTkxGRkJRVkVzUzBGQlN5eFZRVUZWTEZWQlFWVXNRMEZCUXl4TlFVRk5MRTFCUVUwc1MwRkJTenRCUVVONlJDeFRRVUZMTEZWQlFWVXNUMEZCVHl4UFFVRlBMRU5CUVVNN1FVRkZPVUlzVTBGQlN5eExRVUZMTEdsQ1FVRnBRaXhQUVVGUExFdEJRVXM3UVVGRGRrTXNVMEZCU3l4UFFVRlBMRlZCUVZVN1FVRkJRU3hGUVVNeFFqdEJRVUZCTEVWQlQwRXNVVUZCVVN4UlFVRm5RaXhWUVVGeFJEdEJRVU42UlN4VlFVRk5MRXRCUVVzc1RVRkJUU3hSUVVGUkxGRkJRVkVzVVVGQlVUdEJRVU42UXl4VFFVRkxMR05CUVdNc1NVRkJTU3hGUVVGRk8wRkJRM3BDTEZkQlFVODdRVUZCUVN4RlFVTllPMEZCUVVFc1JVRkZRU3hYUVVGWExFbEJRV3RDTzBGQlEzcENMRlZCUVUwc1YwRkJWeXhGUVVGRk8wRkJRMjVDTEZOQlFVc3NZMEZCWXl4UFFVRlBMRVZCUVVVN1FVRkJRU3hGUVVOb1F6dEJRVUZCTEVWQlJVRXNWVUZCVlR0QlFVTk9MRk5CUVVzc1MwRkJTeXhUUVVGVE8wRkJRMjVDTEdWQlFWY3NUVUZCVFN4TFFVRkxMR05CUVdNc1QwRkJUeXhIUVVGSE8wRkJRekZETEZsQlFVMHNWMEZCVnl4RlFVRkZPMEZCUVVFc1NVRkRka0k3UVVGQlFTeEZRVU5LTzBGQlEwbzdPenRCUlRWRVR5eFRRVUZUTEVsQlFYVkRPMEZCUVVFc1JVRkRia1E3UVVGQlFTeEZRVU5CTEZWQlFWVTdRVUZCUVN4RlFVTldPMEZCUVVFc1JVRkRRU3hMUVVGTExFTkJRVU1zVTBGQlpUdEJRVU42UWl4SFFVRXdRenRCUVVkMFF5eFJRVUZOTEdWQlFXVXNVMEZCVXp0QlFVTTVRaXhSUVVGTkxFMUJRVTBzYjBKQlFVa3NTVUZCZVVJN1FVRkRla01zVVVGQlRTeFhRVUZYTEVsQlFVa3NVMEZCWVR0QlFVVnNReXhYUVVGVFF5eFJRVUZQTEVWQlFVVXNUVUZCVFN4UFFVRlBMRTlCUVU4c1EwRkJReXhMUVVGTExFZEJRVWNzVFVGQlRTeEhRVUZaTzBGQlF6ZEVMRkZCUVVrc1QwRkJUeXhaUVVGWkxGbEJRVms3UVVGREwwSXNZMEZCVVN4UFFVRlBMRTFCUVUwc1RVRkJUU3hKUVVGSkxFTkJRVU03UVVGQlFTeEpRVU53UXl4WFFVRlhMRmxCUVZrc1RVRkJUVHRCUVVONlFpeFZRVUZKTEdWQlFXVXNTMEZCU3p0QlFVRkJMRWxCUXpWQ08wRkJRMEVzVlVGQlRTeFJRVUZSTzBGQlFVRXNSVUZEYkVJN1FVRkZRU3hYUVVGVExGTkJRVk1zVjBGQk1rSTdRVUZEZWtNc1ZVRkJUU3hSUVVGUkxFTkJRVU1zUjBGQlJ5eFRRVUZUTzBGQlF6TkNMRlZCUVUwc1RVRkJUU3hOUVVGTkxFbEJRVWtzUlVGQlJUdEJRVU40UWl4VlFVRk5MRkZCUVZFc1NVRkJTU3hKUVVGSkxFZEJRVWM3UVVGSGVrSXNaVUZCVnl4RFFVRkRMRXRCUVVzc1MwRkJTeXhMUVVGTExFbEJRVWtzVVVGQlVTeEhRVUZITzBGQlIzUkRMR1ZCUVZNc1dVRkJXU3hOUVVGTkxFdEJRVXM3UVVGRmFFTXNWVUZCU1N4RFFVRkRMRTFCUVUwc1NVRkJTU3hIUVVGSExFZEJRVWM3UVVGRGFrSXNVVUZCUVVFc1VVRkJUeXhMUVVGTE8wRkJRMW9zV1VGQlNTeFBRVUZQTEVkQlFVYzdRVUZCUVN4TlFVTnNRanRCUVVGQkxFbEJRMG83UVVGSFFTeFZRVUZOTEVsQlFVa3NRMEZCUXl4TlFVRk5MRTFCUVUwN1FVRkRia0lzV1VGQlRTeE5RVUZOTEVsQlFVa3NRMEZCUXp0QlFVTnFRaXhWUVVGSkxFbEJRVWtzU1VGQlNTeEhRVUZITEVkQlFVYzdRVUZEWkN4alFVRk5PMEZCUVVFc1ZVRkRSaXhQUVVGUExFTkJRVU1zUlVGQlJTeFJRVUZSTzBGQlFVRXNWVUZEYkVJN1FVRkJRU3hSUVVOS0xFbEJRVWtzU1VGQlNTeEpRVUZKTEVkQlFVYzdRVUZEWml4cFFrRkJVeXhEUVVGRE8wRkJRMVlzV1VGQlNTeFRRVUZUTEZOQlFWTXNTMEZCU3l4SFFVRkhPMEZCUXpGQ0xHdENRVUZSTEV0QlFVc3NlVUpCUVhsQ0xFZEJRVWNzUlVGQlJUdEJRVUZCTEZGQlF5OURMRTlCUVU4N1FVRkRTQ3h0UWtGQlV5eFRRVUZUTEV0QlFVczdRVUZCUVN4UlFVTXpRanRCUVVGQkxFMUJRMG9zVDBGQlR6dEJRVU5JTEdOQlFVMHNRMEZCUXl4UFFVRlBMRkZCUVZFc1NVRkJTU3haUVVGWkxFTkJRVU03UVVGRGRrTXNZMEZCVFN4UlFVRlJMRWxCUVVrc1RVRkJUU3haUVVGWk8wRkJRM0JETEdOQlFVMHNVVUZCVVN4TlFVRk5MRWxCUVVrc1RVRkJUU3hSUVVGUkxFMUJRVTBzUzBGQlN5eERRVUZETzBGQlEyeEVMRmxCUVVrc1NVRkJTU3hMUVVGTExFVkJRVVVzVFVGQlRTeFBRVUZQTEU5QlFVOHNRMEZCUXl4UFFVRlBMRkZCUVZFc1IwRkJSeXhOUVVGTkxFTkJRVU03UVVGRE4wUXNhVUpCUVZNc1UwRkJVeXhMUVVGTE8wRkJRVUVzVFVGRE0wSTdRVUZCUVN4SlFVTktMRU5CUVVNN1FVRkJRU3hGUVVOTU8wRkJSVUVzVVVGQlRTeFZRVUZWTEV0QlFVc3NWVUZCVlN4TlFVRk5PMEZCUTJwRExHRkJRVk1zUzBGQlN5eEpRVUZKTEVOQlFVTTdRVUZCUVN4RlFVTjJRaXhEUVVGRE8wRkJRMFFzVjBGQlV5eExRVUZMTEVsQlFVa3NRMEZCUXp0QlFVVnVRaXhaUVVGVkxFMUJRVTA3UVVGRFdpeFpRVUZSTzBGQlJWSXNaVUZCVnl4VFFVRlRMRWxCUVVrc1QwRkJUeXhIUVVGSE8wRkJRemxDTEUxQlFVRkJMRkZCUVU4c1MwRkJTenRCUVVGQkxFbEJRMmhDTzBGQlJVRXNVVUZCU1N4TlFVRk5PMEZCUVVFc1JVRkRaQ3hEUVVGRE8wRkJSVVFzVTBGQlR6dEJRVU5ZT3pzN1FVTjZSazhzVTBGQlV5eExRVUVyUWp0QlFVRkJMRVZCUXpORE8wRkJRVUVzUlVGRFFTeFZRVUZWTzBGQlFVRXNSVUZEVmp0QlFVTktMRWRCUVdsRE8wRkJRemRDTEZGQlFVMHNaVUZCWlN4VFFVRlRPMEZCUXpsQ0xGRkJRVTBzVjBGQlZ5eEpRVUZKTEZOQlFWazdRVUZGYWtNc1RVRkJTVHRCUVVWS0xGZEJRVk1zVTBGQlV5eEhRVUZOTzBGQlEzQkNMR1ZCUVZjc1UwRkJVeXhUUVVGVExGVkJRVlU3UVVGRGJrTXNaVUZCVXl4WlFVRlpMRXRCUVVzN1FVRkZNVUlzVlVGQlNTeFBRVUZQTEZsQlFWa3NXVUZCV1R0QlFVTXZRaXhuUWtGQlVTeExRVUZMTzBGQlFVRXNUVUZEYWtJc1YwRkJWeXhaUVVGWkxFMUJRVTA3UVVGRGVrSXNXVUZCU1N4bFFVRmxMRXRCUVVzN1FVRkJRU3hOUVVNMVFqdEJRVVZCTEZWQlFVa3NUVUZCVHl4UFFVRk5MRkZCUVZFN1FVRkJRU3hKUVVNM1FqdEJRVVZCTEZsQlFWRXNTVUZCU1N4TlFVRk5MRmxCUVZrN1FVRkRPVUlzVlVGQlRTeExRVUZMTEUxQlFVMHNTVUZCU1N4TlFVRk5MRkZCUVZFc1EwRkJReXhEUVVGRE8wRkJRM0pETEZGQlFVa3NUMEZCVHl4TlFVRk5MRTlCUVU4c1UwRkJVeXhQUVVGUExGRkJRVkVzVDBGQlR5eFJRVUZYTzBGQlF6bEVMR1ZCUVZNc1UwRkJVeXhGUVVGRk8wRkJRVUVzU1VGRGVFSTdRVUZCUVN4RlFVTktPMEZCUlVFc1VVRkJUU3hWUVVGVkxFMUJRVTBzVlVGQlZTeE5RVUZOTzBGQlEyeERMR0ZCUVZNc1RVRkJUU3hKUVVGSkxFTkJRVU03UVVGQlFTeEZRVU40UWl4RFFVRkRPMEZCUTBRc1YwRkJVeXhOUVVGTkxFbEJRVWtzUTBGQlF6dEJRVVZ3UWl4WlFVRlZMRTFCUVUwN1FVRkRXaXhWUVVGTkxGRkJRVkU3UVVGRFpDeFpRVUZSTzBGQlFVRXNSVUZEV2l4RFFVRkRPMEZCUlVRc1UwRkJUenRCUVVOWU96czdRVlI2UkVFc1QwRkJUeXhSUVVGUk8wRkJRMllzVDBGQlQwTXNZMEZCWVR0QlFYZERZaXhUUVVGVExFMUJRVTBzUzBGQmEwSTdRVUZEY0VNc1UwRkJUeXhKUVVGTExFMUJRVTBzWjBKQlFXZENMRWxCUVVrN1FVRkJRU3hKUVVkc1F5eFBRVUZQTzBGQlEwZ3NUVUZCUVVFc1UwRkJVU3hqUVVGakxFVkJRVVVzVjBGQlZ5eFZRVUZWTEVkQlFVY3NTVUZCVnp0QlFVRkJMRWxCUXk5RU8wRkJRVUVzU1VGRlFTeExRVUZMTEUxQlFUUkNPMEZCUXpkQ0xHRkJRVThzU1VGQlNTeFJRVUZSTEVOQlFVTXNTMEZCU3l4UlFVRlJPMEZCUXpkQ0xGbEJRVWs3UVVGRFFTeG5Ra0ZCVFN4TFFVRkxMRk5CUVZNN1FVRkJRU3d3UWtGRFpDeExRVUZMTEZOQlFWTXNSMEZCUnl4SlFVRkpMRTlCUVU4c1ZVRkJWU3hKUVVGSkxFZEJRVWM3UVVGQlFTeDFRa0ZEYUVRN1FVRkRTQ3hoUVVGSExFVkJRVVVzUlVGQlJTeExRVUZMTEVkQlFVY3NSVUZCUlN4TlFVRk5MRWRCUVVjN1FVRkJRU3hSUVVNNVFpeFRRVUZUTEU5QlFVODdRVUZEV2l4alFVRkpMRXRCUVVzN1FVRkJRU3hSUVVOaU8wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVER0QlFVRkJMRWxCU1VFc2FVSkJRWFZDTzBGQlEyNUNMRmxCUVUwc1pVRkJaVHRCUVVOeVFpeFhRVUZMTEdOQlFXTTdRVUZCUVN4SlFVTjJRanRCUVVGQkxFbEJSVUVzWTBGQll5eExRVUZoTEUxQlFXdERPMEZCUTNwRUxGVkJRVWtzVDBGQlR5eExRVUZMTEcxQ1FVRnRRaXhaUVVGWk8wRkJRek5ETEdGQlFVc3NaVUZCWlN4TFFVRkxMRU5CUVVNc1lVRkJZVHRCUVVOdVF5eGhRVUZITEZkQlFWY3NUVUZCVFN4UFFVRlBMRkZCUVZFc1IwRkJSeXhEUVVGRExFZEJRVWNzVVVGQlVTeEhRVUZITEd0Q1FVRnJRaXhIUVVGSExFTkJRVU03UVVGQlFTeFJRVU12UlN4RFFVRkRPMEZCUVVFc1RVRkRUQ3hQUVVGUE8wRkJRMGdzWTBGQlRTeGpRVUZqTEV0QlFVc3NTVUZCU1R0QlFVRkJMRTFCUTJwRE8wRkJRVUVzU1VGRFNqdEJRVUZCTEVsQlJVRXNWVUZCVlN4UFFVRmxMRkZCUVZFc1QwRkJUenRCUVVOd1F5eFpRVUZOTEZWQlFWVXNUMEZCVHl4TFFVRkxPMEZCUVVFc1NVRkRhRU03UVVGQlFTeEpRVVZCTEV0QlFVc3NUVUZCY1VJN1FVRkRkRUlzV1VGQlRTeExRVUZMTzBGQlExZ3NWMEZCU3l4UlFVRlJMRU5CUVVNN1FVRkJRU3hKUVVOc1FqdEJRVUZCTEVsQlJVRXNUVUZCVFN4RlFVRkZMR2RDUVVGQlF5eHBRa0ZCWjBJc1MwRkJTeXhOUVVGTkxFMUJRVTBzVVVGQlVTeFBRVUZQTEVkQlFVY3NTVUZCU1N4SlFVRlpMRU5CUVVNc1IwRkJSenRCUVVNelJTeFpRVUZOTEUxQlFVMDdRVUZGV2l4cFFrRkJWeXhOUVVGTk8wRkJRMklzWTBGQlRTeHRRa0ZCYlVJc1NVRkJTU3haUVVGWkxHMUNRVUZ0UWp0QlFVTTFSQ3hoUVVGTExFTkJRVU03UVVGQlFTeE5RVU5XTzBGQlJVRXNZVUZCVHl4UFFVRlBMRTFCUVUwc1IwRkJSenRCUVVOMlFpd3dRa0ZCYjBJc1NVRkJTU3haUVVGWk8wRkJSWEJETEZkQlFVc3NhVUpCUVdsQ1FUdEJRVU4wUWl4VlFVRkpMRkZCUVZFc1dVRkJXU3hOUVVGTk8wRkJRekZDTEcxQ1FVRlhMRU5CUVVNc1dVRkJXVHRCUVVOd1FpeGxRVUZMTEdOQlFXTTdRVUZEYmtJc2FVSkJRVThzUjBGQlJ5eFhRVUZYTzBGQlFVRXNVVUZEZWtJc1EwRkJRenRCUVVGQkxFMUJRMHdzUTBGQlF6dEJRVVZFTEZWQlFVazdRVUZEUVN4WlFVRkpMR1ZCUVdVN1FVRkJRU3hOUVVOMlFpeFJRVUZSTzBGQlEwb3NaVUZCVHl4UFFVRlBMRU5CUVVNc1VVRkJVU3hIUVVGSExHRkJRV0VzU1VGQlNTeGpRVUZqTEVkQlFVY3NSMEZCU1N4SFFVRkhMRmRCUVZjN1FVRkJRU3hOUVVOc1JqdEJRVVZCTEZWQlFVa3NTVUZCU3l4TlFVRkxMRlZCUVZVc1MwRkJTeXhMUVVGTE8wRkJSV3hETEZWQlFVa3NUVUZCVHl4TFFVRkpMRlZCUVZVc1MwRkJTenRCUVVVNVFpeGxRVUZUTzBGQlExUXNWVUZCU1N4TFFVRk5MRXRCUVVrc1MwRkJTenRCUVVWdVFpeFZRVUZKTEZOQlFWTXNRMEZCUXl4RFFVRkRPMEZCUVVFc1NVRkRia0k3UVVGQlFTeEZRVU5LTEVWQlFVYzdRVUZEVURzN08wRkdNVWhCTEVsQlFVa3NTMEZCU3p0QlFVbFVReXhOUVVGTExGTkJRVk1zV1VGQldUdEJRVWt4UWl4TlFVRk5MRTlCUVU4c2IwSkJRVzlDTEVWQlFVVXNTMEZCU3l4RFFVRkRMRVZCUVVVc1UwRkJVME1zUzBGQlNTeE5RVUZOUVN4TFFVRkpMRXRCUVVzc1EwRkJReXhGUVVGRkxFMUJRVTBzVFVGQlRTeE5RVUZOTzBGQlJUVkdMRWxCUVU4c1kwRkJVU3hOUVVGTkxFMUJRVTBzVjBGQlZ6czdPMEZaWm5SRExFOUJRVTlETEZsQlFWYzdRVUZEYkVJc1QwRkJUME1zVlVGQlV6dEJRVU5vUWl4UFFVRlBMRk5CUVZNN096dEJRMFJvUWl4UFFVRlBReXhWUVVGVE8wRkJSMmhDTEU5QlFVOHNhMEpCUVd0Q08wRkJRM3BDTEU5QlFVOHNiMEpCUVc5Q08wRkJRek5DTEU5QlFVOHNiVUpCUVcxQ08wRkJRekZDTEU5QlFVOHNaMEpCUVdkQ08wRkJRM1pDTEU5QlFVOHNhMEpCUVd0Q08wRkJRM3BDTEU5QlFVOHNaVUZCWlRzN08wRkRSbVlzVTBGQlV5eG5Ra0ZCWjBJc1RVRkJjMEk3UVVGRGNFUXNVMEZCVHl4TFFVRkxMRmxCUVZrN1FVRkZlRUlzVFVGQlNTeExRVUZMTEZOQlFWTXNUMEZCVHl4TFFVRkxMRXRCUVVzc1UwRkJVeXhQUVVGUExFVkJRVWNzVVVGQlR6dEJRVU0zUkN4TlFVRkpMRXRCUVVzc1UwRkJVeXhSUVVGUkxFVkJRVWNzVVVGQlR6dEJRVU53UXl4TlFVRkpMRXRCUVVzc1UwRkJVeXhSUVVGUkxFdEJRVXNzUzBGQlN5eFRRVUZUTEZWQlFWVXNSVUZCUnl4UlFVRlBPMEZCUTJwRkxFMUJRVWtzUzBGQlN5eFRRVUZUTEUxQlFVMHNTMEZCU3l4TFFVRkxMRk5CUVZNc1UwRkJVeXhGUVVGSExGRkJRVTg3UVVGRE9VUXNUVUZCU1N4TFFVRkxMRk5CUVZNc1UwRkJVeXhGUVVGSExGRkJRVTg3UVVGRGNrTXNUVUZCU1N4TFFVRkxMRk5CUVZNc1RVRkJUU3hGUVVGSExGRkJRVTg3UVVGRGJFTXNUVUZCU1N4TFFVRkxMRk5CUVZNc1MwRkJTeXhMUVVGTExFdEJRVXNzVTBGQlV5eE5RVUZOTEVWQlFVY3NVVUZCVHp0QlFVVXhSQ3hUUVVGUE8wRkJRMVE3T3p0QlEyNUNRU3hQUVVGUFF5eFhRVUZWT3pzN1FVTkJha0lzVDBGQlR5eGhRVUZoTzBGQlZXSXNTVUZCVFN4VlFVRlZMRkZCUVZFN1FVRm5RM2hDTEZOQlFWTXNTMEZCU3l4TFFVRjNRanRCUVVONlF5eFRRVUZQTEUxQlFVMHNVVUZCVVN4SFFVRkhMRWxCUVVrc1VVRkJVU3hSUVVGUkxFMUJRVTBzUjBGQlJ5eEpRVUZKTEZGQlFWRXNVVUZCVVN4TFFVRkxMRWRCUVVjN1FVRkRja1k3UVVGRlR5eFRRVUZUTEZWQlFWVXNTMEZCZVVNN1FVRkRMMFFzVTBGQlR5eEpRVUZKTEZGQlFWRXNRMEZCUXl4VFFVRlRMRmRCUVZjN1FVRkRjRU1zVVVGQlNTeE5RVUZOTEZGQlFWRXNSMEZCUnl4SFFVRkhPMEZCUTNCQ0xHTkJRVkVzVVVGQlVTeFpRVUZaTEV0QlFVc3NRMEZCUXl4SFFVRkhMRkZCUVZFN1FVRkRla01zV1VGQlNUdEJRVU5CTEd0Q1FVRlJMRkZCUVZFc1VVRkJVU3h0UWtGQmJVSXNSMEZCUnl4RFFVRkRPMEZCUVVFc1VVRkRia1FzVTBGQlV5eFBRVUZQTzBGQlExb3NhVUpCUVU4c1MwRkJTenRCUVVGQkxGRkJRMmhDTzBGQlFVRXNUVUZEU2l4RFFVRkRPMEZCUVVFc1NVRkRUQ3hQUVVGUE8wRkJRMGdzWTBGQlVTeFJRVUZSTEZkQlFWY3NTMEZCU3l4RFFVRkRMRWRCUVVjc1VVRkJVVHRCUVVONFF5eFpRVUZKTzBGQlEwRXNhMEpCUVZFc1VVRkJVU3hSUVVGUkxGbEJRVmtzUjBGQlJ5eERRVUZETzBGQlFVRXNVVUZETlVNc1UwRkJVeXhQUVVGUE8wRkJRMW9zYVVKQlFVOHNTMEZCU3p0QlFVRkJMRkZCUTJoQ08wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVER0QlFVRkJMRVZCUTBvc1EwRkJRenRCUVVOTU96czdRVVJvUlVFc1QwRkJUeXhYUVVGWE96czdRVVZFYkVJc1QwRkJUME1zWTBGQllUdEJRVWxpTEVsQlFVMHNUMEZCVDBNc1UwRkJVVHRCUVVWeVFpeFRRVUZUTEZOQlFWTkRMRmRCUVd0Q0xGVkJRWFZDTzBGQlF6bEVMRk5CUVU5RUxGTkJRVkVzUzBGQlN5eFRRVUZUUXl4WFFVRlZMRTFCUVUwc1MwRkJTeXhYUVVGWExFTkJRVU03UVVGRGJFVTdRVUUyUWs4c1UwRkJVeXhYUVVOYUxFMUJRMEVzVFVGRFFTeFZRVU5CTEZkQlExYzdRVUZEV0N4TlFVRkpMR1ZCUVdVN1FVRkRia0lzVFVGQlNTeFJRVUUyUWp0QlFVTnFReXhSUVVGTkxHTkJRV01zYjBKQlFVa3NTVUZCWjBJN1FVRkZlRU1zVjBGQlV5eFZRVUZWTEZWQlFXdERPMEZCUTJwRUxHRkJRVk5ETEV0QlFVa3NUMEZCVlR0QlFVTnVRaXhWUVVGSkxGVkJRVlVzWTBGQll6dEJRVU40UWl4MVFrRkJaVHRCUVVObUxHOUNRVUZaTEZGQlFWRXNRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJRenRCUVVGQkxFMUJRM0JETzBGQlFVRXNTVUZEU2p0QlFVVkJMRkZCUVVrc1dVRkJXU3hUUVVGVExFZEJRVWM3UVVGRGVFSXNZMEZCVVN4VFFVRlRMRTFCUVUwc1RVRkJUVHRCUVVONlFpeFpRVUZKTEU5QlFVOHNZVUZCWVN4WlFVRlpPMEZCUTJoRExHZENRVUZOTEZGQlFWRXNVMEZCVXl4WlFVRlpPMEZCUTI1RExHTkJRVWtzYVVKQlFXbENMRk5CUVZNN1FVRkRNVUlzYTBKQlFVMHNTMEZCUzBFc1NVRkJSenRCUVVGQkxGVkJRMnhDTEU5QlFVODdRVUZEU0N4WlFVRkJRU3hMUVVGSkxFdEJRVXM3UVVGQlFTeFZRVU5pTzBGQlFVRXNVVUZEU2l4UFFVRlBPMEZCUTBnc2IwSkJRVlVzVVVGQlVTeEZRVUZGTEV0QlFVc3NRMEZCUXl4WFFVRlhPMEZCUTJwRExGbEJRVUZCTEV0QlFVa3NXVUZCV1N4VlFVRlZMRkZCUVZFc1dVRkJXU3hKUVVGTExFMUJRVms3UVVGQlFTeFZRVU51UlN4RFFVRkRPMEZCUVVFc1VVRkRURHRCUVVGQkxFMUJRMG9zUTBGQlF6dEJRVUZCTEVsQlEwdzdRVUZGUVN4blFrRkJXU3hKUVVGSkxGRkJRVkU3UVVGRmVFSXNWMEZCVHl4TlFVRk5PMEZCUTFRc2EwSkJRVmtzVDBGQlR5eFJRVUZSTzBGQlF6TkNMRlZCUVVrc1dVRkJXU3hUUVVGVExFZEJRVWM3UVVGRGVFSXNaVUZCVHl4UFFVRlBPMEZCUTJRc1owSkJRVkU3UVVGQlFTeE5RVU5hTzBGQlFVRXNTVUZEU2p0QlFVRkJMRVZCUTBvN1FVRkZRU3hUUVVGUExFbEJRVWtzVTBGQlV5eE5RVUZOTEdOQlFXTXNVMEZCVXp0QlFVTnlSRHM3TzBGR0wwVlBMRWxCUVUwc1EwRkJSU3hUUVVGVExGVkJRVmNzU1VGQlNTeFpRVUZaTEVsQlFVazdRVUZEYUVRc1NVRkJUU3hEUVVGRkxHbENRVUZwUWl4clFrRkJiVUlzU1VGQlNTeFpRVUZaTEV0QlFVczdRVUZEYWtVc1NVRkJUU3hEUVVGRkxHdENRVUZyUWl4dFFrRkJiMElzU1VGQlNTeFpRVUZaTEV0QlFVczdRVUZEYmtVc1NVRkJUU3hEUVVGRkxHVkJRV1VzWjBKQlFXbENMRWxCUVVrc1dVRkJXU3hMUVVGTE8wRkJRemRFTEVsQlFVMHNRMEZCUlN4alFVRmpMR1ZCUVdkQ0xFbEJRVWtzV1VGQldTeExRVUZMTzBGQlF6TkVMRWxCUVUwc1EwRkJSU3hqUVVGakxHVkJRV2RDTEVsQlFVa3NXVUZCV1N4TFFVRkxPMEZCUXpORUxFbEJRVTBzUTBGQlJTeHRRa0ZCYlVJc2IwSkJRWEZDTEVsQlFVa3NXVUZCV1N4TFFVRkxPMEZCUTNKRkxFbEJRVTBzUTBGQlJTeHhRa0ZCY1VJc2MwSkJRWFZDTEVsQlFVa3NXVUZCV1N4RFFVRkRPMEZCUTNKRkxFbEJRVTBzUTBGQlJTeGpRVUZqTEdWQlFXZENMRWxCUVVrc1dVRkJXU3hOUVVGTk8wRkJRelZFTEVsQlFVMHNaMEpCUVdkQ0xFMUJRVTBzVDBGQlR5eEpRVUZKTEZOQlFWTTdRVUZGZGtRc1ZVRkJWU3h4UWtGQmNVSXNSVUZETlVJc1MwRkJTeXhOUVVGTkxIRkNRVUZ4UWl4SlFVRkpMRU5CUVVNc1JVRkRja01zVFVGQlRTeE5RVUZOTEhGQ1FVRnhRaXhMUVVGTExFTkJRVU03UVVGRmJrTXNTVUZCVFN4alFVRmpMRmRCUVZjc1NVRkJTU3hMUVVGTkxFMUJRemxEUXl4TlFVRkxMRk5CUVZNc1kwRkJZeXhGUVVGRkxFOUJRVThzVDBGQlR5eERRVUZGTzBGQlJYcERMRWxCUVUwc1lVRkJZU3hYUVVGWExFbEJRVWtzUzBGQlRTeE5RVU0zUTBFc1RVRkJTeXhUUVVGVExHTkJRV01zUlVGQlJTeFBRVUZQTEdkQ1FVRm5RaXhEUVVGRk8wRkJSV3hFTEVsQlFVMHNVMEZCVXl4WFFVRlhMRWxCUVVrc1NVRkJTU3hMUVVGTExFdEJRVTBzV1VGQldUdEJRVU01UkN4UlFVRk5MRk5CUVZNc1RVRkJUU3hWUVVGVkxGZEJRVmM3UVVGRE1VTXNVMEZCVHl4UFFVTktMRkZCUVZFc2IwSkJRVzlDTEVkQlFVY3NSVUZETDBJc1VVRkJVU3huUWtGQlowSXNSMEZCUnl4RlFVTXpRaXhSUVVGUkxHTkJRV01zUjBGQlJ5eEZRVU42UWl4UlFVRlJMR2RDUVVGblFpeEhRVUZITzBGQlEyaERMRU5CUVVNN1FVRkZUU3hKUVVGTkxHTkJRV01zVjBGQlZ5eEpRVUZKTEVsQlFVa3NTMEZCVFN4WlFVRlpPMEZCUXpsRUxGRkJRVTBzVTBGQlV5eE5RVUZOTEZWQlFWVXNRMEZCUXl4TlFVRk5MRTFCUVUwc01rTkJRVEpETEVOQlFVTTdRVUZEZUVZc1UwRkJUenRCUVVOVUxFTkJRVU03UVVGUFJDeEpRVUZKTEdOQlFUSkNPMEZCUVVFc1JVRkROMElzVjBGQlZ6dEJRVUZCTEVWQlExZ3NVMEZCVXp0QlFVTllPMEZCUlU4c1NVRkJUU3huUWtGQlowSXNWMEZCVnl4aFFVRmhMRXRCUVVzc1MwRkJTeXhMUVVGTkxGbEJRVms3UVVGREwwVXNUVUZCU1R0QlFVTkdMRlZCUVUwc1UwRkJVeXhOUVVGTkxGVkJRVlVzYzBOQlFYTkRPMEZCUTNKRkxGVkJRVTBzVlVGQlZTeExRVUZMTEUxQlFVMHNUVUZCVFR0QlFVTnFReXhWUVVGTkxGbEJRVmtzV1VGQldTeEpRVUZKTzBGQlEyeERMRmRCUVU4c1JVRkJSU3hYUVVGWExGRkJRVkU3UVVGQlFTeEZRVU01UWl4VFFVRlRMRXRCUVVzN1FVRkRXaXhaUVVGUkxFMUJRVTBzTWtKQlFUSkNMRWRCUVVjN1FVRkROVU1zVjBGQlR6dEJRVUZCTEVWQlExUTdRVUZEUml4RFFVRkRPenM3UVVjMVJFUXNUMEZCVDBNc1ZVRkJVenRCUVVOb1FpeFBRVUZQUXl4WlFVRlhPenM3UVVOR2JFSXNUMEZCVDBNc1ZVRkJVenRCUVVOb1FpeFBRVUZQUXl4VlFVRlRPMEZCUTJoQ0xFOUJRVTlETEdOQlFXRTdRVUZKY0VJc1NVRkJUU3hsUVVGbExFbEJRVWxETEV0QlFVa3NVVUZCVVR0QlFVVnlReXhUUVVGVExFbEJRVWtzVVVGQmRVSXNUMEZCZFVJc1IwRkJWenRCUVVOc1JTeE5RVUZKTEVOQlFVTXNWMEZCVnl4UlFVRlJMRTlCUVU4c1EwRkJReXhIUVVGSE8wRkJReTlDTEZkQlFVOHNaMEpCUVdkQ0xHTkJRV01zVDBGQlR5eFJRVUZSTEV0QlFVc3NRMEZCUXp0QlFVRkJMRVZCUXpsRU8wRkJRMG83UVVGRlFTeFRRVUZUTEdOQlFXTXNVMEZCZVVJc1VVRkJkMEk3UVVGRmNFVXNVMEZCVHp0QlFVTllPMEZCUlVFc1UwRkJVeXhYUVVGWExGRkJRWGRDTEU5QlFYVkNMRWRCUVZjN1FVRkZNVVVzVFVGRFNTeHBRa0ZCYVVKQkxFdEJRVWtzWTBGRGNrSXNiMEpCUVc5Q0xGVkJRM0JDTEU5QlFVOHNUMEZCVHl4dFFrRkJiVUlzV1VGRGJrTTdRVUZEUlN4WFFVRlBMR1ZCUVdVc1MwRkJTenRCUVVNelFpeFhRVUZQTzBGQlFVRXNSVUZEV0R0QlFVVkJMRTFCUTBrc2FVSkJRV2xDUVN4TFFVRkpMRlZCUTNKQ0xHdENRVUZyUWtFc1MwRkJTU3hUUVVOMFFpeE5RVUZOTEZOQlFWTXNUVUZEWml4TlFVRk5MRk5CUVZNc1VVRkRaaXhSUVVGUkxFdEJRVXNzVFVGQlRTeFRRVU55UWp0QlFVTkZMRmRCUVU4c1ZVRkJWU3hQUVVGUExFMUJRVTBzU1VGQlNUdEJRVU5zUXl4WFFVRlBPMEZCUVVFc1JVRkRXRHRCUVVWQkxFMUJRVWtzYVVKQlFXbENRU3hMUVVGSkxGZEJRVmNzYTBKQlFXdENRU3hMUVVGSkxGbEJRVms3UVVGRGJFVXNWMEZCVHl4WlFVRlpMRXRCUVVzN1FVRkRlRUlzVjBGQlR6dEJRVUZCTEVWQlExZzdRVUZGUVN4TlFVTkpMR2xDUVVGcFFrTXNTMEZCU1N4alFVTndRaXhyUWtGQmEwSkVMRXRCUVVrc1kwRkJZeXhyUWtGQmEwSkJMRXRCUVVrc1kwRkROMFE3UVVGRFJTeFhRVUZQTEdWQlFXVXNTMEZCU3p0QlFVTXpRaXhYUVVGUE8wRkJRVUVzUlVGRFdEdEJRVVZCTEUxQlFVa3NhVUpCUVdsQ1F5eExRVUZKTEZsQlFWa3NhMEpCUVd0Q1FTeExRVUZKTEUxQlFVMDdRVUZCUVN4RlFVVnFSVHRCUVVWQkxFMUJRVWtzYVVKQlFXbENSQ3hMUVVGSkxGVkJRVlVzYTBKQlFXdENRU3hMUVVGSkxHRkJRV0U3UVVGRGJFVXNWMEZCVHl4WFFVRlhMRXRCUVVzN1FVRkRka0lzVjBGQlR6dEJRVUZCTEVWQlExZzdRVUZGUVN4TlFVRkpMR2xDUVVGcFFrRXNTMEZCU1N4alFVRmpMR3RDUVVGclFrRXNTMEZCU1N4VlFVRlZPMEZCUTI1RkxGZEJRVThzVjBGQlZ5eExRVUZMTzBGQlEzWkNMRmRCUVU4N1FVRkJRU3hGUVVOWU8wRkJSVUVzVTBGQlR6dEJRVU5ZTzBGQlJVRXNVMEZCVXl4UFFVRlBMRkZCUVhkQ0xFOUJRWFZDTzBGQlF6TkVMRTFCUVVrc1kwRkJZeXhSUVVGUkxFdEJRVXNzUlVGQlJ6dEJRVVZzUXl4TlFVRkpMR3RDUVVGclFrRXNTMEZCU1N4VlFVRlZMR2xDUVVGcFFrRXNTMEZCU1N4cFFrRkJhVUk3UVVGRGRFVXNWMEZCVHl4UFFVRlBMR3RDUVVGclFpeExRVUZMTzBGQlFVRXNSVUZEZWtNN1FVRkZRU3hOUVVGSkxHVkJRV1VzVlVGQlZTeFBRVUZQTEU5QlFVOHNZVUZCWVN4WlFVRlpPMEZCUTJoRkxGZEJRVThzVDBGQlR5eFZRVUZWTEVsQlFVazdRVUZCUVN4RlFVTm9RenRCUVVWQkxFMUJRVWtzV1VGQldTeFZRVUZWTEU5QlFVOHNUMEZCVHl4VlFVRlZMRmxCUVZrN1FVRkRNVVFzVjBGQlR5eFBRVUZQTEU5QlFVOHNTMEZCU3p0QlFVRkJMRVZCUXpsQ08wRkJSVUVzVVVGQlRTeE5RVUZOTEdsQ1FVRnBRaXhMUVVGTExGTkJRVk1zVFVGQlRTeEZRVUZGTzBGQlEzWkVPMEZCUlVFc1NVRkJUU3hGUVVGRkxGVkJRVlVzYTBKQlFXdENMRWxCUVVrc1UwRkJVenRCUVVGQkxFVkJRemRETEU5QlFVOHNVVUZCVVN4TFFVRkxPMEZCUTJoQ0xGRkJRVWtzUlVGQlJTeHJRa0ZCYTBKQkxFdEJRVWtzVTBGQlV6dEJRVU5xUXl4aFFVRlBMRkZCUVZFc1MwRkJTeXhOUVVGTkxIRkNRVUZ4UWl4TlFVRk5MRVZCUVVVc1EwRkJRenRCUVVGQkxFbEJRelZFTzBGQlJVRXNWVUZCVFN4TlFVRk5MRTlCUVU4c2EwSkJRV3RDTzBGQlEzSkRMRkZCUVVrN1FVRkZTaXhWUVVGTkxGTkJRVk1zUTBGQlEwVXNVMEZCWjBJN1FVRkROVUlzVlVGQlNTeERRVUZEUVN4TFFVRkpMRk5CUVZNc1IwRkJSeXhMUVVGTExFTkJRVU5CTEV0QlFVa3NVMEZCVXl4SFFVRkhMRWRCUVVjN1FVRkRNVU1zVVVGQlFVRXNUMEZCVFN4UFFVRlBRU3hKUVVGSE8wRkJRVUVzVFVGRGNFSTdRVUZGUVN4VlFVRkpMRk5CUVZVc1MwRkJTU3huUWtGQlowSXNVVUZCVVR0QlFVVXhReXhwUWtGQlZ5eEpRVUZKUml4TFFVRkpMRmxCUVZrN1FVRkRMMElzWlVGQlV5eHBRa0ZCYVVKRkxFbEJRVWM3UVVGRE4wSXNWVUZCU1N4aFFVRmhMRlZCUVZWR0xFdEJRVWtzTkVKQlFUUkNPMEZCUVVFc1NVRkRMMFE3UVVGRlFTeFJRVUZKTEdWQlFXVXNWVUZCVlR0QlFVTjZRaXhoUVVGUExFbEJRVWtzU1VGQlNTeERRVUZETzBGQlEyaENMRmxCUVUwc1ZVRkJWU3hKUVVGSkxGVkJRVlVzVFVGQlRTeFBRVUZQTEVsQlFVa3NTVUZCU1N4RFFVRkRMRU5CUVVNN1FVRkRja1FzWjBKQlFWVXNUMEZCVHp0QlFVRkJMRWxCUTNKQ0xFOUJRVTg3UVVGRFNDeGhRVUZQTEVkQlFVYzdRVUZCUVN4SlFVTmtPMEZCUVVFc1JVRkRTanRCUVVGQkxFVkJRMEVzVTBGQlV5eFJRVUZSTEZkQlFWYzdRVUZEZUVJc1VVRkJTU3hGUVVGRkxHdENRVUZyUWtFc1MwRkJTU3hUUVVGVE8wRkJRMnBETEdGQlFVOHNVVUZCVVN4TFFVRkxMRTFCUVUwc01rSkJRVEpDTEUxQlFVMHNSVUZCUlN4RFFVRkRPMEZCUVVFc1NVRkRiRVU3UVVGRlFTeFJRVUZKTEhGQ1FVRnhRaXhWUVVGVk8wRkJReTlDTEdGQlFVOHNZVUZCWVN4VlFVRlZMRWxCUVVrc1JVRkJSU3hOUVVGTkxFdEJRVXM3UVVGREwwTXNXVUZCVFN4VlFVRlZMRlZCUVZVN1FVRkJRU3hSUVVOMFFpeE5RVUZQTEU5QlFVOHNZVUZCWVN4VlFVRlZMRWxCUVVrc1JVRkJSU3hOUVVGTkxFdEJRVXM3UVVGQlFTeE5RVU14UkR0QlFVTkJMR2RDUVVGVkxFOUJRVTg3UVVGQlFTeEpRVU55UWl4UFFVRlBPMEZCUTBnc1lVRkJUeXhuUWtGQlowSXNWVUZCVlN4TlFVRk5MRXRCUVVzc1EwRkJRenRCUVVGQkxFbEJRMnBFTzBGQlFVRXNSVUZEU2p0QlFVRkJMRVZCUTBFc1UwRkJVeXhSUVVGUkxFOUJRVThzVVVGQlVTeEpRVUZKTzBGQlEyaERMRkZCUVVrc1JVRkJSU3hwUWtGQmFVSkhMRk5CUVZFc1UwRkJVenRCUVVOd1F5eGpRVUZSU0N4TFFVRkpMRTFCUVUwc1NVRkJTU3hQUVVGUExFdEJRVXNzUTBGQlF6dEJRVUZCTEVsQlEzWkRPMEZCUlVFc1VVRkJTU3hYUVVGWExGRkJRVkVzVDBGQlR5eExRVUZMTEVWQlFVYzdRVUZGZEVNc1VVRkJTU3hyUWtGQmEwSXNWVUZCVlR0QlFVTTFRaXhoUVVGUExGTkJRVk1zUzBGQlN6dEJRVU55UWp0QlFVRkJMRWxCUTBvN1FVRkZRU3hSUVVGSkxHdENRVUZyUWtFc1MwRkJTU3hYUVVGWE8wRkJRMnBETEZWQlFVa3NhVUpCUVdsQ0xGVkJRVlU3UVVGRE0wSXNiVUpCUVZjc1RVRkJUU3hOUVVGTkxGVkJRVlU3UVVGRE4wSXNZMEZCU1N4UlFVRlJMRWxCUVVrc1MwRkJTenRCUVVGQkxGRkJRM3BDTzBGQlJVRXNZMEZCVFN4UlFVRlJMR1ZCUVdVc1EwRkJReXhIUVVGSExFbEJRV0ZKTEZkQlFXdENPMEZCUXpWRUxHTkJRVWtzUlVGQlJTeGpRVUZqUkN4VFFVRlJMRk5CUVZNN1FVRkRha01zYjBKQlFWRXNUVUZCVFN4VlFVRlZMR05CUVdNc1JVRkJSU3hQUVVGUExFMUJRVTBzUlVGQlJTeERRVUZETzBGQlEzaEVPMEZCUVVFc1ZVRkRTanRCUVVOQkxHMUNRVUZUTEZGQlFWRXNTVUZCU1VNc1RVRkJTenRCUVVGQkxGRkJRemxDTEVOQlFVTTdRVUZGUkN4alFVRk5MRkZCUVZFc2FVSkJRV2xDTEVOQlFVTXNSMEZCUnl4UFFVRm5RanRCUVVNdlF5eGpRVUZKTEVWQlFVVXNZMEZCWTBRc1UwRkJVU3hUUVVGVE8wRkJRMnBETEc5Q1FVRlJMRTFCUVUwc1ZVRkJWU3hwUWtGQmFVSXNSVUZCUlN4VFFVRlRMRTFCUVUwc1JVRkJSU3hEUVVGRE8wRkJRemRFTzBGQlFVRXNWVUZEU2p0QlFVTkJMR2xDUVVGUExGRkJRVkVzUlVGQlJUdEJRVUZCTEZGQlEzSkNMRU5CUVVNN1FVRkZSQ3hyUWtGQlZTeE5RVUZOTEUxQlFVMHNVVUZCVVN4RFFVRkRPMEZCUXk5Q08wRkJRVUVzVFVGRFNqdEJRVVZCTEZWQlFVa3NVVUZCVVN4UFFVRlBMRXRCUVVzN1FVRkRlRUk3UVVGQlFTeEpRVU5LTzBGQlJVRXNWVUZCVFN4TlFVRk5MR05CUVdNc1MwRkJTeXhQUVVGUExFMUJRVTBzUlVGQlJUdEJRVUZCTEVWQlEyeEVPMEZCUTBvc1EwRkJRenM3TzBGRWVrdEVMRTlCUVU4c1QwRkJUeXh0UWtGQmJVSTdRVUZCUVN4RlFVTTNRaXhMUVVGTFJTeExRVUZKTzBGQlFVRXNSVUZEVkN4UlFVRlJRU3hMUVVGSk8wRkJRVUVzUlVGRFdpeFhRVUZYUVN4TFFVRkpPMEZCUVVFN1FVRkJRU3hGUVVWbUxHRkJRV0ZCTEV0QlFVazdRVUZCUVN4RlFVTnFRaXhQUVVGUFFTeExRVUZKTzBGQlFVRXNSVUZEV0N4UFFVRlBRU3hMUVVGSk8wRkJRVUVzUlVGRFdDeFBRVUZQUVN4TFFVRkpPMEZCUVVFc1JVRkRXQ3hWUVVGVlFTeExRVUZKTzBGQlFVRXNSVUZEWkN4WlFVRlpRU3hMUVVGSk8wRkJRVUVzUlVGRGFFSXNVMEZCVTBFc1MwRkJTVHRCUVVGQkxFVkJRMklzVTBGQlUwRXNTMEZCU1R0QlFVRkJMRVZCUTJJc1ZVRkJWVUVzUzBGQlNUdEJRVUZCTEVWQlEyUXNaMEpCUVdkQ1FTeExRVUZKTzBGQlFVRXNSVUZEY0VJc1VVRkJVVU1zVDBGQlRUdEJRVUZCTEVWQlEyUXNUMEZCVDBRc1MwRkJTVHRCUVVGQkxFVkJRMWdzVVVGQlVVRXNTMEZCU1R0QlFVRkJMRVZCUTFvc1kwRkJZMEVzUzBGQlNUdEJRVUZCTEVWQlEyeENMRkZCUVZGRExFOUJRVTA3UVVGRGJFSXNRMEZCUXpzN08wRk1Za1FzVTBGQlV5eGhRVUZoTzBGQlEzQkNMRkZCUVUwc1QwRkJUeXhWUVVGVkxGbEJRVms3UVVGRGJrTXNVVUZCVFN4UlFVRlJMR05CUVdNc1RVRkJUU3hQUVVGUE8wRkJSWHBETEZGQlFVMHNUMEZCVHl4RFFVRkRMRXRCUVhGQ0xGTkJRVFpDTzBGQlF6bEVMRkZCUVVrc1dVRkJXU3hMUVVGTE8wRkJRM0pDTEZGQlFVa3NiMEpCUVc5Q0xGbEJRVmtzUzBGQlN5eFhRVUZYTzBGQlEzQkVMRk5CUVVzc1VVRkJVU3gzUWtGQmQwSXNUVUZCVFR0QlFVTjZReXhWUVVGSkxHOUNRVUZ2UWl4WlFVRlpMRXRCUVVzc1YwRkJWenRCUVVGQkxFbEJRM1JFTEVOQlFVTTdRVUZCUVN4RlFVTklPMEZCUlVFc1UwRkRSU3h2UWtGQlF5eFRRVU5ETERoQ1FVRkRMRTlCUVVrc1RVRkJUU3hQUVVOU0xGZEJRVU1zVTBGRFFTeHZRa0ZCUXl4blFrRkJWeXhIUVVGSExFTkJRVU1zVTBGQlV5eExRVUZMTEUxQlFVMHNTVUZCU1N4SFFVTjBReXc0UWtGQlF5eFhRVUZOTEU5QlFVOHNZMEZCWXl4TlFVRk5MRTlCUVU4c1IwRkJSeXhIUVVNNVF5eEhRVVZLTEVkQlEwWTdRVUZGU2p0QlFVVkJMRk5CUVZNc1owSkJRV2RDTzBGQlEzWkNMRkZCUVUwc1ZVRkJWU3hoUVVGaExGbEJRVms3UVVGRGVrTXNVVUZCVFN4UFFVRlBMR05CUVdNc1UwRkJVeXhOUVVGTk8wRkJRekZETEZGQlFVMHNVVUZCVVN4alFVRmpMRk5CUVZNc1QwRkJUenRCUVVVMVF5eFRRVU5GTEhGQ1FVRkRMRk5CUTBNN1FVRkJRU3gzUWtGQlF5eFRRVUZKTEZOQlFWTXNTMEZCU3l4UFFVRlBMRWRCUTNoQ0xEaENRVUZETEZGQlFVc3NUMEZCVHl4TlFVTldMRmRCUVVORExGVkJRMEZCTEZOQlEwVXNiMEpCUVVNc1YwRkJUU3hWUVVGVkxHTkJRV05CTEU5QlFVMHNWVUZCVlN4SFFVRkhMRWRCUjNoRUxFZEJRMFk3UVVGQlFTeEpRVU5CTEc5Q1FVRkRMRk5CUVVrc1UwRkJVeXhOUVVGTkxFOUJRVThzUjBGRGVrSXNPRUpCUVVNc1VVRkJTeXhQUVVGUExFOUJRMVlzVjBGQlEwTXNWMEZEUVVFc1ZVRkRSU3h2UWtGQlF5eFhRVUZOTEZWQlFWVXNZMEZCWTBFc1VVRkJUeXhWUVVGVkxFZEJRVWNzUjBGSGVrUXNSMEZEUmp0QlFVRkJMRXRCUTBZN1FVRkZTanRCUVVWQkxGTkJRVk1zYTBKQlFXdENPMEZCUTNwQ0xGRkJRVTBzV1VGQldTeGxRVUZsTEZsQlFWazdRVUZGTjBNc1UwRkJUenRCUVVGQkxFbEJRVU03UVVGQlFUdEJRVUZCTEUxQlEwNHNaMEpCUVdkQ1F5eExRVUZKTEhWQ1FVRjFRanRCUVVGQkxFMUJRek5ETEdGQlFXRXNZMEZCWXl4WFFVRlhMR05CUVdNN1FVRkJRU3hOUVVOd1JDdzRRa0ZCUXl4WFFVRk5MRTlCUVUwc1lVRkJXU3hQUVVGTkxHRkJRVXM3UVVGQlFUdEJRVUZCTEVWQlEzUkRPMEZCUTBZN1FVRkZRU3hUUVVGVExHZENRVUZuUWp0QlFVTjJRaXhSUVVGTkxFMUJRVTBzWVVGQllTeFpRVUZaTzBGQlJYSkRMRk5CUVU4N1FVRkJRU3hKUVVGRE8wRkJRVUU3UVVGQlFTeE5RVUZKTEU5QlFVMDdRVUZCUVN4TlFVTm9RaXhUUVVGVExHTkJRV01zUzBGQlN5eFhRVUZYTzBGQlFVRXNUVUZEZGtNN1FVRkJRU3cwUWtGQlF5eFhRVUZOTEU5QlFVOHNZMEZCWXl4TFFVRkxMRmxCUVZrc1JVRkJSU3hIUVVGSExFOUJRVXNzUjBGQlJ5eExRVUZMTEUxQlFVMHNTVUZCU1N4SFFVRkhMRU5CUVVNc1IwRkJSeXhIUVVGSE8wRkJRVUVzVVVGRGJrWXNiMEpCUVVNc1YwRkJUU3hWUVVGVkxHTkJRV01zUzBGQlN5eHBRa0ZCYVVJc1IwRkJSenRCUVVGQk8wRkJRVUU3UVVGQlFTeEZRVU14UkR0QlFVTkdPMEZCUlVFc1UwRkJVeXhUUVVGVExGRkJRVzFETzBGQlEyNUVMRk5CUVU4c1QwRkJUeXhUUVVOV0xFZEJRVWNzVDBGQlR5eE5RVUZOTEV0QlFVc3NUMEZCVHl4TFFVRkxMRXRCUTJwRExFOUJRVThzVVVGRFRDeEhRVUZITEU5QlFVOHNTMEZCU3l4TFFVRkxMRTlCUVU4c1MwRkJTeXhMUVVOb1F5eEhRVUZITEU5QlFVOHNTMEZCU3p0QlFVTjJRanRCUVVWQkxGTkJRVk1zWTBGQll6dEJRVU55UWl4UlFVRk5MRkZCUVZFc1YwRkJWeXhaUVVGWk8wRkJSWEpETEZOQlFVOHNiMEpCUVVNc1VVRkJTeXhQUVVGUExHTkJRV01zVDBGQlR5eFRRVUZUTEVkQlF5OURMRmRCUVVNc1QwRkJhVU1zUjBGQlJ5eERRVUZETEVsQlEzSkRPMEZCUVVFc1NVRkJRenRCUVVGQk8wRkJRVUVzVFVGQlR5eFBRVUZOTzBGQlFVRXNUVUZEV2l4WFFVRlhMRTFCUVUwc1IwRkJSeXhEUVVGRExFVkJRVVVzVjBGQlZ6dEJRVUZCTEUxQlEyeERPMEZCUVVFc1VVRkJRenRCUVVGQk8wRkJRVUVzVlVGRFF5eFBRVUZQTEdOQlFXTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1owSkJRV2RDTEVWQlFVVXNSMEZCUnl4UFFVRkxMRWxCUVVrc1NVRkJTU3hYUVVGWExGTkJRVk03UVVGQlFTeFZRVU5zUml4bFFVRmxPMEZCUVVFc1ZVRkRaaXhQUVVGUExHTkJRV01zUjBGQlJ5eERRVUZETEVkQlFVY3NWVUZCVlN4RlFVRkZMRWRCUVVjc1RVRkJUU3hUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZCUVR0QlFVRkJMRTFCUVVjN1FVRkJRVHRCUVVGQkxFVkJRM1pGTEVsQlEwY3NiMEpCUVVNc1UwRkJTU3hIUVVWYU8wRkJRMFk3UVVGRlFTeFRRVUZUTEdGQlFXRTdRVUZEY0VJc1VVRkJUU3hQUVVGUExHTkJRV01zV1VGQldUdEJRVU4yUXl4UlFVRk5MR0ZCUVdFc1kwRkJZeXhOUVVGTkxGbEJRVms3UVVGRmJrUXNVVUZCVFN4VFFVRlRMRU5CUVVNc1VVRkJkME03UVVGRGRFUXNWMEZCVHl4SlFVRkpMRTlCUVU4c1VVRkJUU3hGUVVGRkxFZEJRVWNzVFVGQlRTeFBRVUZQTEVkQlFVY3NUVUZCVFN4SFFVRkhMRVZCUVVVc1MwRkJTeXhEUVVGRExFZEJRVWNzVFVGQlRTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RlFVRkZPMEZCUVVFc1JVRkRjRVk3UVVGRlFTeFRRVUZQTEc5Q1FVRkRMRk5CUVVrc1QwRkJUU3hqUVVOb1FpdzRRa0ZCUXl4UFFVRkpMRTFCUVUwc1YwRkJWeXhOUVVGTkxFZEJRM3BDTEZkQlFVTXNUMEZEUVR0QlFVRkJMRWxCUVVNN1FVRkJRVHRCUVVGQkxFMUJRME1zVDBGQlR5eGpRVUZqTEUxQlFVMHNhMEpCUVd0Q0xFVkJRVVVzUjBGQlJ5eFJRVUZOTEU5QlFVOHNTMEZCU3l4WlFVRlpMRVZCUVVVN1FVRkJRU3hOUVVOc1JpeFhRVUZYTEUxQlFVMHNSMEZCUnl4TlFVRk5PMEZCUVVFc1RVRkZla0lzWVVGQlJ6dEJRVUZCTzBGQlFVRXNSVUZEVGl4SFFVVktMRWRCUTBZN1FVRkRSanRCUVVWQkxGTkJRVk1zVlVGQlZUdEJRVU5xUWl4UlFVRk5MRU5CUVVNc1UwRkJVeXhWUVVGVkxFbEJRVWtzV1VGQldTeEpRVUZKTzBGQlF6bERMRk5CUTBVN1FVRkJRU3hKUVVGRE8wRkJRVUU3UVVGQlFTeE5RVU5ETEdkQ1FVRm5Ra0VzUzBGQlNTeDFRa0ZCZFVJN1FVRkJRU3hOUVVNelF5eGhRVUZoTzBGQlFVRXNUVUZGWWl3NFFrRkJReXhSUVVGTExFOUJRVThzWlVGRFZpeFhRVUZETEZWQlFWVTdRVUZEVml4WlFVRkpMRTlCUVU4c1UwRkJVenRCUVVOc1FpeG5Ra0ZCVFN4WlFVRlpMRTFCUVUwc1VVRkJVU3hyUWtGQmEwSXNRMEZCUXp0QlFVTnVSQ3huUWtGQlRTeFBRVUZQTEZWQlFWVTdRVUZEZGtJc1owSkJRVTBzVVVGQlVTeG5Ra0ZCWjBJc1ZVRkJWU3haUVVGWkxFTkJRVU1zUlVGQlJTeExRVUZMTzBGQlF6VkVMSEZDUVVGWExFbEJRVWs3UVVGRFppeHBRa0ZCVHl4dlFrRkJReXhYUVVGTkxFOUJRVTBzVjBGQlZTeFBRVUZQTEVkQlFVY3NTVUZCU1N4VFFVRk5MRXRCUVVzc1NVRkJTVHRCUVVGQkxGRkJRemRFTzBGQlEwRXNaVUZCVHl4dlFrRkJReXhUUVVGSk8wRkJRVUVzVFVGRFpDeEhRVU5HTzBGQlFVRTdRVUZCUVN4RlFVTkdPMEZCUlVvN1FVRnZRa0VzVTBGQlV5eHRRa0ZCYlVJN1FVRkRNVUlzVTBGQlR6dEJRVUZCTEVsQlFVTTdRVUZCUVR0QlFVRkJMRTFCUTA0c1owSkJRV2RDUVN4TFFVRkpMSFZDUVVGMVFqdEJRVUZCTEUxQlF6TkRMR0ZCUVdFc2IwSkJRVzlDTEVkQlFVY3NUMEZCU3l4SlFVRkpMRU5CUVVNN1FVRkJRU3hOUVVNNVF5dzRRa0ZCUXl4WFFVRk5MRTlCUVUwc2IwSkJRVzFDTEU5QlFVMHNZVUZCU3p0QlFVRkJPMEZCUVVFc1JVRkROME03UVVGRFJqdEJRVVZCTEZOQlFWTXNVMEZCVXp0QlFVTm9RaXhUUVVGUExHOUNRVUZETEZGQlFVc3NUMEZCVHl4aFFVTnFRaXhYUVVGRFF5eHBRa0ZEUVR0QlFVRkJMRWxCUVVNN1FVRkJRVHRCUVVGQkxFMUJRME1zVDBGQlRUdEJRVUZCTEUxQlEwNHNUMEZCVDBFN1FVRkJRVHRCUVVGQkxFVkJRMVFzUjBGRlNqdEJRVU5HTzBGQlJVRXNVMEZCVTBNc1VVRkJUenRCUVVOa0xGTkJRVThzYjBKQlFVTXNVVUZCU3l4UFFVRlBMR0ZCUTJwQ0xGZEJRVU5ETEZWQlFWTXNiMEpCUVVNc1YwRkJUU3hQUVVGUFFTeFBRVUZOTEVkQlEycERPMEZCUTBZN1FVRkZaU3hUUVVGU0xFbEJRWEZDTEZOQlFYTkNMRk5CUVRSQ08wRkJRelZGTEZGQlFVMHNSVUZCUlN4TFFVRkxMRTFCUVUwc1RVRkJUU3hKUVVGSlF5eFBRVUZOTzBGQlJXNURMRk5CUTBVN1FVRkJRU3hKUVVGRE8wRkJRVUU3UVVGQlFTeE5RVU5ETEU5QlFVMDdRVUZCUVN4TlFVTk9MRmRCUVZVN1FVRkJRU3hOUVVOV0xGbEJRVms3UVVGQlFTeE5RVU5hTEdGQlFXRkJMRTlCUVUwc1dVRkJXVHRCUVVGQkxFMUJReTlDTEdGQlFXRTdRVUZCUVN4TlFVTmlPMEZCUVVFc1RVRkRRU3hQUVVGUFFTeFBRVUZOTEUxQlFVMDdRVUZCUVN4TlFVTnVRaXhSUVVGUkxFMUJRVTBzVDBGQlR6dEJRVUZCTEUxQlJYSkNMQ3RDUVVGRExHVkJRME03UVVGQlFUdEJRVUZCTEZWQlFVTTdRVUZCUVR0QlFVRkJMRmxCUTBNc1UwRkJUenRCUVVGQkxGbEJRMUFzVDBGQlRUdEJRVUZCTEZsQlEwNHNVVUZCVVVvc1MwRkJTU3hOUVVGTk8wRkJRVUVzV1VGRGJFSXNTMEZCU1R0QlFVRkJMRmxCUTBvN1FVRkJRVHRCUVVGQkxHZENRVUZETzBGQlFVRTdRVUZCUVN4clFrRkRReXhQUVVGTk8wRkJRVUVzYTBKQlEwNHNWMEZCVnl4TlFVRk5MRzFDUVVGdFFpeERRVUZETEdkQ1FVRm5RaXhKUVVGSkxFTkJRVU03UVVGQlFTeHJRa0ZGTVVRN1FVRkJRU3h2UWtGQlF6dEJRVUZCTzBGQlFVRXNjMEpCUTBNc1VVRkJVVUVzUzBGQlNTeE5RVUZOTzBGQlFVRXNjMEpCUld4Q08wRkJRVUVzTkVOQlFVTkZMRTlCUVVFc1JVRkJTenRCUVVGQkxIZENRVU5PTEc5Q1FVRkRMRmRCUVZFN1FVRkJRVHRCUVVGQk8wRkJRVUVzYTBKQlExZzdRVUZCUVR0QlFVRkJMR05CUTBZN1FVRkJRU3hqUVVOQkxHOUNRVUZETEdOQlFWYzdRVUZCUVR0QlFVRkJPMEZCUVVFc1VVRkRaRHRCUVVGQkxGRkJRMEU3UVVGQlFTeFZRVUZETzBGQlFVRTdRVUZCUVN4WlFVTkRMRk5CUVU4N1FVRkJRU3haUVVOUUxGRkJRVkZHTEV0QlFVa3NUVUZCVFR0QlFVRkJMRmxCUTJ4Q0xFOUJRVTA3UVVGQlFTeFpRVU5PTERoQ1FVRkRMR1ZCUVZrN1FVRkJRVHRCUVVGQkxGRkJRMlk3UVVGQlFTeFJRVU5CTzBGQlFVRXNWVUZCUXp0QlFVRkJPMEZCUVVFc1dVRkRReXhUUVVGUE8wRkJRVUVzV1VGRFVDeFBRVUZOTzBGQlFVRXNXVUZEVGl4UlFVRlJRU3hMUVVGSkxFMUJRVTA3UVVGQlFTeFpRVU5zUWl4TFFVRkpPMEZCUVVFc1dVRkRTanRCUVVGQkxHdERRVUZETEdOQlFWYzdRVUZCUVN4alFVTmFPMEZCUVVFc1owSkJRVU03UVVGQlFUdEJRVUZCTEd0Q1FVTkRMRTlCUVUwN1FVRkJRU3hyUWtGRFRpeFhRVUZYTEUxQlFVMHNiMEpCUVc5Q0xFTkJRVU1zYVVKQlFXbENMRWxCUVVrc1EwRkJRenRCUVVGQkxHdENRVVUxUkN3clFrRkJReXhUUVVORE8wRkJRVUVzZDBOQlFVTXNhVUpCUVdNN1FVRkJRU3h2UWtGRFppeHZRa0ZCUXl4cFFrRkJZenRCUVVGQkxHOUNRVU5tTEc5Q1FVRkRMRzFDUVVGblFqdEJRVUZCTEc5Q1FVTnFRaXh2UWtGQlF5eHZRa0ZCYVVJN1FVRkJRU3h2UWtGRGJFSXNiMEpCUVVNc1ZVRkJUenRCUVVGQkxIRkNRVU5XTzBGQlFVRTdRVUZCUVN4alFVTkdPMEZCUVVFN1FVRkJRVHRCUVVGQkxGRkJRMFk3UVVGQlFTeFRRVU5HTzBGQlFVRTdRVUZCUVN4RlFVTkdPMEZCUlVvN096dEJUM0pSWlN4VFFVRlNMR1ZCUVdkRExGTkJRV2xDTEV0QlFUaENPMEZCUTNCR0xGRkJRVTBzVDBGQlR5eFJRVUZSTEUxQlFVMHNSMEZCUnp0QlFVVTVRaXhWUVVGUkxFdEJRVXNzUTBGQlF5eEhRVUZITzBGQlFVRXNTVUZEWml4TFFVRkxPMEZCUTBnc1kwRkJVU3hMUVVGTExFTkJRVU1zUjBGQlJ6dEJRVUZCTEZGQlEyWXNTMEZCU3p0QlFVRlZMR2xDUVVGUExFbEJRVWtzVjBGQlZ5eERRVUZETEZGQlFWRXNTVUZCU1N4RFFVRkRMRU5CUVVNN1FVRkJRU3hSUVVOd1JEdEJRVUZUTEdsQ1FVRlBMRWxCUVVrc01FSkJRVEJDTzBGQlFVRXNUVUZEYUVRN1FVRkJRU3hKUVVOR0xFdEJRVXM3UVVGRFNDeGpRVUZSTEV0QlFVc3NRMEZCUXl4SFFVRkhPMEZCUVVFc1VVRkRaaXhMUVVGTE8wRkJRVlVzYVVKQlFVOHNTVUZCU1N4cFFrRkJhVUlzUTBGQlF5eGpRVUZqTEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCUVVFc1VVRkRhRVU3UVVGQlV5eHBRa0ZCVHl4SlFVRkpMR2REUVVGblF6dEJRVUZCTEUxQlEzUkVPMEZCUVVFc1NVRkRSanRCUVVORkxHRkJRVThzU1VGQlNTeHJRa0ZCYTBJN1FVRkJRU3hGUVVOcVF6dEJRVU5HT3pzN1FVTnVRa0VzVDBGQlQwc3NXVUZCVnp0QlFXMURXQ3hUUVVGVExGbEJRMW9zVFVGRFFTeFZRVU5sTzBGQlEyWXNVMEZCVDBNc1QwRkJUU3hoUVVGaExFMUJRVTBzUTBGQlF5eE5RVUZqTEZWQlFXZERPMEZCUXpORkxHRkJRVk1zVFVGQlRTeExRVUZMTzBGQlFVRXNSVUZEZUVJc1EwRkJRenRCUVVOTU96czdRVU4wUTBFc1NVRkJUU3hOUVVGTk8wRkJSVXdzVTBGQlV5eGpRVUZ6UWp0QlFVTndReXhOUVVGSk8wRkJRMFlzVTBGQlN5eFJRVUZSTEdsRFFVRkhMR1ZCUVdVc1IwRkJSeXhaUVVGWk8wRkJRemxETEdkQ1FVRkpMRlZCUVZVc1owSkJRV2RDTzBGQlF6bENMRmRCUVU4c1IwRkJSeXhIUVVGSE8wRkJRVUVzUlVGRFppeFRRVUZSTEV0QlFVczdRVUZEV0N4aFFVRlRMQ3RDUVVFclFpeEhRVUZITzBGQlF6TkRMRmRCUVU4N1FVRkJRU3hGUVVOVU8wRkJRMFk3UVVGQlFTeERRVWRETEZkQlFWYzdRVUZEVml4UlFVRk5MRmxCUTBvc1MwRkJTeXhYUVVGWExHbERRVUZITEd0Q1FVRnJRaXhGUVVOc1F5eE5RVUZOTEVsQlFVazdRVUZIWml4alFVRlpPMEZCUlZvc1dVRkRSenRCUVVGQkxFbEJRVkVzVlVGRFVDeFpRVUZaTEUxQlFVMHNWMEZCVnp0QlFVRkJMRVZCUXk5Q08wRkJRMG9zUjBGQlJ6czdPMEZETlVKSUxFOUJRVTlETEd0Q1FVRnBRanM3TzBGRFJuaENMRTlCUVU5RExGVkJRVk03UVVGRGFFSXNUMEZCVDBNc1ZVRkJVenRCUVVOb1FpeFBRVUZQTEZOQlFWTTdRVUZEYUVJc1QwRkJUME1zVjBGQlZUdEJRVU5xUWl4UFFVRlBMR2xDUVVGcFFqdEJRVU40UWl4UFFVRlBMRmRCUVZjN1FVRkZiRUlzVTBGQlV5eFBRVUZQTEUxQlFYTkNPMEZCUTNCRExGRkJRVTBzV1VGQldVTXNTMEZCU1N4VlFVRlZMR2RDUVVGblFrTXNTMEZCU1N4UlFVRlJMRmxCUVZrc1EwRkJSVHRCUVVNeFJTeFRRVUZQTEZGQlFWRXNWVUZCVlN4VFFVRlRMRWxCUVVrN1FVRkRlRU03UVVGRlFTeFRRVUZUTEZkQlFWY3NUVUZCWXp0QlFVTm9ReXhUUVVGUFF5eE5RVUZMTEZWQlFWVXNUVUZCVFVFc1RVRkJTeXhUUVVGVExFMUJRVTA3UVVGRGJFUTdRVUZGUVN4VFFVRlRMRXRCUVV0RExFOUJRV01zVTBGQlV5eFRRVUZUTzBGQlF6VkRMRk5CUVU5RUxFMUJRVXNzVTBGQlV5eHZRa0ZCYjBKRExFdEJRVWtzUlVGQlJTeFBRVUZQTEUxQlFVMDdRVUZET1VRN1FVRkZRU3hUUVVGVExGRkJRVkVzUjBGQk5rSTdRVUZETlVNc1VVRkJUU3hGUVVGRkxFdEJRVXNzVVVGQlVTeFRRVUZUTEVsQlFVa3NXVUZCV1R0QlFVTTVReXhWUVVGUkxFVkJRVVVzVTBGQlV6dEJRVUZCTEVsQlEycENMRXRCUVVzN1FVRkRTQ3hoUVVGUE8wRkJRVUVzU1VGRFZDeExRVUZMTzBGQlEwZ3NZVUZCVHp0QlFVRkJMRWxCUTFRc1MwRkJTenRCUVVGQkxFbEJRMHc3UVVGRFJTeGhRVUZQTzBGQlFVRXNSVUZEV0R0QlFVTkdPMEZCVFdVc1UwRkJVaXhoUVVFNFFpeEZRVUZGTEdOQlFXTXNSVUZCUlN4SFFVRnpRanRCUVVNelJTeFRRVU5GTEc5Q1FVRkRMRWxCUVVrc1QwRkJTaXhGUVVGVkxHRkJRV0VzUzBGRGRFSTdRVUZCUVN4SlFVRkRPMEZCUVVFN1FVRkJRU3hOUVVORExHTkJRV003UVVGQlFTeE5RVU5rTEU5QlFVOHNaMEpCUVdkQ0xGRkJRVkVzUTBGQlF5eERRVUZETzBGQlFVRXNUVUZEYWtNc1lVRkJZVWdzUzBGQlNTeFpRVUZaTzBGQlFVRXNUVUZGTjBJN1FVRkJRU3cyUWtGQlF5eFRRVUZKTEU5QlFVMHNWVUZEVUR0QlFVRkJMR0ZCUVVVc1YwRkJWeXhQUVVGUExFVkJRVVVzV1VGQldTeE5RVU5zUXp0QlFVRkJMRmxCUVVNN1FVRkJRVHRCUVVGQkxHTkJRME1zVDBGQlRUdEJRVUZCTEdOQlEwNHNVMEZCVXl4UlFVRlJMRVZCUVVVc1YwRkJWeXhGUVVGRkxGbEJRVms3UVVGQlFTeGpRVU0xUXl4VlFVRlZMRVZCUVVVc1YwRkJWeXhGUVVGRk8wRkJRVUU3UVVGQlFTeFZRVU16UWp0QlFVRkJMRlZCUlVZN1FVRkJRU3haUVVGRE8wRkJRVUU3UVVGQlFTeGpRVU5ETEU5QlFVMDdRVUZCUVN4alFVTk9MRkZCUVZGQkxFdEJRVWtzVFVGQlRUdEJRVUZCTEdOQlEyeENMRmRCUVZjc1RVRkJUU3hqUVVGak8wRkJRVUVzWTBGREwwSXNUMEZCVHl4RlFVRkZMRmRCUVZjN1FVRkJRVHRCUVVGQkxGVkJRM1JDTzBGQlFVRXNWVUZEUVR0QlFVRkJMRmxCUVVNN1FVRkJRVHRCUVVGQkxHTkJRME1zVDBGQlRUdEJRVUZCTEdOQlEwNHNVMEZCVHp0QlFVRkJMR05CUTFBc1VVRkJVVUVzUzBGQlNTeE5RVUZOTzBGQlFVRXNZMEZEYkVJc1QwRkJUeXhMUVVGTExFVkJRVVVzU1VGQlNUdEJRVUZCTzBGQlFVRXNWVUZEY0VJN1FVRkJRU3hWUVVOQkxHOUNRVUZETEZsQlFVOHNWMEZCVnl4TlFVRk5MRVZCUVVVc1VVRkJVU3hIUVVOcVF5dzRRa0ZCUXl4WFFVRk5MRlZCUVZNc2VVSkJRWGRDTEVkQlF6RkRPMEZCUVVFc1YwRkRSanRCUVVGQkxGRkJRMEVzYjBKQlFVTkJMRXRCUVVrc1YwRkJTaXhGUVVGakxGTkJRVThzVFVGQlF6dEJRVUZCTEZGQlEzWkNMSEZDUVVGRExGTkJRVWtzVDBGQlRTeFhRVU5TTzBGQlFVRXNXVUZCUlN4VFFVRlRMRmRCUVZjc1JVRkJSU3hMUVVGTExFdEJRelZDTEc5Q1FVRkRMRmRCUVUwc1VVRkJVVUVzUzBGQlNTeE5RVUZOTEU5QlFVOHNUMEZCVFN4VFFVRlJMRTFCUVUwc1JVRkJSU3hQUVVGUE8wRkJRVUVzVlVGRk9VUXNSVUZCUlN4VFFVRlRMRTlCUVU4c1JVRkJSU3hMUVVGTExFdEJRM2hDTEc5Q1FVRkRMRk5CUVVrc1VVRkJVVUVzUzBGQlNTeE5RVUZOTEU5QlFVOHNUMEZCVFN4alFVTnNRenRCUVVGQkxGbEJRVU03UVVGQlFUdEJRVUZCTEdOQlEwTXNWVUZCVlN4RlFVRkZPMEZCUVVFc1kwRkRXaXhSUVVGUlFTeExRVUZKTEUxQlFVMDdRVUZCUVN4alFVTnNRaXhSUVVGUlFTeExRVUZKTEUxQlFVMDdRVUZCUVR0QlFVRkJMRlZCUTNCQ0xFZEJRMFk3UVVGQlFTeFZRVVZHTEhGQ1FVRkRMRk5CUVVrc1lVRkJZVUVzUzBGQlNTeFpRVUZaTEZWQlEyaERPMEZCUVVFN1FVRkJRU3hqUVVGRE8wRkJRVUU3UVVGQlFTeG5Ra0ZEUXl4UFFVRk5PMEZCUVVFc1owSkJRMDRzVVVGQlVVRXNTMEZCU1N4TlFVRk5PMEZCUVVFc1owSkJRMnhDTEZGQlFWRTdRVUZCUVN4blFrRkRVaXhQUVVGUExFVkJRVVU3UVVGQlFTeG5Ra0ZEVkN4WFFVRlhMRTFCUVUwc1kwRkJZenRCUVVGQk8wRkJRVUVzV1VGRGFrTTdRVUZCUVN4WlFVTkRMRVZCUVVVc1VVRkRSRHRCUVVGQkxHTkJRVU03UVVGQlFUdEJRVUZCTEdkQ1FVTkRMRTlCUVUwN1FVRkJRU3huUWtGRFRpeE5RVUZKTzBGQlFVRXNaMEpCUTBvc1YwRkJVenRCUVVGQkxHZENRVU5VTEZGQlFWRkJMRXRCUVVrc1RVRkJUVHRCUVVGQkxHZENRVU5zUWl4UlFVRlJPMEZCUVVFc1owSkJRMUlzVTBGQlUwRXNTMEZCU1N4alFVRmpPMEZCUVVFc1owSkJRek5DTEU5QlFVOHNSVUZCUlR0QlFVRkJPMEZCUVVFc1dVRkRXRHRCUVVGQkxHRkJSVW83UVVGQlFTeFhRVU5HTzBGQlFVRXNVVUZEUXl4RlFVRkZMRkZCUVZFc1UwRkJVeXhMUVVOc1FpeHZRa0ZCUXl4VFFVRkpMRTlCUVUwc1YwRkRVaXhaUVVGRkxGRkJRVkVzU1VGQlNTeERRVUZETEVWQlFVVXNUMEZCVHl4SFFVRkhMRTFCUXpGQ0xHOUNRVUZETEZsQlFVOHNVMEZCVHl4TlFVRkRMRmRCUVZjc1RVRkJUU3hGUVVGRkxFOUJRVThzUlVGQlJTeEhRVU14UXl3NFFrRkJReXhYUVVGTkxFOUJRV01zVVVGQlVVRXNTMEZCU1N4TlFVRk5MRkZCUVZFc1UwRkJUeXhOUVVGRExFZEJRM3BFTEVOQlEwUXNSMEZEU0R0QlFVRkJPMEZCUVVFN1FVRkJRU3hGUVVWS0xFZEJRMFk3UVVGRlNqczdPMEZFTlVkbExGTkJRVklzYlVKQlFXOURMRk5CUVhOQ08wRkJSUzlFTEZGQlFVMHNVMEZCVTBrc1lVRkJXU3haUVVGWk8wRkJSWFpETEZGQlFVMHNRMEZCUXl4bFFVRmxMR2RDUVVGblFpeEpRVUZKTzBGQlFVRXNTVUZEZUVNc1NVRkJTU3hOUVVGblF6dEJRVUZCTEVWQlEzUkRPMEZCUlVFc1VVRkJUU3hyUWtGQmEwSXNUMEZCVHl4UlFVRlJMRmxCUVZrc1EwRkJReXhIUVVGSExFbEJRVWtzWVVGQllUdEJRVU4wUlN4VlFVRk5MR1ZCUVdVc1QwRkJUeXhwUWtGQmFVSXNSVUZCUlR0QlFVVXZReXhSUVVGSkxGbEJRVmtzWTBGQll5eEpRVUZKTEVWQlFVVXNTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkJSU3hQUVVGUExFVkJRVVVzUjBGQlJ6dEJRVU0xUkN4MVFrRkJhVUlzUTBGQlF5eFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVU4c1JVRkJSU3hQUVVGUExFdEJRVXNzWlVGQlpTeERRVUZGTEVOQlFVTTdRVUZCUVN4SlFVTXhSU3hQUVVGUE8wRkJRMHdzZFVKQlFXbENMRU5CUVVNc1QwRkJUeXhEUVVGRExHTkJRV01zUjBGQlJ5eEZRVUZGTEVOQlFVTTdRVUZCUVN4SlFVTm9SRHRCUVVGQkxFVkJRMFlzUTBGQlF6dEJRVVZFTEZGQlFVMHNhMEpCUVd0Q0xFOUJRVThzVVVGQlVTeFpRVUZaTEVOQlFVTXNSMEZCUnl4UFFVRlBPMEZCUXpWRUxIRkNRVUZwUWl4RFFVRkRMRTlCUVU4c1IwRkJSeXhQUVVGUExFTkJRVU1zVFVGQlRTeEZRVUZGTEU5QlFVOHNSVUZCUlN4RFFVRkRPMEZCUVVFc1JVRkRlRVFzUTBGQlF6dEJRVVZFTEZsQlFWVXNUVUZCVFR0QlFVTmtMRmRCUVU4c1YwRkJWeXhsUVVGbE8wRkJRMnBETEZkQlFVOHNWMEZCVnl4bFFVRmxPMEZCUVVFc1JVRkRia01zUTBGQlF6dEJRVVZFTEZOQlEwVTdRVUZCUVN4SlFVRkRPMEZCUVVFN1FVRkJRU3hOUVVORExFZEJRVWNzUTBGQlF5eFRRVUZUTEZWQlFWVXNUVUZCVFN4TFFVRkxMRkZCUVZFc1EwRkJRenRCUVVGQkxFMUJRek5ETEU5QlFVMDdRVUZCUVN4TlFVTk9MRmxCUVZrN1FVRkJRU3hOUVVOYUxHRkJRV0U3UVVGQlFTeE5RVU5pTEZOQlFWTXNZMEZCWXl4RFFVRkRMRTlCUVU4N1FVRkROMElzSzBKQlFYVkNMRWRCUVVjc1RVRkJUVHRCUVVOb1F5eGxRVUZQTEVkQlFVY3NVMEZCVXp0QlFVRkJMRTFCUVVVc1EwRkJRenRCUVVGQkxFMUJSWGhDTEZGQlFWRkRMRTlCUVUwc1lVRkJZU3hOUVVGTlFTeFBRVUZOTEdGQlFXRTdRVUZCUVN4TlFVVndSQ3c0UWtGQlF5eFRRVUZKTEdGQlFXRkRMRXRCUVVrc1dVRkJXU3hWUVVOb1F5dzRRa0ZCUXl4UFFVRkpMRTFCUVUwc1pVRkRVaXhYUVVGRExHbENRVUZwUWl4dlFrRkJReXhuUWtGQllTeGpRVUUwUWl4SFFVTXZSQ3hIUVVOR08wRkJRVUU3UVVGQlFTeEZRVU5HTzBGQlJVbzdPenRCUldwRVpTeFRRVUZTTEZWQlFUSkNMRk5CUVhOQ0xGTkJRVFJDTzBGQlEyeEdMRk5CUVU4N1FVRkJRU3hKUVVGRE8wRkJRVUU3UVVGQlFTeE5RVU5PTEU5QlFVMDdRVUZCUVN4TlFVTk9MRmRCUVZVN1FVRkJRU3hOUVVOV0xGbEJRVms3UVVGQlFTeE5RVU5hTzBGQlFVRXNUVUZEUVN4UFFVRlBReXhQUVVGTkxFMUJRVTA3UVVGQlFTeE5RVU51UWl4aFFVRmhPMEZCUVVFc1RVRkRZaXhoUVVGaFFTeFBRVUZOTEZsQlFWazdRVUZCUVN4TlFVTXZRaXhUUVVGVFFTeFBRVUZOTEZGQlFWRTdRVUZCUVN4TlFVTjJRaXhWUVVGVk8wRkJRVUVzVFVGRlZqdEJRVUZCTEZGQlFVTTdRVUZCUVR0QlFVRkJMRlZCUTBNc1QwRkJUVHRCUVVGQk8wRkJRVUVzVFVGRFVqdEJRVUZCTzBGQlFVRXNSVUZEUmp0QlFVTkdPenM3UVVOYVFTeFRRVUZUTEdsQ1FVRnBRaXhWUVVFNFFqdEJRVU4wUkN4UlFVRk5MR2RDUVVGblFqdEJRVU4wUWl4UlFVRk5MRlZCUVZVN1FVRkZhRUlzVVVGQlRTeHJRa0ZCYTBJc1UwRkJVeXhMUVVGTExFOUJRVXNzUlVGQlJTeFZRVUZWTEdGQlFXRTdRVUZEY0VVc1VVRkJUU3haUVVGWkxGTkJRVk1zUzBGQlN5eFBRVUZMTEVWQlFVVXNWVUZCVlN4UFFVRlBPMEZCUlhoRUxGTkJRVThzYlVKQlFXMUNMR0ZCUVdFc1UwRkJVeXhEUVVGRE8wRkJRMjVFTzBGQlJVRXNXVUZCU1N4TlFVRk5PMEZCUVVFc1JVRkRVaXhMUVVGTExGbEJRVms3UVVGQlFTeEZRVU5xUWl4alFVRmpPMEZCUVVFc1JVRkRaRHRCUVVGQkxFVkJRMEVzVDBGQlR6dEJRVU5NTEZWQlFVMHNaMEpCUVdkQ0xHbENRVUZwUWl4WlFVRkpMR0ZCUVdFc1EwRkJRenRCUVVONlJDeFJRVUZKTEdWQlFXVXNUMEZCVHp0QlFVTXhRaXgxUWtGQmJVSXNZVUZCWVR0QlFVTm9ReXhqUVVGVkxHVkJRV1VzWVVGQllUdEJRVVYwUXl4VlFVRk5PMEZCUVVFc2IwTkJRWFZETEdOQlFXTXNTMEZCU3l4RlFVRkZPMEZCUVVFc1JVRkRjRVU3UVVGRFJpeERRVUZET3lJc0NpQWdJbTVoYldWeklqb2dXeUpIVEdsaUlpd2dJbTF2WkNJc0lDSndZWFJqYUNJc0lDSk5jSEpwY3lJc0lDSk9iM1JwWm1sallYUnBiMjRpTENBaVIwOWlhbVZqZENJc0lDSnpibUZyWldsbWVTSXNJQ0p6Ym1GclpXbG1lU0lzSUNKelpYUWlMQ0FpUjA5aWFtVmpkQ0lzSUNKclpYa2lMQ0FpYjJKcVpXTjBJaXdnSWtkUFltcGxZM1FpTENBaWJXOWtJaXdnSWtkUFltcGxZM1FpTENBaWNtVnRiM1psSWl3Z0lrZFBZbXBsWTNRaUxDQWljbVZ4ZFdWemRFaGhibVJzWlhJaUxDQWlSMHhwWWlJc0lDSkJaSGNpTENBaVFYTjBZV3dpTENBaVIzUnJJaXdnSWtkMGF5SXNJQ0pIVEdsaUlpd2dJa0Z6ZEdGc1NVOGlMQ0FpUVhOMFlXeEpUeUlzSUNKcGJuUmxjblpoYkNJc0lDSnpaWFFpTENBaVIweHBZaUlzSUNKSGRHc2lMQ0FpUVhOMFlXd2lMQ0FpUjNScklpd2dJa2RwYnlJc0lDSkhUMkpxWldOMElpd2dJa2QwYXlJc0lDSkhhVzhpTENBaVkzTnpJaXdnSWtkUFltcGxZM1FpTENBaWFXNWtaWGdpTENBaVIzUnJJaXdnSWtGemRHRnNJaXdnSW5kcFpta2lMQ0FpZDJseVpXUWlMQ0FpUjNScklpd2dJbTFsYlc5eWVWVnpZV2RsSWl3Z0lsUnBiV1VpTENBaWRHbHRaU0lzSUNKQmMzUmhiQ0lzSUNKQmMzUmhiQ0lzSUNKQmMzUmhiQ0lzSUNKQmMzUmhiRTV2ZEdsbVpDSXNJQ0pIZEdzaUxDQWlSMlJySWl3Z0lrZE1hV0lpTENBaVIzUnJJaXdnSWtka2F5SXNJQ0pIVEdsaUlpd2dJblJwYldVaUxDQWlRWE4wWVd4T2IzUnBabVFpTENBaVFYTjBZV3dpTENBaVIzUnJJaXdnSWtGemRHRnNJbDBLZlFvPQo=
EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@